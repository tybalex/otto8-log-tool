2024-08-06T02:15:41.618136670Z I0806 02:15:41.617248       1 main.go:210] CLI flags config: {etcdEndpoints:http://127.0.0.1:4001,http://127.0.0.1:2379 etcdPrefix:/coreos.com/network etcdKeyfile: etcdCertfile: etcdCAFile: etcdUsername: etcdPassword: version:false kubeSubnetMgr:true kubeApiUrl: kubeAnnotationPrefix:flannel.alpha.coreos.com kubeConfigFile: iface:[] ifaceRegex:[] ipMasq:true ifaceCanReach: subnetFile:/run/flannel/subnet.env publicIP: publicIPv6: subnetLeaseRenewMargin:60 healthzIP:0.0.0.0 healthzPort:0 iptablesResyncSeconds:5 iptablesForwardRules:true netConfPath:/etc/kube-flannel/net-conf.json setNodeNetworkUnavailable:true}
2024-08-06T02:15:41.618203220Z W0806 02:15:41.618033       1 client_config.go:618] Neither --kubeconfig nor --master was specified.  Using the inClusterConfig.  This might not work.
2024-08-06T02:15:41.640202605Z I0806 02:15:41.639978       1 kube.go:139] Waiting 10m0s for node controller to sync
2024-08-06T02:15:41.640225270Z I0806 02:15:41.640053       1 kube.go:455] Starting kube subnet manager
2024-08-06T02:15:41.651445032Z I0806 02:15:41.651217       1 kube.go:476] Creating the node lease for IPv4. This is the n.Spec.PodCIDRs: [10.52.0.0/24]
2024-08-06T02:15:41.651456254Z I0806 02:15:41.651321       1 kube.go:476] Creating the node lease for IPv4. This is the n.Spec.PodCIDRs: [10.52.1.0/24]
2024-08-06T02:15:41.651461414Z I0806 02:15:41.651336       1 kube.go:476] Creating the node lease for IPv4. This is the n.Spec.PodCIDRs: [10.52.2.0/24]
2024-08-06T02:15:42.641114416Z I0806 02:15:42.640973       1 kube.go:146] Node controller sync successful
2024-08-06T02:15:42.641141499Z I0806 02:15:42.641016       1 main.go:230] Created subnet manager: Kubernetes Subnet Manager - harvesterdev7
2024-08-06T02:15:42.641146979Z I0806 02:15:42.641025       1 main.go:233] Installing signal handlers
2024-08-06T02:15:42.641332742Z I0806 02:15:42.641265       1 main.go:442] Found network config - Backend type: vxlan
2024-08-06T02:15:42.641344966Z I0806 02:15:42.641321       1 match.go:210] Determining IP address of default interface
2024-08-06T02:15:42.642668352Z I0806 02:15:42.642604       1 match.go:263] Using interface with name mgmt-br and address 10.10.110.232
2024-08-06T02:15:42.642675596Z I0806 02:15:42.642635       1 match.go:285] Defaulting external address to interface address (10.10.110.232)
2024-08-06T02:15:42.642813425Z I0806 02:15:42.642731       1 vxlan.go:141] VXLAN config: VNI=1 Port=0 GBP=false Learning=false DirectRouting=false
2024-08-06T02:15:42.645825190Z I0806 02:15:42.645633       1 kube.go:621] List of node(harvesterdev7) annotations: map[string]string{"alpha.kubernetes.io/provided-node-ip":"10.10.110.232", "cluster.x-k8s.io/cluster-name":"local", "cluster.x-k8s.io/cluster-namespace":"fleet-local", "cluster.x-k8s.io/labels-from-machine":"", "cluster.x-k8s.io/machine":"custom-8c61162cc227", "management.cattle.io/pod-limits":"{\"cpu\":\"3450m\",\"memory\":\"3760Mi\"}", "management.cattle.io/pod-requests":"{\"cpu\":\"1150m\",\"memory\":\"1211Mi\",\"pods\":\"20\"}", "node.alpha.kubernetes.io/ttl":"0", "rke2.io/hostname":"harvesterdev7", "rke2.io/internal-ip":"10.10.110.232", "rke2.io/node-args":"[\"agent\",\"--node-label\",\"harvesterhci.io/managed=true\",\"--node-label\",\"rke.cattle.io/machine=3f9f632f-12f9-4656-8379-79f38a44ec8a\",\"--private-registry\",\"/etc/rancher/rke2/registries.yaml\",\"--server\",\"https://10.10.110.100:9345\",\"--token\",\"********\",\"--kubelet-arg\",\"max-pods=200\",\"--kubelet-arg\",\"node-labels=sriovgpu.harvesterhci.io/driver-needed=true,node-role.harvesterhci.io/worker=true,node=gpu\",\"--apiVersion\",\"audit.k8s.io/v1\",\"--kind\",\"Policy\",\"--omitStages\",\"ResponseStarted\",\"--omitStages\",\"ResponseComplete\",\"--rules\",\"[{level Metadata} {verbs [create delete patch]} {omitStages [ResponseStarted ResponseComplete]}]\"]", "rke2.io/node-config-hash":"3OYAVJVOKYPBXQP7EAEDFBJIYWAHQSV47QP5EZRXVMMDTWAFVMGQ====", "rke2.io/node-env":"{}", "volumes.kubernetes.io/controller-managed-attach-detach":"true"}
2024-08-06T02:15:42.682386780Z I0806 02:15:42.682241       1 kube.go:476] Creating the node lease for IPv4. This is the n.Spec.PodCIDRs: [10.52.3.0/24]
2024-08-06T02:15:42.684010593Z I0806 02:15:42.683901       1 main.go:567] Starting flannel in iptables mode
2024-08-06T02:15:42.684060951Z W0806 02:15:42.684016       1 main.go:495] no subnet found for key: FLANNEL_NETWORK in file: /run/flannel/subnet.env
2024-08-06T02:15:42.684066833Z W0806 02:15:42.684030       1 main.go:495] no subnet found for key: FLANNEL_SUBNET in file: /run/flannel/subnet.env
2024-08-06T02:15:42.684099296Z W0806 02:15:42.684042       1 main.go:530] no subnet found for key: FLANNEL_IPV6_NETWORK in file: /run/flannel/subnet.env
2024-08-06T02:15:42.684104727Z W0806 02:15:42.684080       1 main.go:530] no subnet found for key: FLANNEL_IPV6_SUBNET in file: /run/flannel/subnet.env
2024-08-06T02:15:42.684160045Z I0806 02:15:42.684090       1 iptables.go:113] Current network or subnet (10.52.0.0/16, 10.52.3.0/24) is not equal to previous one (0.0.0.0/0, 0.0.0.0/0), trying to recycle old iptables rules
2024-08-06T02:15:42.759132006Z I0806 02:15:42.758882       1 iptables.go:123] Setting up masking rules
2024-08-06T02:15:42.767006102Z I0806 02:15:42.766912       1 iptables.go:224] Changing default FORWARD chain policy to ACCEPT
2024-08-06T02:15:42.770585786Z I0806 02:15:42.770370       1 main.go:386] Wrote subnet file to /run/flannel/subnet.env
2024-08-06T02:15:42.770599503Z I0806 02:15:42.770393       1 main.go:390] Running backend.
2024-08-06T02:15:42.770643649Z I0806 02:15:42.770584       1 vxlan_network.go:65] watching for new subnet leases
2024-08-06T02:15:42.770825214Z I0806 02:15:42.770642       1 subnet.go:151] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xa340000, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xa0a6e0b, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x62, 0x61, 0x3a, 0x37, 0x35, 0x3a, 0x63, 0x65, 0x3a, 0x37, 0x32, 0x3a, 0x61, 0x31, 0x3a, 0x35, 0x34, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
2024-08-06T02:15:42.770832358Z I0806 02:15:42.770765       1 subnet.go:151] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xa340100, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xa0a6e47, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x30, 0x32, 0x3a, 0x33, 0x38, 0x3a, 0x61, 0x63, 0x3a, 0x34, 0x38, 0x3a, 0x65, 0x30, 0x3a, 0x30, 0x61, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
2024-08-06T02:15:42.770928676Z I0806 02:15:42.770839       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 10.10.110.11, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"ba:75:ce:72:a1:54"}, BackendV6Data: (nil)
2024-08-06T02:15:42.771245365Z I0806 02:15:42.771205       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 10.10.110.71, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"02:38:ac:48:e0:0a"}, BackendV6Data: (nil)
2024-08-06T02:15:42.771400899Z I0806 02:15:42.771276       1 subnet.go:151] Batch elem [0] is { lease.Event{Type:0, Lease:lease.Lease{EnableIPv4:true, EnableIPv6:false, Subnet:ip.IP4Net{IP:0xa340200, PrefixLen:0x18}, IPv6Subnet:ip.IP6Net{IP:(*ip.IP6)(nil), PrefixLen:0x0}, Attrs:lease.LeaseAttrs{PublicIP:0xa0a6e3d, PublicIPv6:(*ip.IP6)(nil), BackendType:"vxlan", BackendData:json.RawMessage{0x7b, 0x22, 0x56, 0x4e, 0x49, 0x22, 0x3a, 0x31, 0x2c, 0x22, 0x56, 0x74, 0x65, 0x70, 0x4d, 0x41, 0x43, 0x22, 0x3a, 0x22, 0x63, 0x61, 0x3a, 0x63, 0x31, 0x3a, 0x39, 0x33, 0x3a, 0x63, 0x66, 0x3a, 0x61, 0x38, 0x3a, 0x31, 0x34, 0x22, 0x7d}, BackendV6Data:json.RawMessage(nil)}, Expiration:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Asof:0}} }
2024-08-06T02:15:42.771444965Z I0806 02:15:42.771411       1 vxlan_network.go:100] Received Subnet Event with VxLan: BackendType: vxlan, PublicIP: 10.10.110.61, PublicIPv6: (nil), BackendData: {"VNI":1,"VtepMAC":"ca:c1:93:cf:a8:14"}, BackendV6Data: (nil)
2024-08-06T02:15:42.783620836Z I0806 02:15:42.783377       1 main.go:411] Waiting for all goroutines to exit
2024-08-06T02:15:42.801992784Z I0806 02:15:42.801873       1 iptables.go:370] bootstrap done
2024-08-06T02:15:42.837320733Z I0806 02:15:42.837211       1 iptables.go:370] bootstrap done
