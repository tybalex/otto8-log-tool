2024-08-06T01:56:42.669439785Z if [[ ${KUBERNETES_SERVICE_HOST} =~ .*:.* ]]; then
2024-08-06T01:56:42.669486350Z 	echo "KUBERNETES_SERVICE_HOST is using IPv6"
2024-08-06T01:56:42.669495346Z 	CHART="${CHART//%\{KUBERNETES_API\}%/[${KUBERNETES_SERVICE_HOST}]:${KUBERNETES_SERVICE_PORT}}"
2024-08-06T01:56:42.669503091Z else
2024-08-06T01:56:42.669510204Z 	CHART="${CHART//%\{KUBERNETES_API\}%/${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}}"
2024-08-06T01:56:42.669517216Z fi
2024-08-06T01:56:42.669542062Z 
2024-08-06T01:56:42.669549305Z set +v -x
2024-08-06T01:56:42.669561337Z + [[ '' != \t\r\u\e ]]
2024-08-06T01:56:42.669799090Z + export HELM_HOST=127.0.0.1:44134
2024-08-06T01:56:42.669807856Z + HELM_HOST=127.0.0.1:44134
2024-08-06T01:56:42.669844202Z + helm_v2 init --skip-refresh --client-only --stable-repo-url https://charts.helm.sh/stable/
2024-08-06T01:56:42.670028288Z + tiller --listen=127.0.0.1:44134 --storage=secret
2024-08-06T01:56:42.731269668Z Creating /home/klipper-helm/.helm/repository 
2024-08-06T01:56:42.731305383Z Creating /home/klipper-helm/.helm/repository/cache 
2024-08-06T01:56:42.731383786Z Creating /home/klipper-helm/.helm/repository/local 
2024-08-06T01:56:42.731405976Z Creating /home/klipper-helm/.helm/plugins 
2024-08-06T01:56:42.731468931Z Creating /home/klipper-helm/.helm/starters 
2024-08-06T01:56:42.731505638Z Creating /home/klipper-helm/.helm/cache/archive 
2024-08-06T01:56:42.731587056Z Creating /home/klipper-helm/.helm/repository/repositories.yaml 
2024-08-06T01:56:42.731590833Z Adding stable repo with URL: https://charts.helm.sh/stable/ 
2024-08-06T01:56:42.731699301Z Adding local repo with URL: http://127.0.0.1:8879/charts 
2024-08-06T01:56:42.733215153Z $HELM_HOME has been configured at /home/klipper-helm/.helm.
2024-08-06T01:56:42.733226313Z Not installing Tiller due to 'client-only' flag having been set
2024-08-06T01:56:42.734663823Z [main] 2024/08/06 01:56:42 Starting Tiller v2.17.0 (tls=false)
2024-08-06T01:56:42.734677768Z [main] 2024/08/06 01:56:42 GRPC listening on 127.0.0.1:44134
2024-08-06T01:56:42.734681685Z [main] 2024/08/06 01:56:42 Probes listening on :44135
2024-08-06T01:56:42.734685362Z [main] 2024/08/06 01:56:42 Storage driver is Secret
2024-08-06T01:56:42.734689610Z [main] 2024/08/06 01:56:42 Max history per release is 0
2024-08-06T01:56:42.738777119Z ++ timeout -s KILL 30 helm_v2 ls --all '^rke2-ingress-nginx$' --output json
2024-08-06T01:56:42.738798908Z ++ jq -r '.Releases | length'
2024-08-06T01:56:42.800510646Z [storage] 2024/08/06 01:56:42 listing all releases with filter
2024-08-06T01:56:42.822696044Z + V2_CHART_EXISTS=
2024-08-06T01:56:42.822825310Z + [[ '' == \1 ]]
2024-08-06T01:56:42.822855154Z + [[ '' == \v\2 ]]
2024-08-06T01:56:42.822879148Z + shopt -s nullglob
2024-08-06T01:56:42.822895007Z + [[ -f /config/ca-file.pem ]]
2024-08-06T01:56:42.823002002Z + [[ -f /tmp/ca-file.pem ]]
2024-08-06T01:56:42.823020225Z + [[ -n '' ]]
2024-08-06T01:56:42.823029813Z + helm_content_decode
2024-08-06T01:56:42.823056060Z + set -e
2024-08-06T01:56:42.823072250Z + ENC_CHART_PATH=/chart/rke2-ingress-nginx.tgz.base64
2024-08-06T01:56:42.823092317Z + CHART_PATH=/tmp/rke2-ingress-nginx.tgz
2024-08-06T01:56:42.823190425Z + [[ ! -f /chart/rke2-ingress-nginx.tgz.base64 ]]
2024-08-06T01:56:42.823292832Z + base64 -d /chart/rke2-ingress-nginx.tgz.base64
2024-08-06T01:56:42.825995778Z + CHART=/tmp/rke2-ingress-nginx.tgz
2024-08-06T01:56:42.826006978Z + set +e
2024-08-06T01:56:42.826011336Z + [[ install != \d\e\l\e\t\e ]]
2024-08-06T01:56:42.826015453Z + helm_repo_init
2024-08-06T01:56:42.826019170Z + grep -q -e 'https\?://'
2024-08-06T01:56:42.827592026Z + [[ helm_v3 == \h\e\l\m\_\v\3 ]]
2024-08-06T01:56:42.827685747Z + [[ /tmp/rke2-ingress-nginx.tgz == stable/* ]]
2024-08-06T01:56:42.830960685Z + [[ -n '' ]]
2024-08-06T01:56:42.830971625Z + helm_update install --set-string global.clusterCIDR=10.52.0.0/16 --set-string global.clusterCIDRv4=10.52.0.0/16 --set-string global.clusterDNS=10.53.0.10 --set-string global.clusterDomain=cluster.local --set-string global.rke2DataDir=/var/lib/rancher/rke2 --set-string global.serviceCIDR=10.53.0.0/16
2024-08-06T01:56:42.830980201Z + [[ helm_v3 == \h\e\l\m\_\v\3 ]]
2024-08-06T01:56:42.835740215Z ++ helm_v3 ls --all -f '^rke2-ingress-nginx$' --namespace kube-system --output json
2024-08-06T01:56:42.835905145Z ++ jq -r '"\(.[0].chart),\(.[0].status)"'
2024-08-06T01:56:42.836017510Z ++ tr '[:upper:]' '[:lower:]'
2024-08-06T01:56:42.947763344Z + LINE=rke2-ingress-nginx-4.9.100,deployed
2024-08-06T01:56:42.947791846Z + IFS=,
2024-08-06T01:56:42.947796084Z + read -r INSTALLED_VERSION STATUS _
2024-08-06T01:56:42.947902438Z + VALUES=
2024-08-06T01:56:42.947933765Z + for VALUES_FILE in /config/*.yaml
2024-08-06T01:56:42.947941068Z + VALUES=' --values /config/values-10_HelmChartConfig.yaml'
2024-08-06T01:56:42.947975321Z + [[ install = \d\e\l\e\t\e ]]
2024-08-06T01:56:42.947995808Z + [[ rke2-ingress-nginx-4.9.100 =~ ^(|null)$ ]]
2024-08-06T01:56:42.948074762Z + [[ deployed =~ ^(pending-install|pending-upgrade|pending-rollback)$ ]]
2024-08-06T01:56:42.948168022Z + [[ deployed == \d\e\p\l\o\y\e\d ]]
2024-08-06T01:56:42.948180044Z + echo 'Already installed rke2-ingress-nginx'
2024-08-06T01:56:42.948204528Z Already installed rke2-ingress-nginx
2024-08-06T01:56:42.948209297Z + [[ helm_v3 == \h\e\l\m\_\v\3 ]]
2024-08-06T01:56:42.948230315Z + helm_v3 mapkubeapis rke2-ingress-nginx --namespace kube-system
2024-08-06T01:56:43.022586887Z 2024/08/06 01:56:43 Release 'rke2-ingress-nginx' will be checked for deprecated or removed Kubernetes APIs and will be updated if necessary to supported API versions.
2024-08-06T01:56:43.022637111Z 2024/08/06 01:56:43 Get release 'rke2-ingress-nginx' latest version.
2024-08-06T01:56:43.054302840Z 2024/08/06 01:56:43 Check release 'rke2-ingress-nginx' for deprecated or removed APIs...
2024-08-06T01:56:43.057013742Z 2024/08/06 01:56:43 Finished checking release 'rke2-ingress-nginx' for deprecated or removed APIs.
2024-08-06T01:56:43.057026709Z 2024/08/06 01:56:43 Release 'rke2-ingress-nginx' has no deprecated or removed APIs.
2024-08-06T01:56:43.057032096Z 2024/08/06 01:56:43 Map of release 'rke2-ingress-nginx' deprecated or removed APIs to supported versions, completed successfully.
2024-08-06T01:56:43.071081521Z Upgrading rke2-ingress-nginx
2024-08-06T01:56:43.071136552Z + echo 'Upgrading helm_v3 chart'
2024-08-06T01:56:43.071145984Z + echo 'Upgrading rke2-ingress-nginx'
2024-08-06T01:56:43.071149759Z + shift 1
2024-08-06T01:56:43.071158970Z + helm_v3 upgrade --set-string global.clusterCIDR=10.52.0.0/16 --set-string global.clusterCIDRv4=10.52.0.0/16 --set-string global.clusterDNS=10.53.0.10 --set-string global.clusterDomain=cluster.local --set-string global.rke2DataDir=/var/lib/rancher/rke2 --set-string global.serviceCIDR=10.53.0.0/16 rke2-ingress-nginx /tmp/rke2-ingress-nginx.tgz --values /config/values-10_HelmChartConfig.yaml
2024-08-06T01:56:58.802271064Z Release "rke2-ingress-nginx" has been upgraded. Happy Helming!
2024-08-06T01:56:58.802299199Z NAME: rke2-ingress-nginx
2024-08-06T01:56:58.802303276Z LAST DEPLOYED: Tue Aug  6 01:56:43 2024
2024-08-06T01:56:58.802309836Z NAMESPACE: kube-system
2024-08-06T01:56:58.802312891Z STATUS: deployed
2024-08-06T01:56:58.802316157Z REVISION: 3
2024-08-06T01:56:58.802319141Z TEST SUITE: None
2024-08-06T01:56:58.802322096Z NOTES:
2024-08-06T01:56:58.802333885Z The ingress-nginx controller has been installed.
2024-08-06T01:56:58.802337401Z It may take a few minutes for the load balancer IP to be available.
2024-08-06T01:56:58.802340856Z You can watch the status by running 'kubectl get service --namespace kube-system rke2-ingress-nginx-controller --output wide --watch'
2024-08-06T01:56:58.802345023Z 
2024-08-06T01:56:58.802348118Z An example Ingress that makes use of the controller:
2024-08-06T01:56:58.802351123Z   apiVersion: networking.k8s.io/v1
2024-08-06T01:56:58.802354068Z   kind: Ingress
2024-08-06T01:56:58.802356962Z   metadata:
2024-08-06T01:56:58.802360107Z     name: example
2024-08-06T01:56:58.802363002Z     namespace: foo
2024-08-06T01:56:58.802365957Z   spec:
2024-08-06T01:56:58.802369352Z     ingressClassName: nginx
2024-08-06T01:56:58.802372337Z     rules:
2024-08-06T01:56:58.802375432Z       - host: www.example.com
2024-08-06T01:56:58.802378427Z         http:
2024-08-06T01:56:58.802381452Z           paths:
2024-08-06T01:56:58.802384857Z             - pathType: Prefix
2024-08-06T01:56:58.802388373Z               backend:
2024-08-06T01:56:58.802391798Z                 service:
2024-08-06T01:56:58.802395464Z                   name: exampleService
2024-08-06T01:56:58.802399050Z                   port:
2024-08-06T01:56:58.802402486Z                     number: 80
2024-08-06T01:56:58.802405601Z               path: /
2024-08-06T01:56:58.802408656Z     # This section is only required if TLS is to be enabled for the Ingress
2024-08-06T01:56:58.802411600Z     tls:
2024-08-06T01:56:58.802414605Z       - hosts:
2024-08-06T01:56:58.802417770Z         - www.example.com
2024-08-06T01:56:58.802420675Z         secretName: example-tls
2024-08-06T01:56:58.802423570Z 
2024-08-06T01:56:58.802427015Z If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:
2024-08-06T01:56:58.802429850Z 
2024-08-06T01:56:58.802432835Z   apiVersion: v1
2024-08-06T01:56:58.802435960Z   kind: Secret
2024-08-06T01:56:58.802438874Z   metadata:
2024-08-06T01:56:58.802441779Z     name: example-tls
2024-08-06T01:56:58.802445064Z     namespace: foo
2024-08-06T01:56:58.802447979Z   data:
2024-08-06T01:56:58.802451925Z     tls.crt: <base64 encoded cert>
2024-08-06T01:56:58.802455531Z     tls.key: <base64 encoded key>
2024-08-06T01:56:58.802459267Z   type: kubernetes.io/tls
2024-08-06T01:56:58.806878701Z + exit
