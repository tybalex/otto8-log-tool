apiVersion: v1
items:
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: 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
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.rke2-canal.v1
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-06T01:52:31Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: a7739c7ea81ca7a7674ea5507e65b51dd537a643
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"329a3992-dd84-434c-a828-0e7b4f501f98"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:fleet.cattle.io/bundle-id: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:home: {}
              f:keywords: {}
              f:kubeVersion: {}
              f:maintainers: {}
              f:name: {}
              f:sources: {}
              f:version: {}
            f:values:
              .: {}
              f:calico:
                .: {}
                f:calicoKubeControllers: {}
                f:clusterType: {}
                f:cniImage:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:datastoreType: {}
                f:disableFileLogging: {}
                f:felixDefaultEndpointToHostAction: {}
                f:felixFailsafeInboundHostPorts: {}
                f:felixFailsafeOutboundHostPorts: {}
                f:felixHealthEnabled: {}
                f:felixIptablesBackend: {}
                f:felixIptablesMarkMask: {}
                f:felixIptablesRefreshInterval: {}
                f:felixIpv6Support: {}
                f:felixLogSeverityScreen: {}
                f:felixPrometheusMetricsEnabled: {}
                f:felixXDPEnabled: {}
                f:flexVolumePluginDir: {}
                f:flexvolImage:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:ip6AutoDetectionMethod: {}
                f:ipAutoDetectionMethod: {}
                f:kubeControllerImage:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:masquerade: {}
                f:networkingBackend: {}
                f:nodeImage:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                f:typhaServiceName: {}
                f:usePodCIDR: {}
                f:vethuMTU: {}
                f:waitForDatastore: {}
              f:flannel:
                .: {}
                f:GBP: {}
                f:args: {}
                f:backend: {}
                f:backendPort: {}
                f:backendPortv6: {}
                f:directRouting: {}
                f:iface: {}
                f:image:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:keepaliveInterval: {}
                f:psk: {}
                f:regexIface: {}
                f:resources: {}
              f:global:
                .: {}
                f:clusterCIDRv4: {}
                f:clusterCIDRv6: {}
                f:systemDefaultRegistry: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:notes: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:global:
              .: {}
              f:clusterCIDR: {}
              f:clusterCIDRv4: {}
              f:clusterDNS: {}
              f:clusterDomain: {}
              f:rke2DataDir: {}
              f:serviceCIDR: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T01:52:31Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T01:52:31Z"
    name: rke2-canal
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.rke2-canal.v1
      uid: 329a3992-dd84-434c-a828-0e7b4f501f98
    resourceVersion: "1497"
    uid: 97a155f7-2aae-46b2-a421-086940085cf8
  spec:
    chart:
      metadata:
        annotations:
          fleet.cattle.io/bundle-id: rke2
        apiVersion: v1
        appVersion: v3.27.3
        description: Install Canal Network Plugin.
        home: https://www.projectcalico.org/
        keywords:
        - canal
        kubeVersion: '>= v1.27.13'
        maintainers:
        - email: charts@rancher.com
          name: Rancher Labs
        name: rke2-canal
        sources:
        - https://github.com/rancher/rke2-charts
        version: v3.27.3-build2024042301
      values:
        calico:
          calicoKubeControllers: false
          clusterType: k8s,canal
          cniImage:
            repository: rancher/hardened-calico
            tag: v3.27.3-build20240423
          datastoreType: kubernetes
          disableFileLogging: true
          felixDefaultEndpointToHostAction: ACCEPT
          felixFailsafeInboundHostPorts: "null"
          felixFailsafeOutboundHostPorts: "null"
          felixHealthEnabled: true
          felixIptablesBackend: auto
          felixIptablesMarkMask: "0xffff0000"
          felixIptablesRefreshInterval: 60
          felixIpv6Support: false
          felixLogSeverityScreen: info
          felixPrometheusMetricsEnabled: true
          felixXDPEnabled: false
          flexVolumePluginDir: /var/lib/kubelet/volumeplugins
          flexvolImage:
            repository: rancher/hardened-calico
            tag: v3.27.3-build20240423
          ip6AutoDetectionMethod: first-found
          ipAutoDetectionMethod: first-found
          kubeControllerImage:
            repository: rancher/hardened-calico
            tag: v3.27.3-build20240423
          masquerade: true
          networkingBackend: none
          nodeImage:
            repository: rancher/hardened-calico
            tag: v3.27.3-build20240423
          resources:
            requests:
              cpu: 250m
          typhaServiceName: none
          usePodCIDR: true
          vethuMTU: 1450
          waitForDatastore: true
        flannel:
          GBP: false
          args:
          - --ip-masq
          - --kube-subnet-mgr
          backend: vxlan
          backendPort: 0
          backendPortv6: 0
          directRouting: false
          iface: "null"
          image:
            repository: rancher/hardened-flannel
            tag: v0.25.1-build20240423
          keepaliveInterval: 0
          psk: 0
          regexIface: "null"
          resources: null
        global:
          clusterCIDRv4: "null"
          clusterCIDRv6: "null"
          systemDefaultRegistry: "null"
    helmVersion: 3
    info:
      description: Install complete
      firstDeployed: "2024-08-06T01:51:48Z"
      lastDeployed: "2024-08-06T01:51:48Z"
      notes: |
        Canal network plugin has been installed.

        NOTE: It may take few minutes until Canal image install CNI files and node become in ready state.
      status: deployed
    name: rke2-canal
    namespace: kube-system
    resources:
    - apiVersion: v1
      kind: ServiceAccount
      name: canal
      namespace: kube-system
    - apiVersion: v1
      kind: ConfigMap
      name: rke2-canal-config
      namespace: kube-system
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: bgpconfigurations.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: bgppeers.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: blockaffinities.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: caliconodestatuses.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: clusterinformations.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: felixconfigurations.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: globalnetworkpolicies.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: globalnetworksets.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: hostendpoints.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: ipamblocks.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: ipamconfigs.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: ipamhandles.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: ippools.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: ipreservations.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: kubecontrollersconfigurations.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: networkpolicies.crd.projectcalico.org
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: networksets.crd.projectcalico.org
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: calico-node
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: flannel
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: canal-flannel
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: canal-calico
    - apiVersion: apps/v1
      kind: DaemonSet
      name: rke2-canal
      namespace: kube-system
    values:
      global:
        clusterCIDR: 10.52.0.0/16
        clusterCIDRv4: 10.52.0.0/16
        clusterDNS: 10.53.0.10
        clusterDomain: cluster.local
        rke2DataDir: /var/lib/rancher/rke2
        serviceCIDR: 10.53.0.0/16
    version: 1
  status:
    observedGeneration: 1
    summary:
      state: deployed
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: 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
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.rke2-coredns.v1
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-06T01:52:31Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 1b99a7a962e96e395dc94b8fb6802474536e9e8f
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"875a41af-20bb-4cc0-8151-a6aaa145eeff"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:artifacthub.io/changes: {}
                f:fleet.cattle.io/bundle-id: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:home: {}
              f:icon: {}
              f:keywords: {}
              f:kubeVersion: {}
              f:maintainers: {}
              f:name: {}
              f:sources: {}
              f:type: {}
              f:version: {}
            f:values:
              .: {}
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:autoscaler:
                .: {}
                f:affinity: {}
                f:configmap:
                  .: {}
                  f:annotations: {}
                f:coresPerReplica: {}
                f:enabled: {}
                f:extraContainers: {}
                f:image:
                  .: {}
                  f:pullPolicy: {}
                  f:pullSecrets: {}
                  f:repository: {}
                  f:tag: {}
                f:includeUnschedulableNodes: {}
                f:livenessProbe:
                  .: {}
                  f:enabled: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:max: {}
                f:min: {}
                f:nodeSelector:
                  .: {}
                  f:kubernetes.io/os: {}
                f:nodesPerReplica: {}
                f:podAnnotations: {}
                f:preventSinglePointFailure: {}
                f:priorityClassName: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:tolerations: {}
              f:customAnnotations: {}
              f:customLabels: {}
              f:deployment:
                .: {}
                f:annotations: {}
                f:enabled: {}
                f:name: {}
              f:extraConfig: {}
              f:extraContainers: {}
              f:extraSecrets: {}
              f:extraVolumeMounts: {}
              f:extraVolumes: {}
              f:global:
                .: {}
                f:systemDefaultRegistry: {}
              f:hpa:
                .: {}
                f:enabled: {}
                f:maxReplicas: {}
                f:metrics: {}
                f:minReplicas: {}
              f:image:
                .: {}
                f:pullPolicy: {}
                f:pullSecrets: {}
                f:repository: {}
                f:tag: {}
              f:isClusterService: {}
              f:k8sApp: {}
              f:livenessProbe:
                .: {}
                f:enabled: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:nodeSelector:
                .: {}
                f:kubernetes.io/os: {}
              f:nodelocal:
                .: {}
                f:enabled: {}
                f:image:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:initimage:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:ip_address: {}
                f:ipvs: {}
                f:nodeSelector:
                  .: {}
                  f:kubernetes.io/os: {}
              f:podAnnotations: {}
              f:podDisruptionBudget: {}
              f:podSecurityContext: {}
              f:priorityClassName: {}
              f:prometheus:
                .: {}
                f:monitor:
                  .: {}
                  f:additionalLabels: {}
                  f:enabled: {}
                  f:interval: {}
                  f:namespace: {}
                f:service:
                  .: {}
                  f:annotations:
                    .: {}
                    f:prometheus.io/port: {}
                    f:prometheus.io/scrape: {}
                  f:enabled: {}
              f:rbac:
                .: {}
                f:create: {}
                f:pspEnable: {}
              f:readinessProbe:
                .: {}
                f:enabled: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:replicaCount: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:rollingUpdate:
                .: {}
                f:maxSurge: {}
                f:maxUnavailable: {}
              f:securityContext:
                .: {}
                f:capabilities:
                  .: {}
                  f:add: {}
              f:servers: {}
              f:service:
                .: {}
                f:annotations: {}
                f:ipFamilyPolicy: {}
                f:name: {}
              f:serviceAccount:
                .: {}
                f:annotations: {}
                f:create: {}
                f:name: {}
              f:serviceType: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:topologySpreadConstraints: {}
              f:zoneFiles: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:notes: {}
            f:readme: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:global:
              .: {}
              f:clusterCIDR: {}
              f:clusterCIDRv4: {}
              f:clusterDNS: {}
              f:clusterDomain: {}
              f:rke2DataDir: {}
              f:serviceCIDR: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T01:52:31Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T01:52:31Z"
    name: rke2-coredns
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.rke2-coredns.v1
      uid: 875a41af-20bb-4cc0-8151-a6aaa145eeff
    resourceVersion: "1488"
    uid: 54a5a314-b676-4c04-be29-5b3d8f34f0fa
  spec:
    chart:
      metadata:
        annotations:
          artifacthub.io/changes: |
            - kind: changed
              description: Ignore duplicate strings in the fullname helper template
            - kind: removed
              description: Removed deprecated "engine: gotpl" from the Chart.yaml
          fleet.cattle.io/bundle-id: rke2
        apiVersion: v2
        appVersion: 1.11.1
        description: CoreDNS is a DNS server that chains plugins and provides Kubernetes
          DNS Services
        home: https://coredns.io
        icon: https://coredns.io/images/CoreDNS_Colour_Horizontal.png
        keywords:
        - coredns
        - dns
        - kubedns
        kubeVersion: '>= v1.27.13'
        maintainers:
        - name: mrueg
        - name: haad
        - name: hagaibarel
        - name: shubham-cmyk
        name: rke2-coredns
        sources:
        - https://github.com/coredns/coredns
        type: application
        version: 1.29.002
      values:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - kube-dns
              topologyKey: kubernetes.io/hostname
        autoscaler:
          affinity: {}
          configmap:
            annotations: {}
          coresPerReplica: 256
          enabled: true
          extraContainers: "null"
          image:
            pullPolicy: IfNotPresent
            pullSecrets: "null"
            repository: rancher/hardened-cluster-autoscaler
            tag: v1.8.10-build20240124
          includeUnschedulableNodes: false
          livenessProbe:
            enabled: true
            failureThreshold: 3
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          max: 0
          min: 0
          nodeSelector:
            kubernetes.io/os: linux
          nodesPerReplica: 16
          podAnnotations: {}
          preventSinglePointFailure: true
          priorityClassName: "null"
          resources:
            limits:
              cpu: 100m
              memory: 64Mi
            requests:
              cpu: 25m
              memory: 16Mi
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
          - effect: NoExecute
            key: node-role.kubernetes.io/etcd
            operator: Exists
        customAnnotations: {}
        customLabels: {}
        deployment:
          annotations: {}
          enabled: true
          name: "null"
        extraConfig: {}
        extraContainers: "null"
        extraSecrets: "null"
        extraVolumeMounts: "null"
        extraVolumes: "null"
        global:
          systemDefaultRegistry: "null"
        hpa:
          enabled: false
          maxReplicas: 2
          metrics: "null"
          minReplicas: 1
        image:
          pullPolicy: IfNotPresent
          pullSecrets: "null"
          repository: rancher/hardened-coredns
          tag: v1.11.1-build20240305
        isClusterService: true
        k8sApp: kube-dns
        livenessProbe:
          enabled: true
          failureThreshold: 5
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        nodeSelector:
          kubernetes.io/os: linux
        nodelocal:
          enabled: false
          image:
            repository: rancher/hardened-dns-node-cache
            tag: 1.22.28-build20240125
          initimage:
            repository: rancher/hardened-dns-node-cache
            tag: 1.22.28-build20240125
          ip_address: 169.254.20.10
          ipvs: false
          nodeSelector:
            kubernetes.io/os: linux
        podAnnotations: {}
        podDisruptionBudget: {}
        podSecurityContext: {}
        priorityClassName: system-cluster-critical
        prometheus:
          monitor:
            additionalLabels: {}
            enabled: false
            interval: "null"
            namespace: "null"
          service:
            annotations:
              prometheus.io/port: "9153"
              prometheus.io/scrape: "true"
            enabled: false
        rbac:
          create: true
          pspEnable: false
        readinessProbe:
          enabled: true
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        replicaCount: 1
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 1
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
        servers:
        - plugins:
          - name: errors
          - configBlock: lameduck 5s
            name: health
          - name: ready
          - configBlock: |-
              pods insecure
              fallthrough in-addr.arpa ip6.arpa
              ttl 30
            name: kubernetes
            parameters: cluster.local in-addr.arpa ip6.arpa
          - name: prometheus
            parameters: 0.0.0.0:9153
          - name: forward
            parameters: . /etc/resolv.conf
          - name: cache
            parameters: 30
          - name: loop
          - name: reload
          - name: loadbalance
          port: 53
          zones:
          - zone: .
        service:
          annotations: {}
          ipFamilyPolicy: "null"
          name: "null"
        serviceAccount:
          annotations: {}
          create: true
          name: coredns
        serviceType: ClusterIP
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/control-plane
          operator: Exists
        - effect: NoExecute
          key: node-role.kubernetes.io/etcd
          operator: Exists
        topologySpreadConstraints: "null"
        zoneFiles: null
    helmVersion: 3
    info:
      description: Install complete
      firstDeployed: "2024-08-06T01:51:48Z"
      lastDeployed: "2024-08-06T01:51:48Z"
      notes: |2

        CoreDNS is now running in the cluster as a cluster-service.

        It can be tested with the following:

        1. Launch a Pod with DNS tools:

        kubectl run -it --rm --restart=Never --image=infoblox/dnstools:latest dnstools

        2. Query the DNS server:

        / # host kubernetes
      readme: |
        # CoreDNS

        [CoreDNS](https://coredns.io/) is a DNS server that chains plugins and provides DNS Services

        # TL;DR;

        ```console
        $ helm repo add coredns https://coredns.github.io/helm
        $ helm --namespace=kube-system install coredns coredns/coredns
        ```

        ## Introduction

        This chart bootstraps a [CoreDNS](https://github.com/coredns/coredns) deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager. This chart will provide DNS Services and can be deployed in multiple configuration to support various scenarios listed below:

        - CoreDNS as a cluster dns service and a drop-in replacement for Kube/SkyDNS. This is the default mode and CoreDNS is deployed as cluster-service in kube-system namespace. This mode is chosen by setting `isClusterService` to true.
        - CoreDNS as an external dns service. In this mode CoreDNS is deployed as any kubernetes app in user specified namespace. The CoreDNS service can be exposed outside the cluster by using using either the NodePort or LoadBalancer type of service. This mode is chosen by setting `isClusterService` to false.
        - CoreDNS as an external dns provider for kubernetes federation. This is a sub case of 'external dns service' which uses etcd plugin for CoreDNS backend. This deployment mode as a dependency on `etcd-operator` chart, which needs to be pre-installed.

        ## Prerequisites

        - Kubernetes 1.10 or later

        ## Installing the Chart

        The chart can be installed as follows:

        ```console
        $ helm repo add coredns https://coredns.github.io/helm
        $ helm --namespace=kube-system install coredns coredns/coredns
        ```

        The command deploys CoreDNS on the Kubernetes cluster in the default configuration. The [configuration](#configuration) section lists various ways to override default configuration during deployment.

        > **Tip**: List all releases using `helm list --all-namespaces`

        ## Uninstalling the Chart

        To uninstall/delete the `coredns` deployment:

        ```console
        $ helm uninstall coredns
        ```

        The command removes all the Kubernetes components associated with the chart and deletes the release.

        ## Configuration

        | Parameter                                      | Description                                                                                                                               | Default                                                      |
        | :--------------------------------------------- | :---------------------------------------------------------------------------------------------------------------------------------------- | :----------------------------------------------------------- |
        | `image.repository`                             | The image repository to pull from                                                                                                         | coredns/coredns                                              |
        | `image.tag`                                    | The image tag to pull from (derived from Chart.yaml)                                                                                      | ``                                                      |
        | `image.pullPolicy`                             | Image pull policy                                                                                                                         | IfNotPresent                                                 |
        | `image.pullSecrets`                            | Specify container image pull secrets                                                                                                      | `[]`                                                         |
        | `replicaCount`                                 | Number of replicas                                                                                                                        | 1                                                            |
        | `resources.limits.cpu`                         | Container maximum CPU                                                                                                                     | `100m`                                                       |
        | `resources.limits.memory`                      | Container maximum memory                                                                                                                  | `128Mi`                                                      |
        | `resources.requests.cpu`                       | Container requested CPU                                                                                                                   | `100m`                                                       |
        | `resources.requests.memory`                    | Container requested memory                                                                                                                | `128Mi`                                                      |
        | `serviceType`                                  | Kubernetes Service type                                                                                                                   | `ClusterIP`                                                  |
        | `prometheus.service.enabled`                   | Set this to `true` to create Service for Prometheus metrics                                                                               | `false`                                                      |
        | `prometheus.service.annotations`               | Annotations to add to the metrics Service                                                                                                 | `{prometheus.io/scrape: "true", prometheus.io/port: "9153"}` |
        | `prometheus.monitor.enabled`                   | Set this to `true` to create ServiceMonitor for Prometheus operator                                                                       | `false`                                                      |
        | `prometheus.monitor.additionalLabels`          | Additional labels that can be used so ServiceMonitor will be discovered by Prometheus                                                     | {}                                                           |
        | `prometheus.monitor.namespace`                 | Selector to select which namespaces the Endpoints objects are discovered from.                                                            | `""`                                                         |
        | `prometheus.monitor.interval`                  | Scrape interval for polling the metrics endpoint. (E.g. "30s")                                                                            | `""`                                                         |
        | `service.clusterIP`                            | IP address to assign to service                                                                                                           | `""`                                                         |
        | `service.clusterIPs`                           | IP addresses to assign to service                                                                                                         | `[]`                                                         |
        | `service.loadBalancerIP`                       | IP address to assign to load balancer (if supported)                                                                                      | `""`                                                         |
        | `service.externalIPs`                          | External IP addresses                                                                                                                     | []                                                           |
        | `service.externalTrafficPolicy`                | Enable client source IP preservation                                                                                                      | []                                                           |
        | `service.ipFamilyPolicy`                       | Service dual-stack policy                                                                                                                 | `""`                                                         |
        | `service.annotations`                          | Annotations to add to service                                                                                                             | {}                                                           |
        | `serviceAccount.create`                        | If true, create & use serviceAccount                                                                                                      | false                                                        |
        | `serviceAccount.name`                          | If not set & create is true, use template fullname                                                                                        |                                                              |
        | `rbac.create`                                  | If true, create & use RBAC resources                                                                                                      | true                                                         |
        | `rbac.pspEnable`                               | Specifies whether a PodSecurityPolicy should be created.                                                                                  | `false`                                                      |
        | `isClusterService`                             | Specifies whether chart should be deployed as cluster-service or normal k8s app.                                                          | true                                                         |
        | `priorityClassName`                            | Name of Priority Class to assign pods                                                                                                     | `""`                                                         |
        | `securityContext`                              | securityContext definition for pods                                                                                                       | capabilities.add.NET_BIND_SERVICE                            |
        | `servers`                                      | Configuration for CoreDNS and plugins                                                                                                     | See values.yml                                               |
        | `livenessProbe.enabled`                        | Enable/disable the Liveness probe                                                                                                         | `true`                                                       |
        | `livenessProbe.initialDelaySeconds`            | Delay before liveness probe is initiated                                                                                                  | `60`                                                         |
        | `livenessProbe.periodSeconds`                  | How often to perform the probe                                                                                                            | `10`                                                         |
        | `livenessProbe.timeoutSeconds`                 | When the probe times out                                                                                                                  | `5`                                                          |
        | `livenessProbe.failureThreshold`               | Minimum consecutive failures for the probe to be considered failed after having succeeded.                                                | `5`                                                          |
        | `livenessProbe.successThreshold`               | Minimum consecutive successes for the probe to be considered successful after having failed.                                              | `1`                                                          |
        | `readinessProbe.enabled`                       | Enable/disable the Readiness probe                                                                                                        | `true`                                                       |
        | `readinessProbe.initialDelaySeconds`           | Delay before readiness probe is initiated                                                                                                 | `30`                                                         |
        | `readinessProbe.periodSeconds`                 | How often to perform the probe                                                                                                            | `10`                                                         |
        | `readinessProbe.timeoutSeconds`                | When the probe times out                                                                                                                  | `5`                                                          |
        | `readinessProbe.failureThreshold`              | Minimum consecutive failures for the probe to be considered failed after having succeeded.                                                | `5`                                                          |
        | `readinessProbe.successThreshold`              | Minimum consecutive successes for the probe to be considered successful after having failed.                                              | `1`                                                          |
        | `affinity`                                     | Affinity settings for pod assignment                                                                                                      | {}                                                           |
        | `nodeSelector`                                 | Node labels for pod assignment                                                                                                            | {}                                                           |
        | `tolerations`                                  | Tolerations for pod assignment                                                                                                            | []                                                           |
        | `zoneFiles`                                    | Configure custom Zone files                                                                                                               | []                                                           |
        | `extraContainers`                              | Optional array of sidecar containers                                                                                                      | []                                                           |
        | `extraVolumes`                                 | Optional array of volumes to create                                                                                                       | []                                                           |
        | `extraVolumeMounts`                            | Optional array of volumes to mount inside the CoreDNS container                                                                           | []                                                           |
        | `extraSecrets`                                 | Optional array of secrets to mount inside the CoreDNS container                                                                           | []                                                           |
        | `customLabels`                                 | Optional labels for Deployment(s), Pod, Service, ServiceMonitor objects                                                                   | {}                                                           |
        | `customAnnotations`                            | Optional annotations for Deployment(s), Pod, Service, ServiceMonitor objects                                                              |
        | `rollingUpdate.maxUnavailable`                 | Maximum number of unavailable replicas during rolling update                                                                              | `1`                                                          |
        | `rollingUpdate.maxSurge`                       | Maximum number of pods created above desired number of pods                                                                               | `25%`                                                        |
        | `podDisruptionBudget`                          | Optional PodDisruptionBudget                                                                                                              | {}                                                           |
        | `podAnnotations`                               | Optional Pod only Annotations                                                                                                             | {}                                                           |
        | `terminationGracePeriodSeconds`                | Optional duration in seconds the pod needs to terminate gracefully.                                                                       | 30                                                           |
        | `hpa.enabled`                                  | Enable Hpa autoscaler instead of proportional one                                                                                         | `false`                                                      |
        | `hpa.minReplicas`                              | Hpa minimum number of CoreDNS replicas                                                                                                    | `1`                                                          |
        | `hpa.maxReplicas`                              | Hpa maximum number of CoreDNS replicas                                                                                                    | `2`                                                          |
        | `hpa.metrics`                                  | Metrics definitions used by Hpa to scale up and down                                                                                      | {}                                                           |
        | `autoscaler.enabled`                           | Optionally enabled a cluster-proportional-autoscaler for CoreDNS                                                                          | `false`                                                      |
        | `autoscaler.coresPerReplica`                   | Number of cores in the cluster per CoreDNS replica                                                                                        | `256`                                                        |
        | `autoscaler.nodesPerReplica`                   | Number of nodes in the cluster per CoreDNS replica                                                                                        | `16`                                                         |
        | `autoscaler.min`                               | Min size of replicaCount                                                                                                                  | 0                                                            |
        | `autoscaler.max`                               | Max size of replicaCount                                                                                                                  | 0 (aka no max)                                               |
        | `autoscaler.includeUnschedulableNodes`         | Should the replicas scale based on the total number or only schedulable nodes                                                             | `false`                                                      |
        | `autoscaler.preventSinglePointFailure`         | If true does not allow single points of failure to form                                                                                   | `true`                                                       |
        | `autoscaler.customFlags`                       | A list of custom flags to pass into cluster-proportional-autoscaler                                                                       | (no args)                                                    |
        | `autoscaler.image.repository`                  | The image repository to pull autoscaler from                                                                                              | registry.k8s.io/cpa/cluster-proportional-autoscaler          |
        | `autoscaler.image.tag`                         | The image tag to pull autoscaler from                                                                                                     | `1.8.5`                                                      |
        | `autoscaler.image.pullPolicy`                  | Image pull policy for the autoscaler                                                                                                      | IfNotPresent                                                 |
        | `autoscaler.image.pullSecrets`                 | Specify container image pull secrets                                                                                                      | `[]`                                                         |
        | `autoscaler.priorityClassName`                 | Optional priority class for the autoscaler pod. `priorityClassName` used if not set.                                                      | `""`                                                         |
        | `autoscaler.affinity`                          | Affinity settings for pod assignment for autoscaler                                                                                       | {}                                                           |
        | `autoscaler.nodeSelector`                      | Node labels for pod assignment for autoscaler                                                                                             | {}                                                           |
        | `autoscaler.tolerations`                       | Tolerations for pod assignment for autoscaler                                                                                             | []                                                           |
        | `autoscaler.resources.limits.cpu`              | Container maximum CPU for cluster-proportional-autoscaler                                                                                 | `20m`                                                        |
        | `autoscaler.resources.limits.memory`           | Container maximum memory for cluster-proportional-autoscaler                                                                              | `10Mi`                                                       |
        | `autoscaler.resources.requests.cpu`            | Container requested CPU for cluster-proportional-autoscaler                                                                               | `20m`                                                        |
        | `autoscaler.resources.requests.memory`         | Container requested memory for cluster-proportional-autoscaler                                                                            | `10Mi`                                                       |
        | `autoscaler.configmap.annotations`             | Annotations to add to autoscaler config map. For example to stop CI renaming them                                                         | {}                                                           |
        | `autoscaler.livenessProbe.enabled`             | Enable/disable the Liveness probe                                                                                                         | `true`                                                       |
        | `autoscaler.livenessProbe.initialDelaySeconds` | Delay before liveness probe is initiated                                                                                                  | `10`                                                         |
        | `autoscaler.livenessProbe.periodSeconds`       | How often to perform the probe                                                                                                            | `5`                                                          |
        | `autoscaler.livenessProbe.timeoutSeconds`      | When the probe times out                                                                                                                  | `5`                                                          |
        | `autoscaler.livenessProbe.failureThreshold`    | Minimum consecutive failures for the probe to be considered failed after having succeeded.                                                | `3`                                                          |
        | `autoscaler.livenessProbe.successThreshold`    | Minimum consecutive successes for the probe to be considered successful after having failed.                                              | `1`                                                          |
        | `autoscaler.extraContainers`                   | Optional array of sidecar containers                                                                                                      | []                                                           |
        | `deployment.enabled`                           | Optionally disable the main deployment and its respective resources.                                                                      | `true`                                                       |
        | `deployment.name`                              | Name of the deployment if `deployment.enabled` is true. Otherwise the name of an existing deployment for the autoscaler or HPA to target. | `""`                                                         |
        | `deployment.annotations`                       | Annotations to add to the main deployment                                                                                                 | `{}`                                                         |

        See `values.yaml` for configuration notes. Specify each parameter using the `--set key=value[,key=value]` argument to `helm install`. For example,

        ```console
        $ helm install coredns \
          coredns/coredns \
          --set rbac.create=false
        ```

        The above command disables automatic creation of RBAC rules.

        Alternatively, a YAML file that specifies the values for the above parameters can be provided while installing the chart. For example,

        ```console
        $ helm install coredns coredns/coredns -f values.yaml
        ```

        > **Tip**: You can use the default [values.yaml](/charts/coredns/values.yaml)

        ## Caveats

        The chart will automatically determine which protocols to listen on based on
        the protocols you define in your zones. This means that you could potentially
        use both "TCP" and "UDP" on a single port.
        Some cloud environments like "GCE" or "Azure container service" cannot
        create external loadbalancers with both "TCP" and "UDP" protocols. So
        When deploying CoreDNS with `serviceType="LoadBalancer"` on such cloud
        environments, make sure you do not attempt to use both protocols at the same
        time.

        ## Autoscaling

        By setting `autoscaler.enabled = true` a
        [cluster-proportional-autoscaler](https://github.com/kubernetes-incubator/cluster-proportional-autoscaler)
        will be deployed. This will default to a coredns replica for every 256 cores, or
        16 nodes in the cluster. These can be changed with `autoscaler.coresPerReplica`
        and `autoscaler.nodesPerReplica`. When cluster is using large nodes (with more
        cores), `coresPerReplica` should dominate. If using small nodes,
        `nodesPerReplica` should dominate.

        This also creates a ServiceAccount, ClusterRole, and ClusterRoleBinding for
        the autoscaler deployment.

        `replicaCount` is ignored if this is enabled.

        By setting `hpa.enabled = true` a [Horizontal Pod Autoscaler](https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/)
        is enabled for Coredns deployment. This can scale number of replicas based on meitrics
        like CpuUtilization, MemoryUtilization or Custom ones.

        ## Adopting existing CoreDNS resources

        If you do not want to delete the existing CoreDNS resources in your cluster, you can adopt the resources into a release as of Helm 3.2.0.

        You will also need to annotate and label your existing resources to allow Helm to assume control of them. See: https://github.com/helm/helm/pull/7649

        ```
        annotations:
          meta.helm.sh/release-name: your-release-name
          meta.helm.sh/release-namespace: your-release-namespace
        label:
          app.kubernetes.io/managed-by: Helm
        ```

        Once you have annotated and labeled all the resources this chart specifies, you may need to locally template the chart and compare against existing manifest to ensure there are no changes/diffs.s If
        you have been careful this should not diff and leave all the resources unmodified and now under management of helm.

        Some values to investigate to help adopt your existing manifests to the Helm release are:

        - k8sAppLabelOverride
        - service.name
        - customLabels

        In some cases, you will need to orphan delete your existing deployment since selector labels are immutable.

        ```
        kubectl delete deployment coredns --cascade=orphan
        ```

        This will delete the deployment and leave the replicaset to ensure no downtime in the cluster. You will need to manually delete the replicaset AFTER Helm has released a new deployment.

        Here is an example script to modify the annotations and labels of existing resources:

        WARNING: Substitute YOUR_HELM_RELEASE_NAME_HERE with the name of your helm release.

        ```
        #!/usr/bin/env bash

        set -euo pipefail

        for kind in config service serviceAccount; do
            echo "setting annotations and labels on $kind/coredns"
            kubectl -n kube-system annotate --overwrite $kind coredns meta.helm.sh/release-name=YOUR_HELM_RELEASE_NAME_HERE
            kubectl -n kube-system annotate --overwrite $kind coredns meta.helm.sh/release-namespace=kube-system
            kubectl -n kube-system label --overwrite $kind coredns app.kubernetes.io/managed-by=Helm
        done
        ```

        NOTE: Sometimes, previous deployments of kube-dns that have been migrated to CoreDNS still use kube-dns for the service name as well.

        ```
        echo "setting annotations and labels on service/kube-dns"
        kubectl -n kube-system annotate --overwrite service kube-dns meta.helm.sh/release-name=YOUR_HELM_RELEASE_NAME_HERE
        kubectl -n kube-system annotate --overwrite service kube-dns meta.helm.sh/release-namespace=kube-system
        kubectl -n kube-system label --overwrite service kube-dns app.kubernetes.io/managed-by=Helm
        ```
      status: deployed
    name: rke2-coredns
    namespace: kube-system
    resources:
    - apiVersion: v1
      kind: ServiceAccount
      name: rke2-coredns-rke2-coredns-autoscaler
      namespace: kube-system
    - apiVersion: v1
      kind: ServiceAccount
      name: coredns
      namespace: kube-system
    - apiVersion: v1
      kind: ConfigMap
      name: rke2-coredns-rke2-coredns-autoscaler
      namespace: kube-system
    - apiVersion: v1
      kind: ConfigMap
      name: rke2-coredns-rke2-coredns
      namespace: kube-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: rke2-coredns-rke2-coredns-autoscaler
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: rke2-coredns-rke2-coredns
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: rke2-coredns-rke2-coredns-autoscaler
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: rke2-coredns-rke2-coredns
    - apiVersion: v1
      kind: Service
      name: rke2-coredns-rke2-coredns
      namespace: kube-system
    - apiVersion: apps/v1
      kind: Deployment
      name: rke2-coredns-rke2-coredns-autoscaler
      namespace: kube-system
    - apiVersion: apps/v1
      kind: Deployment
      name: rke2-coredns-rke2-coredns
      namespace: kube-system
    values:
      global:
        clusterCIDR: 10.52.0.0/16
        clusterCIDRv4: 10.52.0.0/16
        clusterDNS: 10.53.0.10
        clusterDomain: cluster.local
        rke2DataDir: /var/lib/rancher/rke2
        serviceCIDR: 10.53.0.0/16
    version: 1
  status:
    observedGeneration: 1
    summary:
      state: deployed
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: 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
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.rke2-ingress-nginx.v3
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-06T01:52:31Z"
    generation: 4
    labels:
      objectset.rio.cattle.io/hash: 0a28d112c30e9d0c8f766e0b4f9a8cdfd16c1f70
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"95190e6b-7018-4679-9418-bbdc773d9fc8"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:artifacthub.io/changes: {}
                f:artifacthub.io/prerelease: {}
                f:fleet.cattle.io/bundle-id: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:home: {}
              f:icon: {}
              f:keywords: {}
              f:kubeVersion: {}
              f:maintainers: {}
              f:name: {}
              f:sources: {}
              f:version: {}
            f:values:
              .: {}
              f:commonLabels: {}
              f:controller:
                .: {}
                f:addHeaders: {}
                f:admissionWebhooks:
                  .: {}
                  f:annotations: {}
                  f:certManager:
                    .: {}
                    f:admissionCert:
                      .: {}
                      f:duration: {}
                    f:enabled: {}
                    f:rootCert:
                      .: {}
                      f:duration: {}
                  f:certificate: {}
                  f:createSecretJob:
                    .: {}
                    f:name: {}
                    f:resources: {}
                    f:securityContext:
                      .: {}
                      f:allowPrivilegeEscalation: {}
                      f:capabilities:
                        .: {}
                        f:drop: {}
                      f:readOnlyRootFilesystem: {}
                      f:runAsNonRoot: {}
                      f:runAsUser: {}
                      f:seccompProfile:
                        .: {}
                        f:type: {}
                  f:enabled: {}
                  f:existingPsp: {}
                  f:extraEnvs: {}
                  f:failurePolicy: {}
                  f:key: {}
                  f:labels: {}
                  f:name: {}
                  f:namespaceSelector: {}
                  f:objectSelector: {}
                  f:patch:
                    .: {}
                    f:enabled: {}
                    f:image:
                      .: {}
                      f:pullPolicy: {}
                      f:repository: {}
                      f:tag: {}
                    f:labels: {}
                    f:networkPolicy:
                      .: {}
                      f:enabled: {}
                    f:nodeSelector:
                      .: {}
                      f:kubernetes.io/os: {}
                    f:podAnnotations: {}
                    f:priorityClassName: {}
                    f:securityContext: {}
                    f:tolerations: {}
                  f:patchWebhookJob:
                    .: {}
                    f:name: {}
                    f:resources: {}
                    f:securityContext:
                      .: {}
                      f:allowPrivilegeEscalation: {}
                      f:capabilities:
                        .: {}
                        f:drop: {}
                      f:readOnlyRootFilesystem: {}
                      f:runAsNonRoot: {}
                      f:runAsUser: {}
                      f:seccompProfile:
                        .: {}
                        f:type: {}
                  f:port: {}
                  f:service:
                    .: {}
                    f:annotations: {}
                    f:externalIPs: {}
                    f:ipFamilyPolicy: {}
                    f:loadBalancerSourceRanges: {}
                    f:servicePort: {}
                    f:type: {}
                f:affinity: {}
                f:allowSnippetAnnotations: {}
                f:annotations: {}
                f:autoscaling:
                  .: {}
                  f:annotations: {}
                  f:behavior: {}
                  f:enabled: {}
                  f:maxReplicas: {}
                  f:minReplicas: {}
                  f:targetCPUUtilizationPercentage: {}
                  f:targetMemoryUtilizationPercentage: {}
                f:autoscalingTemplate: {}
                f:config: {}
                f:configAnnotations: {}
                f:configMapNamespace: {}
                f:containerName: {}
                f:containerPort:
                  .: {}
                  f:http: {}
                  f:https: {}
                f:containerSecurityContext: {}
                f:customTemplate:
                  .: {}
                  f:configMapKey: {}
                  f:configMapName: {}
                f:dnsConfig: {}
                f:dnsPolicy: {}
                f:electionID: {}
                f:enableAnnotationValidations: {}
                f:enableMimalloc: {}
                f:enableTopologyAwareRouting: {}
                f:existingPsp: {}
                f:extraArgs: {}
                f:extraContainers: {}
                f:extraEnvs: {}
                f:extraInitContainers: {}
                f:extraModules: {}
                f:extraVolumeMounts: {}
                f:extraVolumes: {}
                f:healthCheckHost: {}
                f:healthCheckPath: {}
                f:hostAliases: {}
                f:hostNetwork: {}
                f:hostPort:
                  .: {}
                  f:enabled: {}
                  f:ports:
                    .: {}
                    f:http: {}
                    f:https: {}
                f:hostname: {}
                f:image:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:chroot: {}
                  f:readOnlyRootFilesystem: {}
                  f:repository: {}
                  f:runAsNonRoot: {}
                  f:runAsUser: {}
                  f:seccompProfile:
                    .: {}
                    f:type: {}
                  f:tag: {}
                f:ingressClass: {}
                f:ingressClassByName: {}
                f:ingressClassResource:
                  .: {}
                  f:controllerValue: {}
                  f:default: {}
                  f:enabled: {}
                  f:name: {}
                  f:parameters: {}
                f:keda:
                  .: {}
                  f:apiVersion: {}
                  f:behavior: {}
                  f:cooldownPeriod: {}
                  f:enabled: {}
                  f:maxReplicas: {}
                  f:minReplicas: {}
                  f:pollingInterval: {}
                  f:restoreToOriginalReplicaCount: {}
                  f:scaledObject:
                    .: {}
                    f:annotations: {}
                  f:triggers: {}
                f:kind: {}
                f:labels: {}
                f:lifecycle:
                  .: {}
                  f:preStop:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:maxmindLicenseKey: {}
                f:metrics:
                  .: {}
                  f:enabled: {}
                  f:port: {}
                  f:portName: {}
                  f:prometheusRule:
                    .: {}
                    f:additionalLabels: {}
                    f:enabled: {}
                    f:rules: {}
                  f:service:
                    .: {}
                    f:annotations: {}
                    f:externalIPs: {}
                    f:labels: {}
                    f:loadBalancerSourceRanges: {}
                    f:servicePort: {}
                    f:type: {}
                  f:serviceMonitor:
                    .: {}
                    f:additionalLabels: {}
                    f:annotations: {}
                    f:enabled: {}
                    f:metricRelabelings: {}
                    f:namespace: {}
                    f:namespaceSelector: {}
                    f:relabelings: {}
                    f:scrapeInterval: {}
                    f:targetLabels: {}
                f:minAvailable: {}
                f:minReadySeconds: {}
                f:name: {}
                f:networkPolicy:
                  .: {}
                  f:enabled: {}
                f:nodeSelector:
                  .: {}
                  f:kubernetes.io/os: {}
                f:opentelemetry:
                  .: {}
                  f:containerSecurityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:runAsUser: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:enabled: {}
                  f:image:
                    .: {}
                    f:digest: {}
                    f:distroless: {}
                    f:image: {}
                    f:registry: {}
                    f:tag: {}
                  f:name: {}
                  f:resources: {}
                f:podAnnotations: {}
                f:podLabels: {}
                f:podSecurityContext: {}
                f:priorityClassName: {}
                f:proxySetHeaders: {}
                f:publishService:
                  .: {}
                  f:enabled: {}
                  f:pathOverride: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:httpGet:
                    .: {}
                    f:path: {}
                    f:port: {}
                    f:scheme: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:replicaCount: {}
                f:reportNodeInternalIp: {}
                f:resources:
                  .: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:scope:
                  .: {}
                  f:enabled: {}
                  f:namespace: {}
                  f:namespaceSelector: {}
                f:service:
                  .: {}
                  f:annotations: {}
                  f:appProtocol: {}
                  f:clusterIP: {}
                  f:enableHttp: {}
                  f:enableHttps: {}
                  f:enabled: {}
                  f:external:
                    .: {}
                    f:enabled: {}
                  f:externalIPs: {}
                  f:externalTrafficPolicy: {}
                  f:internal:
                    .: {}
                    f:annotations: {}
                    f:appProtocol: {}
                    f:clusterIP: {}
                    f:enabled: {}
                    f:externalIPs: {}
                    f:externalTrafficPolicy: {}
                    f:ipFamilies: {}
                    f:ipFamilyPolicy: {}
                    f:loadBalancerClass: {}
                    f:loadBalancerIP: {}
                    f:loadBalancerSourceRanges: {}
                    f:nodePorts:
                      .: {}
                      f:http: {}
                      f:https: {}
                      f:tcp: {}
                      f:udp: {}
                    f:ports: {}
                    f:sessionAffinity: {}
                    f:targetPorts: {}
                    f:type: {}
                  f:ipFamilies: {}
                  f:ipFamilyPolicy: {}
                  f:labels: {}
                  f:loadBalancerClass: {}
                  f:loadBalancerIP: {}
                  f:loadBalancerSourceRanges: {}
                  f:nodePorts:
                    .: {}
                    f:http: {}
                    f:https: {}
                    f:tcp: {}
                    f:udp: {}
                  f:ports:
                    .: {}
                    f:http: {}
                    f:https: {}
                  f:sessionAffinity: {}
                  f:targetPorts:
                    .: {}
                    f:http: {}
                    f:https: {}
                  f:type: {}
                f:shareProcessNamespace: {}
                f:sysctls: {}
                f:tcp:
                  .: {}
                  f:annotations: {}
                  f:configMapNamespace: {}
                f:terminationGracePeriodSeconds: {}
                f:tolerations: {}
                f:topologySpreadConstraints: {}
                f:udp:
                  .: {}
                  f:annotations: {}
                  f:configMapNamespace: {}
                f:updateStrategy: {}
                f:watchIngressWithoutClass: {}
              f:defaultBackend:
                .: {}
                f:affinity: {}
                f:autoscaling:
                  .: {}
                  f:annotations: {}
                  f:enabled: {}
                  f:maxReplicas: {}
                  f:minReplicas: {}
                  f:targetCPUUtilizationPercentage: {}
                  f:targetMemoryUtilizationPercentage: {}
                f:containerSecurityContext: {}
                f:enabled: {}
                f:existingPsp: {}
                f:extraArgs: {}
                f:extraConfigMaps: {}
                f:extraEnvs: {}
                f:extraVolumeMounts: {}
                f:extraVolumes: {}
                f:image:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:pullPolicy: {}
                  f:readOnlyRootFilesystem: {}
                  f:repository: {}
                  f:runAsNonRoot: {}
                  f:runAsUser: {}
                  f:seccompProfile:
                    .: {}
                    f:type: {}
                  f:tag: {}
                f:labels: {}
                f:livenessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:minAvailable: {}
                f:minReadySeconds: {}
                f:name: {}
                f:networkPolicy:
                  .: {}
                  f:enabled: {}
                f:nodeSelector:
                  .: {}
                  f:kubernetes.io/os: {}
                f:podAnnotations: {}
                f:podLabels: {}
                f:podSecurityContext: {}
                f:port: {}
                f:priorityClassName: {}
                f:readinessProbe:
                  .: {}
                  f:failureThreshold: {}
                  f:initialDelaySeconds: {}
                  f:periodSeconds: {}
                  f:successThreshold: {}
                  f:timeoutSeconds: {}
                f:replicaCount: {}
                f:resources: {}
                f:service:
                  .: {}
                  f:annotations: {}
                  f:externalIPs: {}
                  f:loadBalancerSourceRanges: {}
                  f:servicePort: {}
                  f:type: {}
                f:serviceAccount:
                  .: {}
                  f:automountServiceAccountToken: {}
                  f:create: {}
                  f:name: {}
                f:tolerations: {}
                f:updateStrategy: {}
              f:dhParam: {}
              f:global:
                .: {}
                f:systemDefaultRegistry: {}
              f:imagePullSecrets: {}
              f:namespaceOverride: {}
              f:podSecurityPolicy:
                .: {}
                f:enabled: {}
              f:portNamePrefix: {}
              f:rbac:
                .: {}
                f:create: {}
                f:scope: {}
              f:revisionHistoryLimit: {}
              f:serviceAccount:
                .: {}
                f:annotations: {}
                f:automountServiceAccountToken: {}
                f:create: {}
                f:name: {}
              f:tcp: {}
              f:udp: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:notes: {}
            f:readme: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:controller:
              .: {}
              f:admissionWebhooks:
                .: {}
                f:port: {}
              f:config:
                .: {}
                f:proxy-body-size: {}
                f:proxy-request-buffering: {}
              f:extraArgs:
                .: {}
                f:default-ssl-certificate: {}
              f:publishService:
                .: {}
                f:pathOverride: {}
            f:global:
              .: {}
              f:clusterCIDR: {}
              f:clusterCIDRv4: {}
              f:clusterDNS: {}
              f:clusterDomain: {}
              f:rke2DataDir: {}
              f:serviceCIDR: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T01:57:41Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T01:57:41Z"
    name: rke2-ingress-nginx
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.rke2-ingress-nginx.v3
      uid: 95190e6b-7018-4679-9418-bbdc773d9fc8
    resourceVersion: "9441"
    uid: 281045c0-f733-4ba8-b3d7-f4f9e8fd794b
  spec:
    chart:
      metadata:
        annotations:
          artifacthub.io/changes: |-
            - "update web hook cert gen to latest release v20231226-1a7112e06"
            - "Update Ingress-Nginx version controller-v1.9.6"null
          artifacthub.io/prerelease: "false"
          fleet.cattle.io/bundle-id: rke2
        apiVersion: v2
        appVersion: 1.9.6
        description: Ingress controller for Kubernetes using NGINX as a reverse proxy
          and load balancer
        home: https://github.com/kubernetes/ingress-nginx
        icon: https://upload.wikimedia.org/wikipedia/commons/thumb/c/c5/Nginx_logo.svg/500px-Nginx_logo.svg.png
        keywords:
        - ingress
        - nginx
        kubeVersion: '>= v1.27.13'
        maintainers:
        - name: rikatz
        - name: strongjz
        - name: tao12345666333
        name: rke2-ingress-nginx
        sources:
        - https://github.com/kubernetes/ingress-nginx
        version: 4.9.100
      values:
        commonLabels: {}
        controller:
          addHeaders: {}
          admissionWebhooks:
            annotations: {}
            certManager:
              admissionCert:
                duration: "null"
              enabled: false
              rootCert:
                duration: "null"
            certificate: /usr/local/certificates/cert
            createSecretJob:
              name: create
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 65532
                seccompProfile:
                  type: RuntimeDefault
            enabled: true
            existingPsp: "null"
            extraEnvs: "null"
            failurePolicy: Fail
            key: /usr/local/certificates/key
            labels: {}
            name: admission
            namespaceSelector: {}
            objectSelector: {}
            patch:
              enabled: true
              image:
                pullPolicy: IfNotPresent
                repository: rancher/mirrored-ingress-nginx-kube-webhook-certgen
                tag: v20230312-helm-chart-4.5.2-28-g66a760794
              labels: {}
              networkPolicy:
                enabled: false
              nodeSelector:
                kubernetes.io/os: linux
              podAnnotations: {}
              priorityClassName: "null"
              securityContext: {}
              tolerations: null
            patchWebhookJob:
              name: patch
              resources: {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                readOnlyRootFilesystem: true
                runAsNonRoot: true
                runAsUser: 65532
                seccompProfile:
                  type: RuntimeDefault
            port: 8443
            service:
              annotations: {}
              externalIPs: "null"
              ipFamilyPolicy: PreferDualStack
              loadBalancerSourceRanges: "null"
              servicePort: 443
              type: ClusterIP
          affinity: {}
          allowSnippetAnnotations: false
          annotations: {}
          autoscaling:
            annotations: {}
            behavior: {}
            enabled: false
            maxReplicas: 11
            minReplicas: 1
            targetCPUUtilizationPercentage: 50
            targetMemoryUtilizationPercentage: 50
          autoscalingTemplate: "null"
          config: {}
          configAnnotations: {}
          configMapNamespace: "null"
          containerName: rke2-ingress-nginx-controller
          containerPort:
            http: 80
            https: 443
          containerSecurityContext: {}
          customTemplate:
            configMapKey: "null"
            configMapName: "null"
          dnsConfig: {}
          dnsPolicy: ClusterFirstWithHostNet
          electionID: "null"
          enableAnnotationValidations: false
          enableMimalloc: true
          enableTopologyAwareRouting: false
          existingPsp: "null"
          extraArgs: {}
          extraContainers: "null"
          extraEnvs: "null"
          extraInitContainers: "null"
          extraModules: "null"
          extraVolumeMounts: "null"
          extraVolumes: "null"
          healthCheckHost: "null"
          healthCheckPath: /healthz
          hostAliases: "null"
          hostNetwork: false
          hostPort:
            enabled: true
            ports:
              http: 80
              https: 443
          hostname: {}
          image:
            allowPrivilegeEscalation: false
            chroot: false
            readOnlyRootFilesystem: false
            repository: rancher/nginx-ingress-controller
            runAsNonRoot: true
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
            tag: nginx-1.9.6-hardened1
          ingressClass: nginx
          ingressClassByName: false
          ingressClassResource:
            controllerValue: k8s.io/ingress-nginx
            default: false
            enabled: true
            name: nginx
            parameters: {}
          keda:
            apiVersion: keda.sh/v1alpha1
            behavior: {}
            cooldownPeriod: 300
            enabled: false
            maxReplicas: 11
            minReplicas: 1
            pollingInterval: 30
            restoreToOriginalReplicaCount: false
            scaledObject:
              annotations: {}
            triggers: null
          kind: DaemonSet
          labels: {}
          lifecycle:
            preStop:
              exec:
                command:
                - /wait-shutdown
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          maxmindLicenseKey: "null"
          metrics:
            enabled: false
            port: 10254
            portName: metrics
            prometheusRule:
              additionalLabels: {}
              enabled: false
              rules: null
            service:
              annotations: {}
              externalIPs: "null"
              labels: {}
              loadBalancerSourceRanges: "null"
              servicePort: 10254
              type: ClusterIP
            serviceMonitor:
              additionalLabels: {}
              annotations: {}
              enabled: false
              metricRelabelings: "null"
              namespace: "null"
              namespaceSelector: {}
              relabelings: "null"
              scrapeInterval: 30s
              targetLabels: null
          minAvailable: 1
          minReadySeconds: 0
          name: controller
          networkPolicy:
            enabled: false
          nodeSelector:
            kubernetes.io/os: linux
          opentelemetry:
            containerSecurityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 65532
              seccompProfile:
                type: RuntimeDefault
            enabled: false
            image:
              digest: sha256:13bee3f5223883d3ca62fee7309ad02d22ec00ff0d7033e3e9aca7a9f60fd472
              distroless: true
              image: ingress-nginx/opentelemetry
              registry: registry.k8s.io
              tag: v20230721-3e2062ee5
            name: opentelemetry
            resources: {}
          podAnnotations: {}
          podLabels: {}
          podSecurityContext: {}
          priorityClassName: "null"
          proxySetHeaders: {}
          publishService:
            enabled: false
            pathOverride: "null"
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          replicaCount: 1
          reportNodeInternalIp: false
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
          scope:
            enabled: false
            namespace: "null"
            namespaceSelector: "null"
          service:
            annotations: {}
            appProtocol: true
            clusterIP: "null"
            enableHttp: true
            enableHttps: true
            enabled: false
            external:
              enabled: true
            externalIPs: "null"
            externalTrafficPolicy: "null"
            internal:
              annotations: {}
              appProtocol: true
              clusterIP: "null"
              enabled: false
              externalIPs: "null"
              externalTrafficPolicy: "null"
              ipFamilies:
              - IPv4
              ipFamilyPolicy: SingleStack
              loadBalancerClass: "null"
              loadBalancerIP: "null"
              loadBalancerSourceRanges: "null"
              nodePorts:
                http: "null"
                https: "null"
                tcp: {}
                udp: {}
              ports: {}
              sessionAffinity: "null"
              targetPorts: {}
              type: "null"
            ipFamilies:
            - IPv4
            ipFamilyPolicy: SingleStack
            labels: {}
            loadBalancerClass: "null"
            loadBalancerIP: "null"
            loadBalancerSourceRanges: "null"
            nodePorts:
              http: "null"
              https: "null"
              tcp: {}
              udp: {}
            ports:
              http: 80
              https: 443
            sessionAffinity: "null"
            targetPorts:
              http: http
              https: https
            type: LoadBalancer
          shareProcessNamespace: false
          sysctls: {}
          tcp:
            annotations: {}
            configMapNamespace: "null"
          terminationGracePeriodSeconds: 300
          tolerations: "null"
          topologySpreadConstraints: "null"
          udp:
            annotations: {}
            configMapNamespace: "null"
          updateStrategy: {}
          watchIngressWithoutClass: true
        defaultBackend:
          affinity: {}
          autoscaling:
            annotations: {}
            enabled: false
            maxReplicas: 2
            minReplicas: 1
            targetCPUUtilizationPercentage: 50
            targetMemoryUtilizationPercentage: 50
          containerSecurityContext: {}
          enabled: false
          existingPsp: "null"
          extraArgs: {}
          extraConfigMaps: "null"
          extraEnvs: "null"
          extraVolumeMounts: "null"
          extraVolumes: "null"
          image:
            allowPrivilegeEscalation: false
            pullPolicy: IfNotPresent
            readOnlyRootFilesystem: true
            repository: rancher/nginx-ingress-controller-defaultbackend
            runAsNonRoot: true
            runAsUser: 65534
            seccompProfile:
              type: RuntimeDefault
            tag: 1.5-rancher1
          labels: {}
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          minAvailable: 1
          minReadySeconds: 0
          name: defaultbackend
          networkPolicy:
            enabled: false
          nodeSelector:
            kubernetes.io/os: linux
          podAnnotations: {}
          podLabels: {}
          podSecurityContext: {}
          port: 8080
          priorityClassName: "null"
          readinessProbe:
            failureThreshold: 6
            initialDelaySeconds: 0
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          replicaCount: 1
          resources: {}
          service:
            annotations: {}
            externalIPs: "null"
            loadBalancerSourceRanges: "null"
            servicePort: 80
            type: ClusterIP
          serviceAccount:
            automountServiceAccountToken: true
            create: true
            name: "null"
          tolerations: "null"
          updateStrategy: {}
        dhParam: "null"
        global:
          systemDefaultRegistry: "null"
        imagePullSecrets: "null"
        namespaceOverride: "null"
        podSecurityPolicy:
          enabled: false
        portNamePrefix: "null"
        rbac:
          create: true
          scope: false
        revisionHistoryLimit: 10
        serviceAccount:
          annotations: {}
          automountServiceAccountToken: true
          create: true
          name: "null"
        tcp: {}
        udp: {}
    helmVersion: 3
    info:
      description: Upgrade complete
      firstDeployed: "2024-08-06T01:52:08Z"
      lastDeployed: "2024-08-06T01:56:43Z"
      notes: |
        The ingress-nginx controller has been installed.
        It may take a few minutes for the load balancer IP to be available.
        You can watch the status by running 'kubectl get service --namespace kube-system rke2-ingress-nginx-controller --output wide --watch'

        An example Ingress that makes use of the controller:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: example
            namespace: foo
          spec:
            ingressClassName: nginx
            rules:
              - host: www.example.com
                http:
                  paths:
                    - pathType: Prefix
                      backend:
                        service:
                          name: exampleService
                          port:
                            number: 80
                      path: /
            # This section is only required if TLS is to be enabled for the Ingress
            tls:
              - hosts:
                - www.example.com
                secretName: example-tls

        If TLS is enabled for the Ingress, a Secret containing the certificate and key must also be provided:

          apiVersion: v1
          kind: Secret
          metadata:
            name: example-tls
            namespace: foo
          data:
            tls.crt: <base64 encoded cert>
            tls.key: <base64 encoded key>
          type: kubernetes.io/tls
      readme: |
        # ingress-nginx

        [ingress-nginx](https://github.com/kubernetes/ingress-nginx) Ingress controller for Kubernetes using NGINX as a reverse proxy and load balancer

        ![Version: 4.9.1](https://img.shields.io/badge/Version-4.9.1-informational?style=flat-square) ![AppVersion: 1.9.6](https://img.shields.io/badge/AppVersion-1.9.6-informational?style=flat-square)

        To use, add `ingressClassName: nginx` spec field or the `kubernetes.io/ingress.class: nginx` annotation to your Ingress resources.

        This chart bootstraps an ingress-nginx deployment on a [Kubernetes](http://kubernetes.io) cluster using the [Helm](https://helm.sh) package manager.

        ## Requirements

        Kubernetes: `>=1.20.0-0`

        ## Get Repo Info

        ```console
        helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
        helm repo update
        ```

        ## Install Chart

        **Important:** only helm3 is supported

        ```console
        helm install [RELEASE_NAME] ingress-nginx/ingress-nginx
        ```

        The command deploys ingress-nginx on the Kubernetes cluster in the default configuration.

        _See [configuration](#configuration) below._

        _See [helm install](https://helm.sh/docs/helm/helm_install/) for command documentation._

        ## Uninstall Chart

        ```console
        helm uninstall [RELEASE_NAME]
        ```

        This removes all the Kubernetes components associated with the chart and deletes the release.

        _See [helm uninstall](https://helm.sh/docs/helm/helm_uninstall/) for command documentation._

        ## Upgrading Chart

        ```console
        helm upgrade [RELEASE_NAME] [CHART] --install
        ```

        _See [helm upgrade](https://helm.sh/docs/helm/helm_upgrade/) for command documentation._

        ### Migrating from stable/nginx-ingress

        There are two main ways to migrate a release from `stable/nginx-ingress` to `ingress-nginx/ingress-nginx` chart:

        1. For Nginx Ingress controllers used for non-critical services, the easiest method is to [uninstall](#uninstall-chart) the old release and [install](#install-chart) the new one
        1. For critical services in production that require zero-downtime, you will want to:
            1. [Install](#install-chart) a second Ingress controller
            1. Redirect your DNS traffic from the old controller to the new controller
            1. Log traffic from both controllers during this changeover
            1. [Uninstall](#uninstall-chart) the old controller once traffic has fully drained from it

        Note that there are some different and upgraded configurations between the two charts, described by Rimas Mocevicius from JFrog in the "Upgrading to ingress-nginx Helm chart" section of [Migrating from Helm chart nginx-ingress to ingress-nginx](https://rimusz.net/migrating-to-ingress-nginx). As the `ingress-nginx/ingress-nginx` chart continues to update, you will want to check current differences by running [helm configuration](#configuration) commands on both charts.

        ## Configuration

        See [Customizing the Chart Before Installing](https://helm.sh/docs/intro/using_helm/#customizing-the-chart-before-installing). To see all configurable options with detailed comments, visit the chart's [values.yaml](./values.yaml), or run these configuration commands:

        ```console
        helm show values ingress-nginx/ingress-nginx
        ```

        ### PodDisruptionBudget

        Note that the PodDisruptionBudget resource will only be defined if the replicaCount is greater than one,
        else it would make it impossible to evacuate a node. See [gh issue #7127](https://github.com/helm/charts/issues/7127) for more info.

        ### Prometheus Metrics

        The Ingress-Nginx Controller can export Prometheus metrics, by setting `controller.metrics.enabled` to `true`.

        You can add Prometheus annotations to the metrics service using `controller.metrics.service.annotations`.
        Alternatively, if you use the Prometheus Operator, you can enable ServiceMonitor creation using `controller.metrics.serviceMonitor.enabled`. And set `controller.metrics.serviceMonitor.additionalLabels.release="prometheus"`. "release=prometheus" should match the label configured in the prometheus servicemonitor ( see `kubectl get servicemonitor prometheus-kube-prom-prometheus -oyaml -n prometheus`)

        ### ingress-nginx nginx\_status page/stats server

        Previous versions of this chart had a `controller.stats.*` configuration block, which is now obsolete due to the following changes in Ingress-Nginx Controller:

        - In [0.16.1](https://github.com/kubernetes/ingress-nginx/blob/main/Changelog.md#0161), the vts (virtual host traffic status) dashboard was removed
        - In [0.23.0](https://github.com/kubernetes/ingress-nginx/blob/main/Changelog.md#0230), the status page at port 18080 is now a unix socket webserver only available at localhost.
          You can use `curl --unix-socket /tmp/nginx-status-server.sock http://localhost/nginx_status` inside the controller container to access it locally, or use the snippet from [nginx-ingress changelog](https://github.com/kubernetes/ingress-nginx/blob/main/Changelog.md#0230) to re-enable the http server

        ### ExternalDNS Service Configuration

        Add an [ExternalDNS](https://github.com/kubernetes-sigs/external-dns) annotation to the LoadBalancer service:

        ```yaml
        controller:
          service:
            annotations:
              external-dns.alpha.kubernetes.io/hostname: kubernetes-example.com.
        ```

        ### AWS L7 ELB with SSL Termination

        Annotate the controller as shown in the [nginx-ingress l7 patch](https://github.com/kubernetes/ingress-nginx/blob/ab3a789caae65eec4ad6e3b46b19750b481b6bce/deploy/aws/l7/service-l7.yaml):

        ```yaml
        controller:
          service:
            targetPorts:
              http: http
              https: http
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:XX-XXXX-X:XXXXXXXXX:certificate/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXX
              service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
              service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
              service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: '3600'
        ```

        ### Additional Internal Load Balancer

        This setup is useful when you need both external and internal load balancers but don't want to have multiple ingress controllers and multiple ingress objects per application.

        By default, the ingress object will point to the external load balancer address, but if correctly configured, you can make use of the internal one if the URL you are looking up resolves to the internal load balancer's URL.

        You'll need to set both the following values:

        `controller.service.internal.enabled`
        `controller.service.internal.annotations`

        If one of them is missing the internal load balancer will not be deployed. Example you may have `controller.service.internal.enabled=true` but no annotations set, in this case no action will be taken.

        `controller.service.internal.annotations` varies with the cloud service you're using.

        Example for AWS:

        ```yaml
        controller:
          service:
            internal:
              enabled: true
              annotations:
                # Create internal NLB
                service.beta.kubernetes.io/aws-load-balancer-scheme: "internal"
                # Create internal ELB(Deprecated)
                # service.beta.kubernetes.io/aws-load-balancer-internal: "true"
                # Any other annotation can be declared here.
        ```

        Example for GCE:

        ```yaml
        controller:
          service:
            internal:
              enabled: true
              annotations:
                # Create internal LB. More information: https://cloud.google.com/kubernetes-engine/docs/how-to/internal-load-balancing
                # For GKE versions 1.17 and later
                networking.gke.io/load-balancer-type: "Internal"
                # For earlier versions
                # cloud.google.com/load-balancer-type: "Internal"

                # Any other annotation can be declared here.
        ```

        Example for Azure:

        ```yaml
        controller:
          service:
              annotations:
                # Create internal LB
                service.beta.kubernetes.io/azure-load-balancer-internal: "true"
                # Any other annotation can be declared here.
        ```

        Example for Oracle Cloud Infrastructure:

        ```yaml
        controller:
          service:
              annotations:
                # Create internal LB
                service.beta.kubernetes.io/oci-load-balancer-internal: "true"
                # Any other annotation can be declared here.
        ```

        The load balancer annotations of more cloud service providers can be found: [Internal load balancer](https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer).

        An use case for this scenario is having a split-view DNS setup where the public zone CNAME records point to the external balancer URL while the private zone CNAME records point to the internal balancer URL. This way, you only need one ingress kubernetes object.

        Optionally you can set `controller.service.loadBalancerIP` if you need a static IP for the resulting `LoadBalancer`.

        ### Ingress Admission Webhooks

        With nginx-ingress-controller version 0.25+, the Ingress-Nginx Controller pod exposes an endpoint that will integrate with the `validatingwebhookconfiguration` Kubernetes feature to prevent bad ingress from being added to the cluster.
        **This feature is enabled by default since 0.31.0.**

        With nginx-ingress-controller in 0.25.* work only with kubernetes 1.14+, 0.26 fix [this issue](https://github.com/kubernetes/ingress-nginx/pull/4521)

        #### How the Chart Configures the Hooks
        A validating and configuration requires the endpoint to which the request is sent to use TLS. It is possible to set up custom certificates to do this, but in most cases, a self-signed certificate is enough. The setup of this component requires some more complex orchestration when using helm. The steps are created to be idempotent and to allow turning the feature on and off without running into helm quirks.

        1. A pre-install hook provisions a certificate into the same namespace using a format compatible with provisioning using end user certificates. If the certificate already exists, the hook exits.
        2. The Ingress-Nginx Controller pod is configured to use a TLS proxy container, which will load that certificate.
        3. Validating and Mutating webhook configurations are created in the cluster.
        4. A post-install hook reads the CA from the secret created by step 1 and patches the Validating and Mutating webhook configurations. This process will allow a custom CA provisioned by some other process to also be patched into the webhook configurations. The chosen failure policy is also patched into the webhook configurations

        #### Alternatives
        It should be possible to use [cert-manager/cert-manager](https://github.com/cert-manager/cert-manager) if a more complete solution is required.

        You can enable automatic self-signed TLS certificate provisioning via cert-manager by setting the `controller.admissionWebhooks.certManager.enabled` value to true.

        Please ensure that cert-manager is correctly installed and configured.

        ### Helm Error When Upgrading: spec.clusterIP: Invalid value: ""

        If you are upgrading this chart from a version between 0.31.0 and 1.2.2 then you may get an error like this:

        ```console
        Error: UPGRADE FAILED: Service "?????-controller" is invalid: spec.clusterIP: Invalid value: "": field is immutable
        ```

        Detail of how and why are in [this issue](https://github.com/helm/charts/pull/13646) but to resolve this you can set `xxxx.service.omitClusterIP` to `true` where `xxxx` is the service referenced in the error.

        As of version `1.26.0` of this chart, by simply not providing any clusterIP value, `invalid: spec.clusterIP: Invalid value: "": field is immutable` will no longer occur since `clusterIP: ""` will not be rendered.

        ## Values

        | Key | Type | Default | Description |
        |-----|------|---------|-------------|
        | commonLabels | object | `{}` |  |
        | controller.addHeaders | object | `{}` | Will add custom headers before sending response traffic to the client according to: https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/#add-headers |
        | controller.admissionWebhooks.annotations | object | `{}` |  |
        | controller.admissionWebhooks.certManager.admissionCert.duration | string | `""` |  |
        | controller.admissionWebhooks.certManager.enabled | bool | `false` |  |
        | controller.admissionWebhooks.certManager.rootCert.duration | string | `""` |  |
        | controller.admissionWebhooks.certificate | string | `"/usr/local/certificates/cert"` |  |
        | controller.admissionWebhooks.createSecretJob.name | string | `"create"` |  |
        | controller.admissionWebhooks.createSecretJob.resources | object | `{}` |  |
        | controller.admissionWebhooks.createSecretJob.securityContext | object | `{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532,"seccompProfile":{"type":"RuntimeDefault"}}` | Security context for secret creation containers |
        | controller.admissionWebhooks.enabled | bool | `true` |  |
        | controller.admissionWebhooks.existingPsp | string | `""` | Use an existing PSP instead of creating one |
        | controller.admissionWebhooks.extraEnvs | list | `[]` | Additional environment variables to set |
        | controller.admissionWebhooks.failurePolicy | string | `"Fail"` | Admission Webhook failure policy to use |
        | controller.admissionWebhooks.key | string | `"/usr/local/certificates/key"` |  |
        | controller.admissionWebhooks.labels | object | `{}` | Labels to be added to admission webhooks |
        | controller.admissionWebhooks.name | string | `"admission"` |  |
        | controller.admissionWebhooks.namespaceSelector | object | `{}` |  |
        | controller.admissionWebhooks.objectSelector | object | `{}` |  |
        | controller.admissionWebhooks.patch.enabled | bool | `true` |  |
        | controller.admissionWebhooks.patch.image.digest | string | `"sha256:25d6a5f11211cc5c3f9f2bf552b585374af287b4debf693cacbe2da47daa5084"` |  |
        | controller.admissionWebhooks.patch.image.image | string | `"ingress-nginx/kube-webhook-certgen"` |  |
        | controller.admissionWebhooks.patch.image.pullPolicy | string | `"IfNotPresent"` |  |
        | controller.admissionWebhooks.patch.image.registry | string | `"registry.k8s.io"` |  |
        | controller.admissionWebhooks.patch.image.tag | string | `"v20231226-1a7112e06"` |  |
        | controller.admissionWebhooks.patch.labels | object | `{}` | Labels to be added to patch job resources |
        | controller.admissionWebhooks.patch.networkPolicy.enabled | bool | `false` | Enable 'networkPolicy' or not |
        | controller.admissionWebhooks.patch.nodeSelector."kubernetes.io/os" | string | `"linux"` |  |
        | controller.admissionWebhooks.patch.podAnnotations | object | `{}` |  |
        | controller.admissionWebhooks.patch.priorityClassName | string | `""` | Provide a priority class name to the webhook patching job # |
        | controller.admissionWebhooks.patch.securityContext | object | `{}` | Security context for secret creation & webhook patch pods |
        | controller.admissionWebhooks.patch.tolerations | list | `[]` |  |
        | controller.admissionWebhooks.patchWebhookJob.name | string | `"patch"` |  |
        | controller.admissionWebhooks.patchWebhookJob.resources | object | `{}` |  |
        | controller.admissionWebhooks.patchWebhookJob.securityContext | object | `{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532,"seccompProfile":{"type":"RuntimeDefault"}}` | Security context for webhook patch containers |
        | controller.admissionWebhooks.port | int | `8443` |  |
        | controller.admissionWebhooks.service.annotations | object | `{}` |  |
        | controller.admissionWebhooks.service.externalIPs | list | `[]` |  |
        | controller.admissionWebhooks.service.loadBalancerSourceRanges | list | `[]` |  |
        | controller.admissionWebhooks.service.servicePort | int | `443` |  |
        | controller.admissionWebhooks.service.type | string | `"ClusterIP"` |  |
        | controller.affinity | object | `{}` | Affinity and anti-affinity rules for server scheduling to nodes # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity # |
        | controller.allowSnippetAnnotations | bool | `false` | This configuration defines if Ingress Controller should allow users to set their own *-snippet annotations, otherwise this is forbidden / dropped when users add those annotations. Global snippets in ConfigMap are still respected |
        | controller.annotations | object | `{}` | Annotations to be added to the controller Deployment or DaemonSet # |
        | controller.autoscaling.annotations | object | `{}` |  |
        | controller.autoscaling.behavior | object | `{}` |  |
        | controller.autoscaling.enabled | bool | `false` |  |
        | controller.autoscaling.maxReplicas | int | `11` |  |
        | controller.autoscaling.minReplicas | int | `1` |  |
        | controller.autoscaling.targetCPUUtilizationPercentage | int | `50` |  |
        | controller.autoscaling.targetMemoryUtilizationPercentage | int | `50` |  |
        | controller.autoscalingTemplate | list | `[]` |  |
        | controller.config | object | `{}` | Will add custom configuration options to Nginx https://kubernetes.github.io/ingress-nginx/user-guide/nginx-configuration/configmap/ |
        | controller.configAnnotations | object | `{}` | Annotations to be added to the controller config configuration configmap. |
        | controller.configMapNamespace | string | `""` | Allows customization of the configmap / nginx-configmap namespace; defaults to $(POD_NAMESPACE) |
        | controller.containerName | string | `"controller"` | Configures the controller container name |
        | controller.containerPort | object | `{"http":80,"https":443}` | Configures the ports that the nginx-controller listens on |
        | controller.containerSecurityContext | object | `{}` | Security context for controller containers |
        | controller.customTemplate.configMapKey | string | `""` |  |
        | controller.customTemplate.configMapName | string | `""` |  |
        | controller.dnsConfig | object | `{}` | Optionally customize the pod dnsConfig. |
        | controller.dnsPolicy | string | `"ClusterFirst"` | Optionally change this to ClusterFirstWithHostNet in case you have 'hostNetwork: true'. By default, while using host network, name resolution uses the host's DNS. If you wish nginx-controller to keep resolving names inside the k8s network, use ClusterFirstWithHostNet. |
        | controller.electionID | string | `""` | Election ID to use for status update, by default it uses the controller name combined with a suffix of 'leader' |
        | controller.enableAnnotationValidations | bool | `false` |  |
        | controller.enableMimalloc | bool | `true` | Enable mimalloc as a drop-in replacement for malloc. # ref: https://github.com/microsoft/mimalloc # |
        | controller.enableTopologyAwareRouting | bool | `false` | This configuration enables Topology Aware Routing feature, used together with service annotation service.kubernetes.io/topology-mode="auto" Defaults to false |
        | controller.existingPsp | string | `""` | Use an existing PSP instead of creating one |
        | controller.extraArgs | object | `{}` | Additional command line arguments to pass to Ingress-Nginx Controller E.g. to specify the default SSL certificate you can use |
        | controller.extraContainers | list | `[]` | Additional containers to be added to the controller pod. See https://github.com/lemonldap-ng-controller/lemonldap-ng-controller as example. |
        | controller.extraEnvs | list | `[]` | Additional environment variables to set |
        | controller.extraInitContainers | list | `[]` | Containers, which are run before the app containers are started. |
        | controller.extraModules | list | `[]` | Modules, which are mounted into the core nginx image. See values.yaml for a sample to add opentelemetry module |
        | controller.extraVolumeMounts | list | `[]` | Additional volumeMounts to the controller main container. |
        | controller.extraVolumes | list | `[]` | Additional volumes to the controller pod. |
        | controller.healthCheckHost | string | `""` | Address to bind the health check endpoint. It is better to set this option to the internal node address if the Ingress-Nginx Controller is running in the `hostNetwork: true` mode. |
        | controller.healthCheckPath | string | `"/healthz"` | Path of the health check endpoint. All requests received on the port defined by the healthz-port parameter are forwarded internally to this path. |
        | controller.hostAliases | list | `[]` | Optionally customize the pod hostAliases. |
        | controller.hostNetwork | bool | `false` | Required for use with CNI based kubernetes installations (such as ones set up by kubeadm), since CNI and hostport don't mix yet. Can be deprecated once https://github.com/kubernetes/kubernetes/issues/23920 is merged |
        | controller.hostPort.enabled | bool | `false` | Enable 'hostPort' or not |
        | controller.hostPort.ports.http | int | `80` | 'hostPort' http port |
        | controller.hostPort.ports.https | int | `443` | 'hostPort' https port |
        | controller.hostname | object | `{}` | Optionally customize the pod hostname. |
        | controller.image.allowPrivilegeEscalation | bool | `false` |  |
        | controller.image.chroot | bool | `false` |  |
        | controller.image.digest | string | `"sha256:1405cc613bd95b2c6edd8b2a152510ae91c7e62aea4698500d23b2145960ab9c"` |  |
        | controller.image.digestChroot | string | `"sha256:7eb46ff733429e0e46892903c7394aff149ac6d284d92b3946f3baf7ff26a096"` |  |
        | controller.image.image | string | `"ingress-nginx/controller"` |  |
        | controller.image.pullPolicy | string | `"IfNotPresent"` |  |
        | controller.image.readOnlyRootFilesystem | bool | `false` |  |
        | controller.image.registry | string | `"registry.k8s.io"` |  |
        | controller.image.runAsNonRoot | bool | `true` |  |
        | controller.image.runAsUser | int | `101` |  |
        | controller.image.seccompProfile.type | string | `"RuntimeDefault"` |  |
        | controller.image.tag | string | `"v1.9.6"` |  |
        | controller.ingressClass | string | `"nginx"` | For backwards compatibility with ingress.class annotation, use ingressClass. Algorithm is as follows, first ingressClassName is considered, if not present, controller looks for ingress.class annotation |
        | controller.ingressClassByName | bool | `false` | Process IngressClass per name (additionally as per spec.controller). |
        | controller.ingressClassResource.controllerValue | string | `"k8s.io/ingress-nginx"` | Controller-value of the controller that is processing this ingressClass |
        | controller.ingressClassResource.default | bool | `false` | Is this the default ingressClass for the cluster |
        | controller.ingressClassResource.enabled | bool | `true` | Is this ingressClass enabled or not |
        | controller.ingressClassResource.name | string | `"nginx"` | Name of the ingressClass |
        | controller.ingressClassResource.parameters | object | `{}` | Parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters. |
        | controller.keda.apiVersion | string | `"keda.sh/v1alpha1"` |  |
        | controller.keda.behavior | object | `{}` |  |
        | controller.keda.cooldownPeriod | int | `300` |  |
        | controller.keda.enabled | bool | `false` |  |
        | controller.keda.maxReplicas | int | `11` |  |
        | controller.keda.minReplicas | int | `1` |  |
        | controller.keda.pollingInterval | int | `30` |  |
        | controller.keda.restoreToOriginalReplicaCount | bool | `false` |  |
        | controller.keda.scaledObject.annotations | object | `{}` |  |
        | controller.keda.triggers | list | `[]` |  |
        | controller.kind | string | `"Deployment"` | Use a `DaemonSet` or `Deployment` |
        | controller.labels | object | `{}` | Labels to be added to the controller Deployment or DaemonSet and other resources that do not have option to specify labels # |
        | controller.lifecycle | object | `{"preStop":{"exec":{"command":["/wait-shutdown"]}}}` | Improve connection draining when ingress controller pod is deleted using a lifecycle hook: With this new hook, we increased the default terminationGracePeriodSeconds from 30 seconds to 300, allowing the draining of connections up to five minutes. If the active connections end before that, the pod will terminate gracefully at that time. To effectively take advantage of this feature, the Configmap feature worker-shutdown-timeout new value is 240s instead of 10s. # |
        | controller.livenessProbe.failureThreshold | int | `5` |  |
        | controller.livenessProbe.httpGet.path | string | `"/healthz"` |  |
        | controller.livenessProbe.httpGet.port | int | `10254` |  |
        | controller.livenessProbe.httpGet.scheme | string | `"HTTP"` |  |
        | controller.livenessProbe.initialDelaySeconds | int | `10` |  |
        | controller.livenessProbe.periodSeconds | int | `10` |  |
        | controller.livenessProbe.successThreshold | int | `1` |  |
        | controller.livenessProbe.timeoutSeconds | int | `1` |  |
        | controller.maxmindLicenseKey | string | `""` | Maxmind license key to download GeoLite2 Databases. # https://blog.maxmind.com/2019/12/18/significant-changes-to-accessing-and-using-geolite2-databases |
        | controller.metrics.enabled | bool | `false` |  |
        | controller.metrics.port | int | `10254` |  |
        | controller.metrics.portName | string | `"metrics"` |  |
        | controller.metrics.prometheusRule.additionalLabels | object | `{}` |  |
        | controller.metrics.prometheusRule.enabled | bool | `false` |  |
        | controller.metrics.prometheusRule.rules | list | `[]` |  |
        | controller.metrics.service.annotations | object | `{}` |  |
        | controller.metrics.service.externalIPs | list | `[]` | List of IP addresses at which the stats-exporter service is available # Ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips # |
        | controller.metrics.service.labels | object | `{}` | Labels to be added to the metrics service resource |
        | controller.metrics.service.loadBalancerSourceRanges | list | `[]` |  |
        | controller.metrics.service.servicePort | int | `10254` |  |
        | controller.metrics.service.type | string | `"ClusterIP"` |  |
        | controller.metrics.serviceMonitor.additionalLabels | object | `{}` |  |
        | controller.metrics.serviceMonitor.annotations | object | `{}` |  |
        | controller.metrics.serviceMonitor.enabled | bool | `false` |  |
        | controller.metrics.serviceMonitor.metricRelabelings | list | `[]` |  |
        | controller.metrics.serviceMonitor.namespace | string | `""` |  |
        | controller.metrics.serviceMonitor.namespaceSelector | object | `{}` |  |
        | controller.metrics.serviceMonitor.relabelings | list | `[]` |  |
        | controller.metrics.serviceMonitor.scrapeInterval | string | `"30s"` |  |
        | controller.metrics.serviceMonitor.targetLabels | list | `[]` |  |
        | controller.minAvailable | int | `1` | Minimum available pods set in PodDisruptionBudget. Define either 'minAvailable' or 'maxUnavailable', never both. |
        | controller.minReadySeconds | int | `0` | `minReadySeconds` to avoid killing pods before we are ready # |
        | controller.name | string | `"controller"` |  |
        | controller.networkPolicy.enabled | bool | `false` | Enable 'networkPolicy' or not |
        | controller.nodeSelector | object | `{"kubernetes.io/os":"linux"}` | Node labels for controller pod assignment # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/ # |
        | controller.opentelemetry.containerSecurityContext.allowPrivilegeEscalation | bool | `false` |  |
        | controller.opentelemetry.containerSecurityContext.capabilities.drop[0] | string | `"ALL"` |  |
        | controller.opentelemetry.containerSecurityContext.readOnlyRootFilesystem | bool | `true` |  |
        | controller.opentelemetry.containerSecurityContext.runAsNonRoot | bool | `true` |  |
        | controller.opentelemetry.containerSecurityContext.runAsUser | int | `65532` | The image's default user, inherited from its base image `cgr.dev/chainguard/static`. |
        | controller.opentelemetry.containerSecurityContext.seccompProfile.type | string | `"RuntimeDefault"` |  |
        | controller.opentelemetry.enabled | bool | `false` |  |
        | controller.opentelemetry.image.digest | string | `"sha256:13bee3f5223883d3ca62fee7309ad02d22ec00ff0d7033e3e9aca7a9f60fd472"` |  |
        | controller.opentelemetry.image.distroless | bool | `true` |  |
        | controller.opentelemetry.image.image | string | `"ingress-nginx/opentelemetry"` |  |
        | controller.opentelemetry.image.registry | string | `"registry.k8s.io"` |  |
        | controller.opentelemetry.image.tag | string | `"v20230721-3e2062ee5"` |  |
        | controller.opentelemetry.name | string | `"opentelemetry"` |  |
        | controller.opentelemetry.resources | object | `{}` |  |
        | controller.podAnnotations | object | `{}` | Annotations to be added to controller pods # |
        | controller.podLabels | object | `{}` | Labels to add to the pod container metadata |
        | controller.podSecurityContext | object | `{}` | Security context for controller pods |
        | controller.priorityClassName | string | `""` |  |
        | controller.proxySetHeaders | object | `{}` | Will add custom headers before sending traffic to backends according to https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/custom-headers |
        | controller.publishService | object | `{"enabled":true,"pathOverride":""}` | Allows customization of the source of the IP address or FQDN to report in the ingress status field. By default, it reads the information provided by the service. If disable, the status field reports the IP address of the node or nodes where an ingress controller pod is running. |
        | controller.publishService.enabled | bool | `true` | Enable 'publishService' or not |
        | controller.publishService.pathOverride | string | `""` | Allows overriding of the publish service to bind to Must be <namespace>/<service_name> |
        | controller.readinessProbe.failureThreshold | int | `3` |  |
        | controller.readinessProbe.httpGet.path | string | `"/healthz"` |  |
        | controller.readinessProbe.httpGet.port | int | `10254` |  |
        | controller.readinessProbe.httpGet.scheme | string | `"HTTP"` |  |
        | controller.readinessProbe.initialDelaySeconds | int | `10` |  |
        | controller.readinessProbe.periodSeconds | int | `10` |  |
        | controller.readinessProbe.successThreshold | int | `1` |  |
        | controller.readinessProbe.timeoutSeconds | int | `1` |  |
        | controller.replicaCount | int | `1` |  |
        | controller.reportNodeInternalIp | bool | `false` | Bare-metal considerations via the host network https://kubernetes.github.io/ingress-nginx/deploy/baremetal/#via-the-host-network Ingress status was blank because there is no Service exposing the Ingress-Nginx Controller in a configuration using the host network, the default --publish-service flag used in standard cloud setups does not apply |
        | controller.resources.requests.cpu | string | `"100m"` |  |
        | controller.resources.requests.memory | string | `"90Mi"` |  |
        | controller.scope.enabled | bool | `false` | Enable 'scope' or not |
        | controller.scope.namespace | string | `""` | Namespace to limit the controller to; defaults to $(POD_NAMESPACE) |
        | controller.scope.namespaceSelector | string | `""` | When scope.enabled == false, instead of watching all namespaces, we watching namespaces whose labels only match with namespaceSelector. Format like foo=bar. Defaults to empty, means watching all namespaces. |
        | controller.service.annotations | object | `{}` | Annotations to be added to the external controller service. See `controller.service.internal.annotations` for annotations to be added to the internal controller service. |
        | controller.service.appProtocol | bool | `true` | Declare the app protocol of the external HTTP and HTTPS listeners or not. Supersedes provider-specific annotations for declaring the backend protocol. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol |
        | controller.service.clusterIP | string | `""` | Pre-defined cluster internal IP address of the external controller service. Take care of collisions with existing services. This value is immutable. Set once, it can not be changed without deleting and re-creating the service. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address |
        | controller.service.enableHttp | bool | `true` | Enable the HTTP listener on both controller services or not. |
        | controller.service.enableHttps | bool | `true` | Enable the HTTPS listener on both controller services or not. |
        | controller.service.enabled | bool | `true` | Enable controller services or not. This does not influence the creation of either the admission webhook or the metrics service. |
        | controller.service.external.enabled | bool | `true` | Enable the external controller service or not. Useful for internal-only deployments. |
        | controller.service.externalIPs | list | `[]` | List of node IP addresses at which the external controller service is available. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips |
        | controller.service.externalTrafficPolicy | string | `""` | External traffic policy of the external controller service. Set to "Local" to preserve source IP on providers supporting it. Ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip |
        | controller.service.internal.annotations | object | `{}` | Annotations to be added to the internal controller service. Mandatory for the internal controller service to be created. Varies with the cloud service. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer |
        | controller.service.internal.appProtocol | bool | `true` | Declare the app protocol of the internal HTTP and HTTPS listeners or not. Supersedes provider-specific annotations for declaring the backend protocol. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#application-protocol |
        | controller.service.internal.clusterIP | string | `""` | Pre-defined cluster internal IP address of the internal controller service. Take care of collisions with existing services. This value is immutable. Set once, it can not be changed without deleting and re-creating the service. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#choosing-your-own-ip-address |
        | controller.service.internal.enabled | bool | `false` | Enable the internal controller service or not. Remember to configure `controller.service.internal.annotations` when enabling this. |
        | controller.service.internal.externalIPs | list | `[]` | List of node IP addresses at which the internal controller service is available. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips |
        | controller.service.internal.externalTrafficPolicy | string | `""` | External traffic policy of the internal controller service. Set to "Local" to preserve source IP on providers supporting it. Ref: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip |
        | controller.service.internal.ipFamilies | list | `["IPv4"]` | List of IP families (e.g. IPv4, IPv6) assigned to the internal controller service. This field is usually assigned automatically based on cluster configuration and the `ipFamilyPolicy` field. Ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services |
        | controller.service.internal.ipFamilyPolicy | string | `"SingleStack"` | Represents the dual-stack capabilities of the internal controller service. Possible values are SingleStack, PreferDualStack or RequireDualStack. Fields `ipFamilies` and `clusterIP` depend on the value of this field. Ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services |
        | controller.service.internal.loadBalancerClass | string | `""` | Load balancer class of the internal controller service. Used by cloud providers to select a load balancer implementation other than the cloud provider default. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class |
        | controller.service.internal.loadBalancerIP | string | `""` | Deprecated: Pre-defined IP address of the internal controller service. Used by cloud providers to connect the resulting load balancer service to a pre-existing static IP. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer |
        | controller.service.internal.loadBalancerSourceRanges | list | `[]` | Restrict access to the internal controller service. Values must be CIDRs. Allows any source address by default. |
        | controller.service.internal.nodePorts.http | string | `""` | Node port allocated for the internal HTTP listener. If left empty, the service controller allocates one from the configured node port range. |
        | controller.service.internal.nodePorts.https | string | `""` | Node port allocated for the internal HTTPS listener. If left empty, the service controller allocates one from the configured node port range. |
        | controller.service.internal.nodePorts.tcp | object | `{}` | Node port mapping for internal TCP listeners. If left empty, the service controller allocates them from the configured node port range. Example: tcp:   8080: 30080 |
        | controller.service.internal.nodePorts.udp | object | `{}` | Node port mapping for internal UDP listeners. If left empty, the service controller allocates them from the configured node port range. Example: udp:   53: 30053 |
        | controller.service.internal.ports | object | `{}` |  |
        | controller.service.internal.sessionAffinity | string | `""` | Session affinity of the internal controller service. Must be either "None" or "ClientIP" if set. Defaults to "None". Ref: https://kubernetes.io/docs/reference/networking/virtual-ips/#session-affinity |
        | controller.service.internal.targetPorts | object | `{}` |  |
        | controller.service.internal.type | string | `""` | Type of the internal controller service. Defaults to the value of `controller.service.type`. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types |
        | controller.service.ipFamilies | list | `["IPv4"]` | List of IP families (e.g. IPv4, IPv6) assigned to the external controller service. This field is usually assigned automatically based on cluster configuration and the `ipFamilyPolicy` field. Ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services |
        | controller.service.ipFamilyPolicy | string | `"SingleStack"` | Represents the dual-stack capabilities of the external controller service. Possible values are SingleStack, PreferDualStack or RequireDualStack. Fields `ipFamilies` and `clusterIP` depend on the value of this field. Ref: https://kubernetes.io/docs/concepts/services-networking/dual-stack/#services |
        | controller.service.labels | object | `{}` | Labels to be added to both controller services. |
        | controller.service.loadBalancerClass | string | `""` | Load balancer class of the external controller service. Used by cloud providers to select a load balancer implementation other than the cloud provider default. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#load-balancer-class |
        | controller.service.loadBalancerIP | string | `""` | Deprecated: Pre-defined IP address of the external controller service. Used by cloud providers to connect the resulting load balancer service to a pre-existing static IP. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#loadbalancer |
        | controller.service.loadBalancerSourceRanges | list | `[]` | Restrict access to the external controller service. Values must be CIDRs. Allows any source address by default. |
        | controller.service.nodePorts.http | string | `""` | Node port allocated for the external HTTP listener. If left empty, the service controller allocates one from the configured node port range. |
        | controller.service.nodePorts.https | string | `""` | Node port allocated for the external HTTPS listener. If left empty, the service controller allocates one from the configured node port range. |
        | controller.service.nodePorts.tcp | object | `{}` | Node port mapping for external TCP listeners. If left empty, the service controller allocates them from the configured node port range. Example: tcp:   8080: 30080 |
        | controller.service.nodePorts.udp | object | `{}` | Node port mapping for external UDP listeners. If left empty, the service controller allocates them from the configured node port range. Example: udp:   53: 30053 |
        | controller.service.ports.http | int | `80` | Port the external HTTP listener is published with. |
        | controller.service.ports.https | int | `443` | Port the external HTTPS listener is published with. |
        | controller.service.sessionAffinity | string | `""` | Session affinity of the external controller service. Must be either "None" or "ClientIP" if set. Defaults to "None". Ref: https://kubernetes.io/docs/reference/networking/virtual-ips/#session-affinity |
        | controller.service.targetPorts.http | string | `"http"` | Port of the ingress controller the external HTTP listener is mapped to. |
        | controller.service.targetPorts.https | string | `"https"` | Port of the ingress controller the external HTTPS listener is mapped to. |
        | controller.service.type | string | `"LoadBalancer"` | Type of the external controller service. Ref: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types |
        | controller.shareProcessNamespace | bool | `false` |  |
        | controller.sysctls | object | `{}` | sysctls for controller pods # Ref: https://kubernetes.io/docs/tasks/administer-cluster/sysctl-cluster/ |
        | controller.tcp.annotations | object | `{}` | Annotations to be added to the tcp config configmap |
        | controller.tcp.configMapNamespace | string | `""` | Allows customization of the tcp-services-configmap; defaults to $(POD_NAMESPACE) |
        | controller.terminationGracePeriodSeconds | int | `300` | `terminationGracePeriodSeconds` to avoid killing pods before we are ready # wait up to five minutes for the drain of connections # |
        | controller.tolerations | list | `[]` | Node tolerations for server scheduling to nodes with taints # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/ # |
        | controller.topologySpreadConstraints | list | `[]` | Topology spread constraints rely on node labels to identify the topology domain(s) that each Node is in. # Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/ # |
        | controller.udp.annotations | object | `{}` | Annotations to be added to the udp config configmap |
        | controller.udp.configMapNamespace | string | `""` | Allows customization of the udp-services-configmap; defaults to $(POD_NAMESPACE) |
        | controller.updateStrategy | object | `{}` | The update strategy to apply to the Deployment or DaemonSet # |
        | controller.watchIngressWithoutClass | bool | `false` | Process Ingress objects without ingressClass annotation/ingressClassName field Overrides value for --watch-ingress-without-class flag of the controller binary Defaults to false |
        | defaultBackend.affinity | object | `{}` |  |
        | defaultBackend.autoscaling.annotations | object | `{}` |  |
        | defaultBackend.autoscaling.enabled | bool | `false` |  |
        | defaultBackend.autoscaling.maxReplicas | int | `2` |  |
        | defaultBackend.autoscaling.minReplicas | int | `1` |  |
        | defaultBackend.autoscaling.targetCPUUtilizationPercentage | int | `50` |  |
        | defaultBackend.autoscaling.targetMemoryUtilizationPercentage | int | `50` |  |
        | defaultBackend.containerSecurityContext | object | `{}` | Security context for default backend containers |
        | defaultBackend.enabled | bool | `false` |  |
        | defaultBackend.existingPsp | string | `""` | Use an existing PSP instead of creating one |
        | defaultBackend.extraArgs | object | `{}` |  |
        | defaultBackend.extraConfigMaps | list | `[]` |  |
        | defaultBackend.extraEnvs | list | `[]` | Additional environment variables to set for defaultBackend pods |
        | defaultBackend.extraVolumeMounts | list | `[]` |  |
        | defaultBackend.extraVolumes | list | `[]` |  |
        | defaultBackend.image.allowPrivilegeEscalation | bool | `false` |  |
        | defaultBackend.image.image | string | `"defaultbackend-amd64"` |  |
        | defaultBackend.image.pullPolicy | string | `"IfNotPresent"` |  |
        | defaultBackend.image.readOnlyRootFilesystem | bool | `true` |  |
        | defaultBackend.image.registry | string | `"registry.k8s.io"` |  |
        | defaultBackend.image.runAsNonRoot | bool | `true` |  |
        | defaultBackend.image.runAsUser | int | `65534` |  |
        | defaultBackend.image.seccompProfile.type | string | `"RuntimeDefault"` |  |
        | defaultBackend.image.tag | string | `"1.5"` |  |
        | defaultBackend.labels | object | `{}` | Labels to be added to the default backend resources |
        | defaultBackend.livenessProbe.failureThreshold | int | `3` |  |
        | defaultBackend.livenessProbe.initialDelaySeconds | int | `30` |  |
        | defaultBackend.livenessProbe.periodSeconds | int | `10` |  |
        | defaultBackend.livenessProbe.successThreshold | int | `1` |  |
        | defaultBackend.livenessProbe.timeoutSeconds | int | `5` |  |
        | defaultBackend.minAvailable | int | `1` |  |
        | defaultBackend.minReadySeconds | int | `0` | `minReadySeconds` to avoid killing pods before we are ready # |
        | defaultBackend.name | string | `"defaultbackend"` |  |
        | defaultBackend.networkPolicy.enabled | bool | `false` | Enable 'networkPolicy' or not |
        | defaultBackend.nodeSelector | object | `{"kubernetes.io/os":"linux"}` | Node labels for default backend pod assignment # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/ # |
        | defaultBackend.podAnnotations | object | `{}` | Annotations to be added to default backend pods # |
        | defaultBackend.podLabels | object | `{}` | Labels to add to the pod container metadata |
        | defaultBackend.podSecurityContext | object | `{}` | Security context for default backend pods |
        | defaultBackend.port | int | `8080` |  |
        | defaultBackend.priorityClassName | string | `""` |  |
        | defaultBackend.readinessProbe.failureThreshold | int | `6` |  |
        | defaultBackend.readinessProbe.initialDelaySeconds | int | `0` |  |
        | defaultBackend.readinessProbe.periodSeconds | int | `5` |  |
        | defaultBackend.readinessProbe.successThreshold | int | `1` |  |
        | defaultBackend.readinessProbe.timeoutSeconds | int | `5` |  |
        | defaultBackend.replicaCount | int | `1` |  |
        | defaultBackend.resources | object | `{}` |  |
        | defaultBackend.service.annotations | object | `{}` |  |
        | defaultBackend.service.externalIPs | list | `[]` | List of IP addresses at which the default backend service is available # Ref: https://kubernetes.io/docs/concepts/services-networking/service/#external-ips # |
        | defaultBackend.service.loadBalancerSourceRanges | list | `[]` |  |
        | defaultBackend.service.servicePort | int | `80` |  |
        | defaultBackend.service.type | string | `"ClusterIP"` |  |
        | defaultBackend.serviceAccount.automountServiceAccountToken | bool | `true` |  |
        | defaultBackend.serviceAccount.create | bool | `true` |  |
        | defaultBackend.serviceAccount.name | string | `""` |  |
        | defaultBackend.tolerations | list | `[]` | Node tolerations for server scheduling to nodes with taints # Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/ # |
        | defaultBackend.updateStrategy | object | `{}` | The update strategy to apply to the Deployment or DaemonSet # |
        | dhParam | string | `""` | A base64-encoded Diffie-Hellman parameter. This can be generated with: `openssl dhparam 4096 2> /dev/null | base64` # Ref: https://github.com/kubernetes/ingress-nginx/tree/main/docs/examples/customization/ssl-dh-param |
        | imagePullSecrets | list | `[]` | Optional array of imagePullSecrets containing private registry credentials # Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/ |
        | namespaceOverride | string | `""` | Override the deployment namespace; defaults to .Release.Namespace |
        | podSecurityPolicy.enabled | bool | `false` |  |
        | portNamePrefix | string | `""` | Prefix for TCP and UDP ports names in ingress controller service # Some cloud providers, like Yandex Cloud may have a requirements for a port name regex to support cloud load balancer integration |
        | rbac.create | bool | `true` |  |
        | rbac.scope | bool | `false` |  |
        | revisionHistoryLimit | int | `10` | Rollback limit # |
        | serviceAccount.annotations | object | `{}` | Annotations for the controller service account |
        | serviceAccount.automountServiceAccountToken | bool | `true` |  |
        | serviceAccount.create | bool | `true` |  |
        | serviceAccount.name | string | `""` |  |
        | tcp | object | `{}` | TCP service key-value pairs # Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md # |
        | udp | object | `{}` | UDP service key-value pairs # Ref: https://github.com/kubernetes/ingress-nginx/blob/main/docs/user-guide/exposing-tcp-udp-services.md # |
      status: deployed
    name: rke2-ingress-nginx
    namespace: kube-system
    resources:
    - apiVersion: v1
      kind: ServiceAccount
      name: rke2-ingress-nginx
      namespace: kube-system
    - apiVersion: v1
      kind: ConfigMap
      name: rke2-ingress-nginx-controller
      namespace: kube-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: rke2-ingress-nginx
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: rke2-ingress-nginx
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: rke2-ingress-nginx
      namespace: kube-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: rke2-ingress-nginx
      namespace: kube-system
    - apiVersion: v1
      kind: Service
      name: rke2-ingress-nginx-controller-admission
      namespace: kube-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: rke2-ingress-nginx-controller
      namespace: kube-system
    - apiVersion: networking.k8s.io/v1
      kind: IngressClass
      name: nginx
    - apiVersion: admissionregistration.k8s.io/v1
      kind: ValidatingWebhookConfiguration
      name: rke2-ingress-nginx-admission
    values:
      controller:
        admissionWebhooks:
          port: 8444
        config:
          proxy-body-size: "0"
          proxy-request-buffering: "off"
        extraArgs:
          default-ssl-certificate: cattle-system/tls-rancher-internal
        publishService:
          pathOverride: kube-system/ingress-expose
      global:
        clusterCIDR: 10.52.0.0/16
        clusterCIDRv4: 10.52.0.0/16
        clusterDNS: 10.53.0.10
        clusterDomain: cluster.local
        rke2DataDir: /var/lib/rancher/rke2
        serviceCIDR: 10.53.0.0/16
    version: 3
  status:
    observedGeneration: 4
    summary:
      state: deployed
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: 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
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.rke2-metrics-server.v1
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-06T01:52:31Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 1365b33f1a2d3205b2a1fa2626a7e0811fe51c5a
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"641776e0-a33e-4d7a-9a66-9f99e09d1b49"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:artifacthub.io/changes: {}
                f:fleet.cattle.io/bundle-id: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:home: {}
              f:icon: {}
              f:keywords: {}
              f:kubeVersion: {}
              f:maintainers: {}
              f:name: {}
              f:sources: {}
              f:type: {}
              f:version: {}
            f:values:
              .: {}
              f:addonResizer:
                .: {}
                f:enabled: {}
                f:image:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:nanny:
                  .: {}
                  f:cpu: {}
                  f:extraCpu: {}
                  f:extraMemory: {}
                  f:memory: {}
                  f:minClusterSize: {}
                  f:pollPeriod: {}
                  f:threshold: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:capabilities:
                    .: {}
                    f:drop: {}
                  f:readOnlyRootFilesystem: {}
                  f:runAsNonRoot: {}
                  f:runAsUser: {}
                  f:seccompProfile:
                    .: {}
                    f:type: {}
              f:affinity: {}
              f:apiService:
                .: {}
                f:annotations: {}
                f:caBundle: {}
                f:create: {}
                f:insecureSkipTLSVerify: {}
              f:args: {}
              f:commonLabels: {}
              f:containerPort: {}
              f:defaultArgs: {}
              f:deploymentAnnotations: {}
              f:dnsConfig: {}
              f:extraVolumeMounts: {}
              f:extraVolumes: {}
              f:fullnameOverride: {}
              f:global:
                .: {}
                f:systemDefaultRegistry: {}
              f:hostNetwork:
                .: {}
                f:enabled: {}
              f:image:
                .: {}
                f:pullPolicy: {}
                f:repository: {}
                f:tag: {}
              f:imagePullSecrets: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
              f:metrics:
                .: {}
                f:enabled: {}
              f:nameOverride: {}
              f:nodeSelector:
                .: {}
                f:kubernetes.io/os: {}
              f:podAnnotations: {}
              f:podDisruptionBudget:
                .: {}
                f:enabled: {}
                f:maxUnavailable: {}
                f:minAvailable: {}
              f:podLabels: {}
              f:podSecurityContext: {}
              f:priorityClassName: {}
              f:rbac:
                .: {}
                f:create: {}
                f:pspEnabled: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
              f:replicas: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:revisionHistoryLimit: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:service:
                .: {}
                f:annotations: {}
                f:ipFamilyPolicy: {}
                f:labels: {}
                f:port: {}
                f:type: {}
              f:serviceAccount:
                .: {}
                f:annotations: {}
                f:create: {}
                f:name: {}
                f:secrets: {}
              f:serviceMonitor:
                .: {}
                f:additionalLabels: {}
                f:enabled: {}
                f:interval: {}
                f:metricRelabelings: {}
                f:relabelings: {}
                f:scrapeTimeout: {}
              f:tmpVolume:
                .: {}
                f:emptyDir: {}
              f:tolerations: {}
              f:topologySpreadConstraints: {}
              f:updateStrategy: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:notes: {}
            f:readme: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:global:
              .: {}
              f:clusterCIDR: {}
              f:clusterCIDRv4: {}
              f:clusterDNS: {}
              f:clusterDomain: {}
              f:rke2DataDir: {}
              f:serviceCIDR: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T01:52:31Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T01:52:31Z"
    name: rke2-metrics-server
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.rke2-metrics-server.v1
      uid: 641776e0-a33e-4d7a-9a66-9f99e09d1b49
    resourceVersion: "1479"
    uid: 582e8365-56a5-4dcf-b827-56fd1d50175e
  spec:
    chart:
      metadata:
        annotations:
          artifacthub.io/changes: |
            - kind: changed
              description: "Updated the _Metrics Server_ OCI image to [v0.7.0](https://github.com/kubernetes-sigs/metrics-server/releases/tag/v0.7.0)."
            - kind: changed
              description: "Updated the _addon-resizer_ OCI image to [v1.8.20](https://github.com/kubernetes/autoscaler/releases/tag/addon-resizer-1.8.20)."
          fleet.cattle.io/bundle-id: rke2
        apiVersion: v2
        appVersion: 0.7.1
        description: Metrics Server is a scalable, efficient source of container resource
          metrics for Kubernetes built-in autoscaling pipelines.
        home: https://github.com/kubernetes-sigs/metrics-server
        icon: https://avatars.githubusercontent.com/u/36015203?s=400&v=4
        keywords:
        - kubernetes
        - metrics-server
        - metrics
        kubeVersion: '>= v1.27.13'
        maintainers:
        - name: stevehipwell
          url: https://github.com/stevehipwell
        - name: krmichel
          url: https://github.com/krmichel
        - name: endrec
          url: https://github.com/endrec
        name: rke2-metrics-server
        sources:
        - https://github.com/kubernetes-sigs/metrics-server
        type: application
        version: 3.12.002
      values:
        addonResizer:
          enabled: false
          image:
            repository: rancher/hardened-addon-resizer
            tag: 1.8.20-build20240410
          nanny:
            cpu: 0m
            extraCpu: 1m
            extraMemory: 2Mi
            memory: 0Mi
            minClusterSize: 100
            pollPeriod: 300000
            threshold: 5
          resources:
            limits:
              cpu: 40m
              memory: 25Mi
            requests:
              cpu: 40m
              memory: 25Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
        affinity: {}
        apiService:
          annotations: {}
          caBundle: "null"
          create: true
          insecureSkipTLSVerify: true
        args: "null"
        commonLabels: {}
        containerPort: 10250
        defaultArgs:
        - --cert-dir=/tmp
        - --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname
        - --kubelet-use-node-status-port
        - --metric-resolution=15s
        deploymentAnnotations: {}
        dnsConfig: {}
        extraVolumeMounts: "null"
        extraVolumes: "null"
        fullnameOverride: "null"
        global:
          systemDefaultRegistry: "null"
        hostNetwork:
          enabled: false
        image:
          pullPolicy: IfNotPresent
          repository: rancher/hardened-k8s-metrics-server
          tag: v0.7.1-build20240401
        imagePullSecrets: "null"
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /livez
            port: https
            scheme: HTTPS
          initialDelaySeconds: 0
          periodSeconds: 10
        metrics:
          enabled: false
        nameOverride: "null"
        nodeSelector:
          kubernetes.io/os: linux
        podAnnotations: {}
        podDisruptionBudget:
          enabled: false
          maxUnavailable: "null"
          minAvailable: null
        podLabels: {}
        podSecurityContext: {}
        priorityClassName: system-cluster-critical
        rbac:
          create: true
          pspEnabled: false
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: https
            scheme: HTTPS
          initialDelaySeconds: 20
          periodSeconds: 10
        replicas: 1
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        revisionHistoryLimit: "null"
        schedulerName: "null"
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        service:
          annotations: {}
          ipFamilyPolicy: PreferDualStack
          labels: {}
          port: 443
          type: ClusterIP
        serviceAccount:
          annotations: {}
          create: true
          name: "null"
          secrets: null
        serviceMonitor:
          additionalLabels: {}
          enabled: false
          interval: 1m
          metricRelabelings: "null"
          relabelings: "null"
          scrapeTimeout: 10s
        tmpVolume:
          emptyDir: {}
        tolerations: "null"
        topologySpreadConstraints: "null"
        updateStrategy: {}
    helmVersion: 3
    info:
      description: Install complete
      firstDeployed: "2024-08-06T01:52:04Z"
      lastDeployed: "2024-08-06T01:52:04Z"
      notes: |
        ***********************************************************************
        * Metrics Server                                                      *
        ***********************************************************************
          Chart version: 3.12.002
          App version:   0.7.1
          Image tag:     rancher/hardened-k8s-metrics-server:v0.7.1-build20240401
        ***********************************************************************
      readme: |
        # Kubernetes Metrics Server

        [Metrics Server](https://github.com/kubernetes-sigs/metrics-server/) is a scalable, efficient source of container resource metrics for Kubernetes built-in autoscaling pipelines.

        ## Installing the Chart

        Before you can install the chart you will need to add the `metrics-server` repo to [Helm](https://helm.sh/).

        ```shell
        helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/
        ```

        After you've installed the repo you can install the chart.

        ```shell
        helm upgrade --install metrics-server metrics-server/metrics-server
        ```

        ## Configuration

        The following table lists the configurable parameters of the _Metrics Server_ chart and their default values.

        | Parameter                            | Description                                                                                                                                                                                                                                                      | Default                                                                        |
        | ------------------------------------ | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------ |
        | `image.repository`                   | Image repository.                                                                                                                                                                                                                                                | `registry.k8s.io/metrics-server/metrics-server`                                |
        | `image.tag`                          | Image tag, will override the default tag derived from the chart app version.                                                                                                                                                                                     | `""`                                                                           |
        | `image.pullPolicy`                   | Image pull policy.                                                                                                                                                                                                                                               | `IfNotPresent`                                                                 |
        | `imagePullSecrets`                   | Image pull secrets.                                                                                                                                                                                                                                              | `[]`                                                                           |
        | `nameOverride`                       | Override the `name` of the chart.                                                                                                                                                                                                                                | `nil`                                                                          |
        | `fullnameOverride`                   | Override the `fullname` of the chart.                                                                                                                                                                                                                            | `nil`                                                                          |
        | `serviceAccount.create`              | If `true`, create a new service account.                                                                                                                                                                                                                         | `true`                                                                         |
        | `serviceAccount.annotations`         | Annotations to add to the service account.                                                                                                                                                                                                                       | `{}`                                                                           |
        | `serviceAccount.name`                | Service account to be used. If not set and `serviceAccount.create` is `true`, a name is generated using the full name template.                                                                                                                                  | `nil`                                                                          |
        | `serviceAccount.secrets`             | The list of secrets mountable by this service account. See <https://kubernetes.io/docs/reference/labels-annotations-taints/#enforce-mountable-secrets>                                                                                                             | `[]`                                                                           |
        | `rbac.create`                        | If `true`, create the RBAC resources.                                                                                                                                                                                                                            | `true`                                                                         |
        | `rbac.pspEnabled`                    | If `true`, create a pod security policy resource.                                                                                                                                                                                                                | `false`                                                                        |
        | `apiService.create`                  | If `true`, create the `v1beta1.metrics.k8s.io` API service. You typically want this enabled! If you disable API service creation you have to manage it outside of this chart for e.g horizontal pod autoscaling to work with this release.                       | `true`                                                                         |
        | `apiService.annotations`             | Annotations to add to the API service                                                                                                                                                                                                                            | `{}`                                                                           |
        | `apiService.insecureSkipTLSVerify`   | Specifies whether to skip TLS verification (NOTE: this setting is not a proxy for the `--kubelet-insecure-tls` metrics-server flag)                             | `true`                                          |
        | `apiService.caBundle`                | The PEM encoded CA bundle for TLS verification                                                                                                                                                                                                                   | `""`                                                                           |
        | `commonLabels`                       | Labels to add to each object of the chart.                                                                                                                                                                                                                       | `{}`                                                                           |
        | `podLabels`                          | Labels to add to the pod.                                                                                                                                                                                                                                        | `{}`                                                                           |
        | `podAnnotations`                     | Annotations to add to the pod.                                                                                                                                                                                                                                   | `{}`                                                                           |
        | `podSecurityContext`                 | Security context for the pod.                                                                                                                                                                                                                                    | `{}`                                                                           |
        | `securityContext`                    | Security context for the _metrics-server_ container.                                                                                                                                                                                                             | _See values.yaml_                                                              |
        | `priorityClassName`                  | Priority class name to use.                                                                                                                                                                                                                                      | `system-cluster-critical`                                                      |
        | `containerPort`                      | port for the _metrics-server_ container.                                                                                                                                                                                                                         | `10250`                                                                        |
        | `hostNetwork.enabled`                | If `true`, start _metric-server_ in hostNetwork mode. You would require this enabled if you use alternate overlay networking for pods and API server unable to communicate with metrics-server. As an example, this is required if you use Weave network on EKS. | `false`                                                                        |
        | `replicas`                           | Number of replicas to run.                                                                                                                                                                                                                                       | `1`                                                                            |
        | `revisionHistoryLimit`               | Number of revisions to keep.                                                                                                                                                                                                                                     | `nil`                                                                           |
        | `updateStrategy`                     | Customise the default update strategy.                                                                                                                                                                                                                           | `{}`                                                                           |
        | `podDisruptionBudget.enabled`        | If `true`, create `PodDisruptionBudget` resource.                                                                                                                                                                                                                | `{}`                                                                           |
        | `podDisruptionBudget.minAvailable`   | Set the `PodDisruptionBudget` minimum available pods.                                                                                                                                                                                                            | `nil`                                                                          |
        | `podDisruptionBudget.maxUnavailable` | Set the `PodDisruptionBudget` maximum unavailable pods.                                                                                                                                                                                                          | `nil`                                                                          |
        | `defaultArgs`                        | Default arguments to pass to the _metrics-server_ command.                                                                                                                                                                                                       | See _values.yaml_                                                              |
        | `args`                               | Additional arguments to pass to the _metrics-server_ command.                                                                                                                                                                                                    | `[]`                                                                           |
        | `livenessProbe`                      | Liveness probe.                                                                                                                                                                                                                                                  | See _values.yaml_                                                              |
        | `readinessProbe`                     | Readiness probe.                                                                                                                                                                                                                                                 | See _values.yaml_                                                              |
        | `service.type`                       | Service type.                                                                                                                                                                                                                                                    | `ClusterIP`                                                                    |
        | `service.port`                       | Service port.                                                                                                                                                                                                                                                    | `443`                                                                          |
        | `service.annotations`                | Annotations to add to the service.                                                                                                                                                                                                                               | `{}`                                                                           |
        | `service.labels`                     | Labels to add to the service.                                                                                                                                                                                                                                    | `{}`                                                                           |
        | `addonResizer.enabled`               | If `true`, run the addon-resizer as a sidecar to automatically scale resource requests with cluster size.                                                                                                                                                        | `false`                                                                        |
        | `addonResizer.securityContext`       | Security context for the _metrics_server_container.       |                                                                                                                                             _See values.yaml |
        | `addonResizer.image.repository`      | addon-resizer image repository                                                                                                                                                                                                                                   | `registry.k8s.io/autoscaling/addon-resizer`                                    |
        | `addonResizer.image.tag`             | addon-resizer image tag                                                                                                                                                                                                                                          | `1.8.19`                                                                       |
        | `addonResizer.resources`             | Resource requests and limits for the _nanny_ container.                                                                                                                                                                                                          | `{ requests: { cpu: 40m, memory: 25Mi }, limits: { cpu: 40m, memory: 25Mi } }` |
        | `addonResizer.nanny.cpu`             | The base CPU requirement.                                                                                                                                                                                                                                        | `0m`                                                                           |
        | `addonResizer.nanny.extraCPU`        | The amount of CPU to add per node.                                                                                                                                                                                                                               | `1m`                                                                           |
        | `addonResizer.nanny.memory`          | The base memory requirement.                                                                                                                                                                                                                                     | `0Mi`                                                                          |
        | `addonResizer.nanny.extraMemory`     | The amount of memory to add per node.                                                                                                                                                                                                                            | `2Mi`                                                                          |
        | `addonResizer.nanny.minClusterSize`  | Specifies the smallest number of nodes resources will be scaled to.                                                                                                                                                                                              | `100`                                                                          |
        | `addonResizer.nanny.pollPeriod`      | The time, in milliseconds, to poll the dependent container.                                                                                                                                                                                                      | `300000`                                                                       |
        | `addonResizer.nanny.threshold`       | A number between 0-100. The dependent's resources are rewritten when they deviate from expected by more than threshold.                                                                                                                                          | `5`                                                                            |
        | `metrics.enabled`                    | If `true`, allow unauthenticated access to `/metrics`.                                                                                                                                                                                                           | `false`                                                                        |
        | `serviceMonitor.enabled`             | If `true`, create a _Prometheus_ service monitor. This needs `metrics.enabled` to be `true`.                                                                                                                                                                     | `false`                                                                        |
        | `serviceMonitor.additionalLabels`    | Additional labels to be set on the ServiceMonitor.                                                                                                                                                                                                               | `{}`                                                                           |
        | `serviceMonitor.metricRelabelings`   | _Prometheus_ metric relabeling.                                                                                                                                                                                                                                  | `[]`                                                                           |
        | `serviceMonitor.relabelings`         | _Prometheus_ relabeling.                                                                                                                                                                                                                                         | `[]`                                                                           |
        | `serviceMonitor.interval`            | _Prometheus_ scrape frequency.                                                                                                                                                                                                                                   | `1m`                                                                           |
        | `serviceMonitor.scrapeTimeout`       | _Prometheus_ scrape timeout.                                                                                                                                                                                                                                     | `10s`                                                                          |
        | `resources`                          | Resource requests and limits for the _metrics-server_ container. See <https://github.com/kubernetes-sigs/metrics-server#scaling>                                                                                                                                   | `{ requests: { cpu: 100m, memory: 200Mi }}`                                    |
        | `extraVolumeMounts`                  | Additional volume mounts for the _metrics-server_ container.                                                                                                                                                                                                     | `[]`                                                                           |
        | `extraVolumes`                       | Additional volumes for the pod.                                                                                                                                                                                                                                  | `[]`                                                                           |
        | `nodeSelector`                       | Node labels for pod assignment.                                                                                                                                                                                                                                  | `{}`                                                                           |
        | `tolerations`                        | Tolerations for pod assignment.                                                                                                                                                                                                                                  | `[]`                                                                           |
        | `affinity`                           | Affinity for pod assignment.                                                                                                                                                                                                                                     | `{}`                                                                           |
        | `topologySpreadConstraints`          | Pod Topology Spread Constraints.                                                                                                                                                                                                                                 | `[]`                                                                           |
        | `deploymentAnnotations`              | Annotations to add to the deployment.                                                                                                                                                                                                                            | `{}`                                                                           |
        | `schedulerName`                      | scheduler to set to the deployment.                                                                                                                                                                                                                              | `""`                                                                           |
        | `dnsConfig`                          | Set the dns configuration options for the deployment.                                                                                                                                                                                                            | `{}`                                                                           |
        | `tmpVolume`                          | Volume to be mounted in Pods for temporary files.                                                                                                                                                                                                                | `{"emptyDir":{}}`                                                              |
      status: deployed
    name: rke2-metrics-server
    namespace: kube-system
    resources:
    - apiVersion: v1
      kind: ServiceAccount
      name: rke2-metrics-server
      namespace: kube-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: system:rke2-metrics-server-aggregated-reader
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: system:rke2-metrics-server
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: rke2-metrics-server:system:auth-delegator
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: system:rke2-metrics-server
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: rke2-metrics-server-auth-reader
      namespace: kube-system
    - apiVersion: v1
      kind: Service
      name: rke2-metrics-server
      namespace: kube-system
    - apiVersion: apps/v1
      kind: Deployment
      name: rke2-metrics-server
      namespace: kube-system
    - apiVersion: apiregistration.k8s.io/v1
      kind: APIService
      name: v1beta1.metrics.k8s.io
    values:
      global:
        clusterCIDR: 10.52.0.0/16
        clusterCIDRv4: 10.52.0.0/16
        clusterDNS: 10.53.0.10
        clusterDomain: cluster.local
        rke2DataDir: /var/lib/rancher/rke2
        serviceCIDR: 10.53.0.0/16
    version: 1
  status:
    observedGeneration: 1
    summary:
      state: deployed
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6RW62/bNhD/V4T7LNGS7KSugALbamwrunZFUuzD1mI4USeLM0VqfDjNAv/vAyn5kdRp082fRN7xHr/fPXwHPTls0CFUd4BKaYdOaGXDUdd/EXeWHDNCM47OSWJCz0QDFXQk+wyHAdJH9fSNIpOttxuoYLYt0uS1UM2La+KG3FefKewJKrAdC56YIUloiW0LZjZUZr2Xzlu2LZ5kyA7Ig7WNrymzt9ZRD7sUuKGY7XvRk3XYD1ApL2UKEmuSX8SgQ9tBBcuc2mLZ1peXc1wWnOr8gjeLC6J5vniOvJlfLpqL5yUGb1NGJ+HDeHkuuhRi9FfUkiHFyUL1xx3gIH4jY4VWUEHMvZaab34NqiuS5KKkRWkpBa6VM1pKMlA54ymFjVCBugMD34Cxj6TXZUnE6+fZvLjMs0WB86x+llNGC2qaZpmXmJew+7hLwQ7EA368Q+PCxxfqrJVE7gTb2qtGUhY9hkACePczLyHcDMebBctZuGzIciOGEQd4ExNIfibZJzGQpNUmee1rMoocBfw7HSHonBtsNZuthet8zbjuZ5ulVeRutNkM0ve1UOub9WyEJONKQAqCRy/7twZv2PjeWzIBfVLuCaYgjcwfk/ng83xOL5JtwcpnrJhDCj0K5VAoMmMhUI9CQjXCa78zqHhHJjg70no1Xia/YG1h9/GRArTam7G8zoEglCN5mvXHFNztEMzgMEjBI4uQwvZITuQiq72QTZmXi7zMl3nkcIvSU2ScKzFIvxYj/6LHNYUPQ4O2wmlzG8Icw591aBpS1AT32f5VCg7XsQfYguUnzooyurIbMXAlLFTQSlSKZOx3rVqxngL4M5zCdy3USpgwo/TgZlyJWS1CSkE+CcjxKFDkWDPxtTf2QDqBdfw40U1hvHupVfujkBFF7zTsdik0HR9WSL1W1+S+jkovjNGGmkyK2qC5zWpvb2v96YBMweaXrIim11LXKIOpcbisqEUv3RWthXXRagDn4G/wUr7TUvAgedW+1e6dIUsqTIwvM3SvOyaCzlRD8HacsEo3dE2SuNMmnDeH9owzPFAohfKfYio9KtGSdWMVSW8dmSsdkBwn3MnVD0I1Qq0PkkjBGxyO89Fbp/srGjtgRa1QYhwc44vmyMZ0cZ+iyYwlsxWcvudcezXp7lIYdDOSd2iwOyCFtaTm8HRqwuoOpOjFlNTgoYIyz/PQyj31I9ZFXi7eiICcob/9AYFR+eKBbrkMqrsAWGz2m44MYa29OxPG7vMU7vajYgowWgor4jCj5ikI1eqgen/kvlLWoZQJ1/0gyRGk0Apj3YoGqW+DUwhlkOXLLL98nxfVRVEtlr9DqIinaCkd5nYFL+LvgypY8r6jpNVS6huh1tGxVqScTTrcUlITqaSZ7CZokyHsAd2G0ecwwg978X/Y0if8nt3Ph5V7D+H0AcCPe9ilD6ziIOiTIxWOlm2WsUtOXb18rKwPTqddlKFzyLuelMuag9pokyvBuOItE/rzEEyNnKF3nTbin7gAzsZx0p1nYf3/dvct/jTzOAz2nqVjL38j7WGZHpfZcbxO0+flq9VVbFl2UbKc5bPiEtJT4XbxqHj19nqSzVnOivxEosOfgLDzxzOTmqOEscVX6HDaVVs0Mynq2X46x39Qhx4/iW2+dx66+7C/i92xMcLf3/COmp9IkRl3fZWnYH3fY5g1d7vd7t8AAAD//wZJAutEDAAA
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.rke2-multus.v1
      objectset.rio.cattle.io/owner-namespace: kube-system
    creationTimestamp: "2024-08-06T01:52:31Z"
    generation: 1
    labels:
      objectset.rio.cattle.io/hash: 80ef18fb663a81ceb05cd45ee3049acd364d592a
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b22eecb9-3160-41a3-b70e-e4eddd802a02"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:fleet.cattle.io/bundle-id: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:home: {}
              f:icon: {}
              f:kubeVersion: {}
              f:maintainers: {}
              f:name: {}
              f:sources: {}
              f:type: {}
              f:version: {}
            f:values:
              .: {}
              f:cniplugins:
                .: {}
                f:image:
                  .: {}
                  f:repository: {}
                  f:tag: {}
                f:skipcnis: {}
              f:config:
                .: {}
                f:cni_conf:
                  .: {}
                  f:binDir: {}
                  f:confDir: {}
                  f:kubeconfig: {}
                  f:multusConfFile: {}
              f:dhcpDaemonSet:
                .: {}
                f:image:
                  .: {}
                  f:repository: {}
                  f:tag: {}
              f:global:
                .: {}
                f:systemDefaultRegistry: {}
              f:image:
                .: {}
                f:pullPolicy: {}
                f:repository: {}
                f:tag: {}
              f:labels:
                .: {}
                f:nodeSelector:
                  .: {}
                  f:kubernetes.io/os: {}
              f:manifests:
                .: {}
                f:clusterRole: {}
                f:clusterRoleBinding: {}
                f:configMap: {}
                f:customResourceDefinition: {}
                f:daemonSet: {}
                f:dhcpDaemonSet: {}
                f:serviceAccount: {}
              f:pod:
                .: {}
                f:resources:
                  .: {}
                  f:enabled: {}
                  f:multus:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
              f:rke2-whereabouts:
                .: {}
                f:enabled: {}
              f:serviceAccount:
                .: {}
                f:name: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:notes: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:global:
              .: {}
              f:clusterCIDR: {}
              f:clusterCIDRv4: {}
              f:clusterDNS: {}
              f:clusterDomain: {}
              f:rke2DataDir: {}
              f:serviceCIDR: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T01:52:31Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T01:52:31Z"
    name: rke2-multus
    namespace: kube-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.rke2-multus.v1
      uid: b22eecb9-3160-41a3-b70e-e4eddd802a02
    resourceVersion: "1473"
    uid: 5c247e68-b592-4b8b-8b9e-bf4972ee06ba
  spec:
    chart:
      metadata:
        annotations:
          fleet.cattle.io/bundle-id: rke2
        apiVersion: v2
        appVersion: 4.0.2
        description: Multus Helm chart for Kubernetes
        home: https://github.com/k8snetworkplumbingwg/multus-cni
        icon: https://raw.githubusercontent.com/k8snetworkplumbingwg/multus-cni/master/doc/images/Multus.png
        kubeVersion: '>= v1.27.13'
        maintainers:
        - email: charts@rancher.com
          name: Rancher Labs
        name: rke2-multus
        sources:
        - https://github.com/intel/multus-cni
        type: application
        version: v4.0.2-build2024020802
      values:
        cniplugins:
          image:
            repository: rancher/hardened-cni-plugins
            tag: v1.4.0-build20240122
          skipcnis: flannel
        config:
          cni_conf:
            binDir: /opt/cni/bin
            confDir: /etc/cni/net.d
            kubeconfig: /etc/cni/net.d/multus.d/multus.kubeconfig
            multusConfFile: auto
        dhcpDaemonSet:
          image:
            repository: rancher/mirrored-library-busybox
            tag: 1.36.1
        global:
          systemDefaultRegistry: "null"
        image:
          pullPolicy: IfNotPresent
          repository: rancher/hardened-multus-cni
          tag: v4.0.2-build20240208
        labels:
          nodeSelector:
            kubernetes.io/os: linux
        manifests:
          clusterRole: true
          clusterRoleBinding: true
          configMap: false
          customResourceDefinition: true
          daemonSet: true
          dhcpDaemonSet: false
          serviceAccount: true
        pod:
          resources:
            enabled: false
            multus:
              limits:
                cpu: 2000m
                memory: 1024Mi
              requests:
                cpu: 250m
                memory: 128Mi
        rke2-whereabouts:
          enabled: false
        serviceAccount:
          name: multus
    helmVersion: 3
    info:
      description: Install complete
      firstDeployed: "2024-08-06T01:51:48Z"
      lastDeployed: "2024-08-06T01:51:48Z"
      notes: |
        ======
        1. The following components have been deployed as part of this helm chart:
        Cluster Role: multus
        Cluster Role Binding: rke2-multus
        Custom Resource Definition: network-attachment-definitions.k8s.cni.cncf.io
        Daemon Set: rke2-multus
        Service Account: multus

        You can now deploy any other CNI and create its Network Attachment Defintion.
        ---------

        2. To uninstall helm chart use the command:
        helm delete rke2-multus

        You may have to manually delete CRD -
        kubectl delete crd network-attachment-definitions.k8s.cni.cncf.io
        ---------
      status: deployed
    name: rke2-multus
    namespace: kube-system
    resources:
    - apiVersion: v1
      kind: ServiceAccount
      name: multus
      namespace: kube-system
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: network-attachment-definitions.k8s.cni.cncf.io
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: rke2-multus
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: rke2-multus
    - apiVersion: apps/v1
      kind: DaemonSet
      name: rke2-multus
      namespace: kube-system
    values:
      global:
        clusterCIDR: 10.52.0.0/16
        clusterCIDRv4: 10.52.0.0/16
        clusterDNS: 10.53.0.10
        clusterDomain: cluster.local
        rke2DataDir: /var/lib/rancher/rke2
        serviceCIDR: 10.53.0.0/16
    version: 1
  status:
    observedGeneration: 1
    summary:
      state: deployed
kind: List
metadata:
  continue: "null"
  resourceVersion: "770187"
