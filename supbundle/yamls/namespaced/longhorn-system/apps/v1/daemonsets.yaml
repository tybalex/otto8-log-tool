apiVersion: v1
items:
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T01:55:48Z"
    generation: 1
    labels:
      longhorn.io/component: engine-image
      longhorn.io/engine-image: ei-b0369a5d
      longhorn.io/managed-by: longhorn-manager
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/component: {}
            f:longhorn.io/engine-image: {}
            f:longhorn.io/managed-by: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0362e7d0-09cb-4600-9bbe-0ecc1e7d28bb"}: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:longhorn.io/component: {}
                f:longhorn.io/engine-image: {}
              f:name: {}
              f:ownerReferences:
                .: {}
                k:{"uid":"0362e7d0-09cb-4600-9bbe-0ecc1e7d28bb"}: {}
            f:spec:
              f:containers:
                k:{"name":"engine-image-ei-b0369a5d"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:readinessProbe:
                    .: {}
                    f:exec:
                      .: {}
                      f:command: {}
                    f:failureThreshold: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/data/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"data"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T01:55:48Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-08-06T02:16:07Z"
    name: engine-image-ei-b0369a5d
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      kind: EngineImage
      name: ei-b0369a5d
      uid: 0362e7d0-09cb-4600-9bbe-0ecc1e7d28bb
    resourceVersion: "30512"
    uid: 29007a49-5112-4516-a2c0-7939f2c0a217
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        longhorn.io/component: engine-image
        longhorn.io/engine-image: ei-b0369a5d
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          longhorn.io/component: engine-image
          longhorn.io/engine-image: ei-b0369a5d
        name: engine-image-ei-b0369a5d
        ownerReferences:
        - apiVersion: longhorn.io/v1beta2
          blockOwnerDeletion: true
          kind: EngineImage
          name: ei-b0369a5d
          uid: 0362e7d0-09cb-4600-9bbe-0ecc1e7d28bb
      spec:
        containers:
        - args:
          - -c
          - diff /usr/local/bin/longhorn /data/longhorn > /dev/null 2>&1; if [ $?
            -ne 0 ]; then cp -p /usr/local/bin/longhorn /data/ && echo installed;
            fi && trap 'rm /data/longhorn* && echo cleaned up' EXIT && sleep infinity
          command:
          - /bin/bash
          image: longhornio/longhorn-engine:v1.6.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - sh
              - -c
              - /data/longhorn version --client-only
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          name: engine-image-ei-b0369a5d
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - ls /data/longhorn && /data/longhorn version --client-only
            failureThreshold: 3
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data/
            name: data
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: longhorn-service-account
        serviceAccountName: longhorn-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubevirt.io/drain
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/longhorn/engine-binaries/longhornio-longhorn-engine-v1.6.2
            type: "null"
          name: data
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 100%
      type: RollingUpdate
  status:
    currentNumberScheduled: 4
    desiredNumberScheduled: 4
    numberAvailable: 4
    numberMisscheduled: 0
    numberReady: 4
    observedGeneration: 1
    updatedNumberScheduled: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      driver.longhorn.io/git-commit: dcd5164185d7130732f72bb2e978dfdc0338acd1
      driver.longhorn.io/version: v1.6.2
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T01:55:52Z"
    generation: 1
    labels:
      longhorn.io/managed-by: longhorn-manager
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:driver.longhorn.io/git-commit: {}
            f:driver.longhorn.io/version: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/managed-by: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"longhorn-csi-plugin"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"CSI_ENDPOINT"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NODE_ID"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9808,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:add: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/csi/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/dev"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
                    k:{"mountPath":"/lib/modules"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/sys"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/kubelet/pods"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
                k:{"name":"longhorn-liveness-probe"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/csi/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"node-driver-registrar"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/csi/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/registration"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:hostPID: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"host"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"host-dev"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"host-sys"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"kubernetes-csi-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"lib-modules"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"pods-mount-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"registration-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"socket-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-08-06T02:16:04Z"
    name: longhorn-csi-plugin
    namespace: longhorn-system
    resourceVersion: "30441"
    uid: ccc4349d-0a26-48b0-b156-e7bb158c38e3
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: longhorn-csi-plugin
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app: longhorn-csi-plugin
      spec:
        containers:
        - args:
          - --v=2
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=/var/lib/kubelet/plugins/driver.longhorn.io/csi.sock
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          image: longhornio/csi-node-driver-registrar:v2.9.2
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - rm -rf /registration/driver.longhorn.io /registration/driver.longhorn.io-reg.sock
                  /csi//*
          name: node-driver-registrar
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi/
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=4
          - --csi-address=/csi/csi.sock
          image: longhornio/livenessprobe:v2.12.0
          imagePullPolicy: IfNotPresent
          name: longhorn-liveness-probe
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi/
            name: socket-dir
        - args:
          - longhorn-manager
          - -d
          - csi
          - --nodeid=$(NODE_ID)
          - --endpoint=$(CSI_ENDPOINT)
          - --drivername=driver.longhorn.io
          - --manager-url=http://longhorn-backend:9500/v1
          env:
          - name: NODE_ID
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          image: longhornio/longhorn-manager:v1.6.2
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sh
                - -c
                - rm -f /csi//*
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9808
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 4
          name: longhorn-csi-plugin
          ports:
          - containerPort: 9808
            protocol: TCP
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
              - SYS_ADMIN
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi/
            name: socket-dir
          - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
            mountPropagation: Bidirectional
            name: kubernetes-csi-dir
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: pods-mount-dir
          - mountPath: /dev
            name: host-dev
          - mountPath: /sys
            name: host-sys
          - mountPath: /host
            mountPropagation: Bidirectional
            name: host
          - mountPath: /lib/modules
            name: lib-modules
            readOnly: true
        dnsPolicy: ClusterFirst
        hostPID: true
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: longhorn-service-account
        serviceAccountName: longhorn-service-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: kubevirt.io/drain
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/kubernetes.io/csi
            type: DirectoryOrCreate
          name: kubernetes-csi-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/driver.longhorn.io
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: pods-mount-dir
        - hostPath:
            path: /dev
            type: "null"
          name: host-dev
        - hostPath:
            path: /sys
            type: "null"
          name: host-sys
        - hostPath:
            path: /
            type: "null"
          name: host
        - hostPath:
            path: /lib/modules
            type: "null"
          name: lib-modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 4
    desiredNumberScheduled: 4
    numberAvailable: 4
    numberMisscheduled: 0
    numberReady: 4
    observedGeneration: 1
    updatedNumberScheduled: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      helm.sh/resource-policy: keep
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2024-08-06T01:55:24Z"
    generation: 1
    labels:
      app: longhorn-loop-device-cleaner
      app.kubernetes.io/managed-by: Helm
      objectset.rio.cattle.io/hash: e852fa897f5eae59a44b4bfe186aad80b10b94b3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:helm.sh/resource-policy: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/managed-by: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
            f:spec:
              f:containers:
                k:{"name":"longhorn-loop-device-cleaner"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:hostNetwork: {}
              f:hostPID: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:terminationGracePeriodSeconds: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: fleetagent
      operation: Update
      time: "2024-08-06T01:55:24Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:38Z"
    name: longhorn-loop-device-cleaner
    namespace: longhorn-system
    resourceVersion: "29782"
    uid: 8426e0f2-e691-46c3-ba02-3157714defde
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: longhorn-loop-device-cleaner
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app: longhorn-loop-device-cleaner
      spec:
        containers:
        - command:
          - nsenter
          - --mount=/proc/1/ns/mnt
          - --
          - bash
          - -c
          - |
            while true ;
            do
                for device in /sys/block/loop* ; do
                        echo "INFO: checking loop device $device"
                        if test -f "$device/loop/backing_file"; then
                                backingFile=`cat "$device/loop/backing_file"`
                                # removing trailling spaces
                                backingFile=`echo $backingFile | sed 's/ *$//g'`
                                if [[ $backingFile == *"(deleted)" ]] ; then
                                        loopDevice="/dev/$(echo $device | cut -d"/" -f4)"
                                        echo "WARN: detected removed backing file $backingFile"
                                        echo "WARN: detaching the loop device $loopDevice"
                                        losetup -d $loopDevice
                                fi
                        else
                                echo "INFO: skipping loop device $device: backing file $device/loop/backing_file doesn't exist"
                        fi
                done
                sleepingTime=60
                echo "INFO: sleeping for ${sleepingTime}s"
                sleep $sleepingTime
            done
          image: registry.suse.com/bci/bci-base:15.5
          imagePullPolicy: IfNotPresent
          name: longhorn-loop-device-cleaner
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        hostPID: true
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 4
    desiredNumberScheduled: 4
    numberAvailable: 4
    numberMisscheduled: 0
    numberReady: 4
    observedGeneration: 1
    updatedNumberScheduled: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      helm.sh/resource-policy: keep
      meta.helm.sh/release-name: harvester
      meta.helm.sh/release-namespace: harvester-system
      objectset.rio.cattle.io/id: default-mcc-harvester-cattle-fleet-local-system
    creationTimestamp: "2024-08-06T01:55:24Z"
    generation: 1
    labels:
      app: longhorn-manager
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.6.2
      helm.sh/chart: longhorn-1.6.2
      objectset.rio.cattle.io/hash: e852fa897f5eae59a44b4bfe186aad80b10b94b3
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deprecated.daemonset.template.generation: {}
            f:helm.sh/resource-policy: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
            f:objectset.rio.cattle.io/id: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:objectset.rio.cattle.io/hash: {}
        f:spec:
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/version: {}
                f:helm.sh/chart: {}
            f:spec:
              f:containers:
                k:{"name":"longhorn-manager"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"NODE_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_IP"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9500,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9501,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9502,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                    k:{"containerPort":9503,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/host/dev/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/host/proc/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/tls-files/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/lib/longhorn/"}:
                      .: {}
                      f:mountPath: {}
                      f:mountPropagation: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"dev"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"longhorn"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"longhorn-grpc-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"proc"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
          f:updateStrategy:
            f:rollingUpdate:
              .: {}
              f:maxSurge: {}
              f:maxUnavailable: {}
            f:type: {}
      manager: fleetagent
      operation: Update
      time: "2024-08-06T01:55:24Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:currentNumberScheduled: {}
          f:desiredNumberScheduled: {}
          f:numberAvailable: {}
          f:numberReady: {}
          f:observedGeneration: {}
          f:updatedNumberScheduled: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:59Z"
    name: longhorn-manager
    namespace: longhorn-system
    resourceVersion: "30304"
    uid: 524c2a0c-7f9f-4280-a9e4-c0d323db13bb
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: longhorn-manager
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app: longhorn-manager
          app.kubernetes.io/instance: harvester
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: longhorn
          app.kubernetes.io/version: v1.6.2
          helm.sh/chart: longhorn-1.6.2
      spec:
        containers:
        - command:
          - longhorn-manager
          - -d
          - daemon
          - --engine-image
          - longhornio/longhorn-engine:v1.6.2
          - --instance-manager-image
          - longhornio/longhorn-instance-manager:v1.6.2
          - --share-manager-image
          - longhornio/longhorn-share-manager:v1.6.2
          - --backing-image-manager-image
          - longhornio/backing-image-manager:v1.6.2
          - --support-bundle-manager-image
          - longhornio/support-bundle-kit:v0.0.37
          - --manager-image
          - longhornio/longhorn-manager:v1.6.2
          - --service-account
          - longhorn-service-account
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: longhornio/longhorn-manager:v1.6.2
          imagePullPolicy: IfNotPresent
          name: longhorn-manager
          ports:
          - containerPort: 9500
            name: manager
            protocol: TCP
          - containerPort: 9501
            name: conversion-wh
            protocol: TCP
          - containerPort: 9502
            name: admission-wh
            protocol: TCP
          - containerPort: 9503
            name: recov-backend
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /v1/healthz
              port: 9501
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /host/dev/
            name: dev
          - mountPath: /host/proc/
            name: proc
          - mountPath: /var/lib/longhorn/
            mountPropagation: Bidirectional
            name: longhorn
          - mountPath: /tls-files/
            name: longhorn-grpc-tls
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: longhorn-service-account
        serviceAccountName: longhorn-service-account
        terminationGracePeriodSeconds: 30
        volumes:
        - hostPath:
            path: /dev/
            type: "null"
          name: dev
        - hostPath:
            path: /proc/
            type: "null"
          name: proc
        - hostPath:
            path: /var/lib/longhorn/
            type: "null"
          name: longhorn
        - name: longhorn-grpc-tls
          secret:
            defaultMode: 420
            optional: true
            secretName: longhorn-grpc-tls
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 100%
      type: RollingUpdate
  status:
    currentNumberScheduled: 4
    desiredNumberScheduled: 4
    numberAvailable: 4
    numberMisscheduled: 0
    numberReady: 4
    observedGeneration: 1
    updatedNumberScheduled: 4
kind: List
metadata:
  resourceVersion: "770271"
