apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: f6b1d9bb67aa60d4e21e1e7bfb72ca673855bb207c522040cd765d56302986f3
      cni.projectcalico.org/podIP: 10.52.1.29/32
      cni.projectcalico.org/podIPs: 10.52.1.29/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.1.29"
            ],
            "default": true,
            "dns": {}
        }]
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T02:24:11Z"
    labels:
      longhorn.io/component: backing-image-manager
      longhorn.io/disk-uuid: 7b70705b-57bb-4ccb-b9bb-5e6ec0c76249
      longhorn.io/managed-by: longhorn-manager
      longhorn.io/node: harvesterdev2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:24:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/component: {}
            f:longhorn.io/disk-uuid: {}
            f:longhorn.io/managed-by: {}
            f:longhorn.io/node: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"865d2e25-df07-476c-b203-040af76ddbd8"}: {}
        f:spec:
          f:containers:
            k:{"name":"backing-image-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"disk-path"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T02:24:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:24:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.1.29"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:24:16Z"
    name: backing-image-manager-c16a-7b70
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: BackingImageManager
      name: backing-image-manager-c16a-7b70
      uid: 865d2e25-df07-476c-b203-040af76ddbd8
    resourceVersion: "39152"
    uid: 57ac52ab-cc94-4f48-bfe8-2e90115f9470
  spec:
    containers:
    - command:
      - backing-image-manager
      - --debug
      - daemon
      - --listen
      - 0.0.0.0:8000
      - --sync-listen
      - 0.0.0.0:8001
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: longhornio/backing-image-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: backing-image-manager
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 8000
        timeoutSeconds: 4
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/
        name: disk-path
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng9dz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev2
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/harvester/extra-disks/730bfc287c4891698a05e8f30cfec23f
        type: "null"
      name: disk-path
    - name: kube-api-access-ng9dz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:24:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:24:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:24:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:24:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ac6a4b8eec1e7e3680743285fe0f2489d8b12956b922b051fa5ed0d23e7b6881
      image: docker.io/longhornio/backing-image-manager:v1.6.2
      imageID: sha256:9b8cf5184bda1ac5be16d2b13043e1ba9762459860bd5d422d03029ff6daca4f
      lastState: {}
      name: backing-image-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:24:13Z"
    hostIP: 10.10.110.71
    phase: Running
    podIP: 10.52.1.29
    podIPs:
    - ip: 10.52.1.29
    qosClass: BestEffort
    startTime: "2024-08-06T02:24:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d45acb83b655ecf240276fbc1ce47ae3d7c54365663e0e820a92c191890812f9
      cni.projectcalico.org/podIP: 10.52.0.108/32
      cni.projectcalico.org/podIPs: 10.52.0.108/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.108"
            ],
            "default": true,
            "dns": {}
        }]
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T02:09:26Z"
    labels:
      longhorn.io/component: backing-image-manager
      longhorn.io/disk-uuid: c9ff8501-8c22-4cc0-810e-65214001909d
      longhorn.io/managed-by: longhorn-manager
      longhorn.io/node: harvesterdev1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/component: {}
            f:longhorn.io/disk-uuid: {}
            f:longhorn.io/managed-by: {}
            f:longhorn.io/node: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a9a2bdea-ac4f-4185-b067-634eabde5fa0"}: {}
        f:spec:
          f:containers:
            k:{"name":"backing-image-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"disk-path"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T02:09:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:09:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:09:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.108"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:09:32Z"
    name: backing-image-manager-c16a-c9ff
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: BackingImageManager
      name: backing-image-manager-c16a-c9ff
      uid: a9a2bdea-ac4f-4185-b067-634eabde5fa0
    resourceVersion: "20713"
    uid: d6109263-1855-4abc-b27f-6da47df953ab
  spec:
    containers:
    - command:
      - backing-image-manager
      - --debug
      - daemon
      - --listen
      - 0.0.0.0:8000
      - --sync-listen
      - 0.0.0.0:8001
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: longhornio/backing-image-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: backing-image-manager
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 8000
        timeoutSeconds: 4
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/
        name: disk-path
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nxn8p
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/harvester/extra-disks/c2675a090f3de6d1ec528e9c57791af5
        type: "null"
      name: disk-path
    - name: kube-api-access-nxn8p
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:09:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:09:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:09:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:09:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://71519974976acf754fb369e1e94f4f95ade954a45c0d9b3f4d0675a2683f1533
      image: docker.io/longhornio/backing-image-manager:v1.6.2
      imageID: sha256:9b8cf5184bda1ac5be16d2b13043e1ba9762459860bd5d422d03029ff6daca4f
      lastState: {}
      name: backing-image-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:09:29Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.108
    podIPs:
    - ip: 10.52.0.108
    qosClass: BestEffort
    startTime: "2024-08-06T02:09:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 693253826c46044b0925a20f02e6de67ed82a86a50c6f82340ec2eeb218dc503
      cni.projectcalico.org/podIP: 10.52.2.20/32
      cni.projectcalico.org/podIPs: 10.52.2.20/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.2.20"
            ],
            "default": true,
            "dns": {}
        }]
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T02:24:11Z"
    labels:
      longhorn.io/component: backing-image-manager
      longhorn.io/disk-uuid: d74b8deb-1d56-46de-9058-b1e6c18a775a
      longhorn.io/managed-by: longhorn-manager
      longhorn.io/node: harvesterdev3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:24:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/component: {}
            f:longhorn.io/disk-uuid: {}
            f:longhorn.io/managed-by: {}
            f:longhorn.io/node: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"24d37342-b005-4f96-8157-dfbf349a2069"}: {}
        f:spec:
          f:containers:
            k:{"name":"backing-image-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:tcpSocket:
                  .: {}
                  f:port: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"disk-path"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T02:24:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:24:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.2.20"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:24:16Z"
    name: backing-image-manager-c16a-d74b
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: BackingImageManager
      name: backing-image-manager-c16a-d74b
      uid: 24d37342-b005-4f96-8157-dfbf349a2069
    resourceVersion: "39195"
    uid: 36a8b5b4-8aa1-4b93-af14-d06cece60b45
  spec:
    containers:
    - command:
      - backing-image-manager
      - --debug
      - daemon
      - --listen
      - 0.0.0.0:8000
      - --sync-listen
      - 0.0.0.0:8001
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: longhornio/backing-image-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: backing-image-manager
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        tcpSocket:
          port: 8000
        timeoutSeconds: 4
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/
        name: disk-path
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9zx4d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev3
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/harvester/extra-disks/af108f336cb053734c93658d7551aa93
        type: "null"
      name: disk-path
    - name: kube-api-access-9zx4d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:24:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:24:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:24:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:24:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://017ed974defb59e25c5fcd731f22fd214875499be450af9876fa2451a6d5bbc2
      image: docker.io/longhornio/backing-image-manager:v1.6.2
      imageID: sha256:9b8cf5184bda1ac5be16d2b13043e1ba9762459860bd5d422d03029ff6daca4f
      lastState: {}
      name: backing-image-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:24:13Z"
    hostIP: 10.10.110.61
    phase: Running
    podIP: 10.52.2.20
    podIPs:
    - ip: 10.52.2.20
    qosClass: BestEffort
    startTime: "2024-08-06T02:24:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ae64f6e18d5c0da1cef3cd52e63b0b82e34f01d71d2f234ba1733804166772e4
      cni.projectcalico.org/podIP: 10.52.0.51/32
      cni.projectcalico.org/podIPs: 10.52.0.51/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.51"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-attacher-5fbd66cf8-
    labels:
      app: csi-attacher
      pod-template-hash: 5fbd66cf8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c6b79168-6a38-4483-b60b-beaaf603398e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-attacher"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.51"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-attacher-5fbd66cf8-5fn4n
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-attacher-5fbd66cf8
      uid: c6b79168-6a38-4483-b60b-beaaf603398e
    resourceVersion: "5491"
    uid: 5a403514-4787-4176-8815-097b710332f0
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-attacher
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-attacher:v4.5.1
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fvk26
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-fvk26
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0cd891fc4fc430103224a6ce6881e4819dbb84399ff19a60ba93a612c8f74719
      image: docker.io/longhornio/csi-attacher:v4.5.1
      imageID: sha256:ebcde6f69dddacdd338c10a4c07e6e0780927f04783f8862b732ca043d6e02ee
      lastState: {}
      name: csi-attacher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.51
    podIPs:
    - ip: 10.52.0.51
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 71c6e734fa2c580236ec4eb5038cad3d158add4b614cc91dd8c9bf77344ad579
      cni.projectcalico.org/podIP: 10.52.0.54/32
      cni.projectcalico.org/podIPs: 10.52.0.54/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.54"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-attacher-5fbd66cf8-
    labels:
      app: csi-attacher
      pod-template-hash: 5fbd66cf8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c6b79168-6a38-4483-b60b-beaaf603398e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-attacher"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.54"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:54Z"
    name: csi-attacher-5fbd66cf8-fvj29
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-attacher-5fbd66cf8
      uid: c6b79168-6a38-4483-b60b-beaaf603398e
    resourceVersion: "5549"
    uid: 34628b3b-79b7-45c4-a1e6-137cd30e04a7
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-attacher
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-attacher:v4.5.1
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8ctvl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-8ctvl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6fde540aa133c13384e6d7f09a267b3fa7064adfe8f31d988f06d87dacf385cb
      image: docker.io/longhornio/csi-attacher:v4.5.1
      imageID: sha256:ebcde6f69dddacdd338c10a4c07e6e0780927f04783f8862b732ca043d6e02ee
      lastState: {}
      name: csi-attacher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.54
    podIPs:
    - ip: 10.52.0.54
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 72bb154a9edeeca71626df6c8caf3c5166f1ea9a470706152d628dab32dcd723
      cni.projectcalico.org/podIP: 10.52.0.50/32
      cni.projectcalico.org/podIPs: 10.52.0.50/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.50"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-attacher-5fbd66cf8-
    labels:
      app: csi-attacher
      pod-template-hash: 5fbd66cf8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c6b79168-6a38-4483-b60b-beaaf603398e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-attacher"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.50"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-attacher-5fbd66cf8-tvjwd
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-attacher-5fbd66cf8
      uid: c6b79168-6a38-4483-b60b-beaaf603398e
    resourceVersion: "5470"
    uid: 7a2f0c5a-63f6-4de2-bb16-818237575f20
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-attacher
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-attacher:v4.5.1
      imagePullPolicy: IfNotPresent
      name: csi-attacher
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5r9vn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-5r9vn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7ef83affce56befe0194699e7aa8e4b8e023027d054f2455d2c527a3500fde30
      image: docker.io/longhornio/csi-attacher:v4.5.1
      imageID: sha256:ebcde6f69dddacdd338c10a4c07e6e0780927f04783f8862b732ca043d6e02ee
      lastState: {}
      name: csi-attacher
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.50
    podIPs:
    - ip: 10.52.0.50
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b7d95a586d19ed04721fdd00b12d567f1efb79ba0f8ef313db544153035cc4b6
      cni.projectcalico.org/podIP: 10.52.0.53/32
      cni.projectcalico.org/podIPs: 10.52.0.53/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.53"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-provisioner-5b6ff8f4d4-
    labels:
      app: csi-provisioner
      pod-template-hash: 5b6ff8f4d4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4f7bb67-5bd5-4d60-adb7-5f8b0b55356a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-provisioner"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.53"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:54Z"
    name: csi-provisioner-5b6ff8f4d4-qbmtv
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-provisioner-5b6ff8f4d4
      uid: e4f7bb67-5bd5-4d60-adb7-5f8b0b55356a
    resourceVersion: "5542"
    uid: 8e3e695e-d060-4afe-b52d-d8d41aaea0f5
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-provisioner
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --default-fstype=ext4
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-provisioner:v3.6.4
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-frqck
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-frqck
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://18d4db696cf78e06908ba9788c3680e4e9a899737a1862b31deab15c319cf189
      image: docker.io/longhornio/csi-provisioner:v3.6.4
      imageID: sha256:cc753cf7b81278f5506bfcbefe1aceeee52ea291911e63eb0b33f1490a9de4e7
      lastState: {}
      name: csi-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.53
    podIPs:
    - ip: 10.52.0.53
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 02d1770c49d98a7c59731a5a470f97c51b09307328fc7ff8d166df552b5f20f7
      cni.projectcalico.org/podIP: 10.52.0.55/32
      cni.projectcalico.org/podIPs: 10.52.0.55/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.55"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-provisioner-5b6ff8f4d4-
    labels:
      app: csi-provisioner
      pod-template-hash: 5b6ff8f4d4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4f7bb67-5bd5-4d60-adb7-5f8b0b55356a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-provisioner"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.55"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-provisioner-5b6ff8f4d4-tzdr4
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-provisioner-5b6ff8f4d4
      uid: e4f7bb67-5bd5-4d60-adb7-5f8b0b55356a
    resourceVersion: "5487"
    uid: 3fd7b909-dd69-4521-84e3-6926a0862170
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-provisioner
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --default-fstype=ext4
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-provisioner:v3.6.4
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kq25b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-kq25b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6b1c2791a8bdd01ba08e255d2bfbab88551a669f7362e3fd779fb38160b2815e
      image: docker.io/longhornio/csi-provisioner:v3.6.4
      imageID: sha256:cc753cf7b81278f5506bfcbefe1aceeee52ea291911e63eb0b33f1490a9de4e7
      lastState: {}
      name: csi-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.55
    podIPs:
    - ip: 10.52.0.55
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 3edb289094af7e99af11dd30cff102abc24799331c4c85b424a54ba2829401ee
      cni.projectcalico.org/podIP: 10.52.0.52/32
      cni.projectcalico.org/podIPs: 10.52.0.52/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.52"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-provisioner-5b6ff8f4d4-
    labels:
      app: csi-provisioner
      pod-template-hash: 5b6ff8f4d4
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4f7bb67-5bd5-4d60-adb7-5f8b0b55356a"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-provisioner"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.52"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-provisioner-5b6ff8f4d4-xwlkk
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-provisioner-5b6ff8f4d4
      uid: e4f7bb67-5bd5-4d60-adb7-5f8b0b55356a
    resourceVersion: "5473"
    uid: a1f1c47c-d735-44dc-9f4c-7aac5d674c61
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-provisioner
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --default-fstype=ext4
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-provisioner:v3.6.4
      imagePullPolicy: IfNotPresent
      name: csi-provisioner
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-crzmg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-crzmg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://6cc1534c11edf4bd1e8c36a8f181ff9c6531a70e3cdd03f67f11191b10468e88
      image: docker.io/longhornio/csi-provisioner:v3.6.4
      imageID: sha256:cc753cf7b81278f5506bfcbefe1aceeee52ea291911e63eb0b33f1490a9de4e7
      lastState: {}
      name: csi-provisioner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.52
    podIPs:
    - ip: 10.52.0.52
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 38f16ca80a1184db89104722dcc56fafbb298a888546b24ffe7f3f476dde133d
      cni.projectcalico.org/podIP: 10.52.0.58/32
      cni.projectcalico.org/podIPs: 10.52.0.58/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.58"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-resizer-74c5555748-
    labels:
      app: csi-resizer
      pod-template-hash: 74c5555748
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d2b2db48-fb01-4d4e-83e5-d51fc59381be"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-resizer"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.58"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-resizer-74c5555748-2sdz4
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-resizer-74c5555748
      uid: d2b2db48-fb01-4d4e-83e5-d51fc59381be
    resourceVersion: "5479"
    uid: 2dc75d93-00f6-4a98-b116-da322685c902
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-resizer
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --handle-volume-inuse-error=false
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-resizer:v1.10.1
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wg78s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-wg78s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://05c5ac8f1d313c10b0e25050363f79db88f774b7ef8a7371b6dad15b67cbea1a
      image: docker.io/longhornio/csi-resizer:v1.10.1
      imageID: sha256:644d77abe33dbad0176ab047d1e012ad5ff0e84045a4ba1b600bb09b27ab5e63
      lastState: {}
      name: csi-resizer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.58
    podIPs:
    - ip: 10.52.0.58
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: f91861bbfc069471a41a516d240c1195d41d0f8f18c5fce6d47c19165e9c8053
      cni.projectcalico.org/podIP: 10.52.0.56/32
      cni.projectcalico.org/podIPs: 10.52.0.56/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.56"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-resizer-74c5555748-
    labels:
      app: csi-resizer
      pod-template-hash: 74c5555748
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d2b2db48-fb01-4d4e-83e5-d51fc59381be"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-resizer"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.56"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-resizer-74c5555748-5vrxw
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-resizer-74c5555748
      uid: d2b2db48-fb01-4d4e-83e5-d51fc59381be
    resourceVersion: "5460"
    uid: 799557b1-b202-46ba-bcd2-d1f6597726c8
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-resizer
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --handle-volume-inuse-error=false
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-resizer:v1.10.1
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vnb2d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-vnb2d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ed791d50ea614449bdf8380d83195d2eedfa06ce945b82be96c92293ed384e42
      image: docker.io/longhornio/csi-resizer:v1.10.1
      imageID: sha256:644d77abe33dbad0176ab047d1e012ad5ff0e84045a4ba1b600bb09b27ab5e63
      lastState: {}
      name: csi-resizer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.56
    podIPs:
    - ip: 10.52.0.56
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 0f969b159ad6ba6447b2aefde07e974b15cffecd5d91d1826314fa51d4676097
      cni.projectcalico.org/podIP: 10.52.0.61/32
      cni.projectcalico.org/podIPs: 10.52.0.61/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.61"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-resizer-74c5555748-
    labels:
      app: csi-resizer
      pod-template-hash: 74c5555748
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d2b2db48-fb01-4d4e-83e5-d51fc59381be"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-resizer"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.61"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-resizer-74c5555748-tg9pz
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-resizer-74c5555748
      uid: d2b2db48-fb01-4d4e-83e5-d51fc59381be
    resourceVersion: "5476"
    uid: d6000629-5568-4e2c-a215-5aa2fb80c265
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-resizer
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --leader-election-namespace=$(POD_NAMESPACE)
      - --handle-volume-inuse-error=false
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-resizer:v1.10.1
      imagePullPolicy: IfNotPresent
      name: csi-resizer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qflln
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-qflln
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f4b41d89c6e68147e1179b9cf5ed12bbbb7517c5cb201f5ff1c0bad5868aa1f5
      image: docker.io/longhornio/csi-resizer:v1.10.1
      imageID: sha256:644d77abe33dbad0176ab047d1e012ad5ff0e84045a4ba1b600bb09b27ab5e63
      lastState: {}
      name: csi-resizer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.61
    podIPs:
    - ip: 10.52.0.61
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: b118d60a9e74531b271c8bde90f8b15711e1aefd3eff68c31ee6af8b3ab07b87
      cni.projectcalico.org/podIP: 10.52.0.59/32
      cni.projectcalico.org/podIPs: 10.52.0.59/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.59"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-snapshotter-6bc4bcf4c5-
    labels:
      app: csi-snapshotter
      pod-template-hash: 6bc4bcf4c5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b716c09-0623-47b6-abc6-cc54066b3308"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-snapshotter"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.59"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-snapshotter-6bc4bcf4c5-7c298
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-snapshotter-6bc4bcf4c5
      uid: 2b716c09-0623-47b6-abc6-cc54066b3308
    resourceVersion: "5463"
    uid: 2f3a6241-3cdf-454f-b705-8c00146cfd34
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-snapshotter
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-snapshotter:v6.3.4
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-99rmw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-99rmw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1eaaac3a386108ae7fe433cd610b40e3eb3ad024d6e77de3c8e5dc3c4f85ece6
      image: docker.io/longhornio/csi-snapshotter:v6.3.4
      imageID: sha256:eccecdceb86c017929cf3c8876a1ba2265c8106ad15a76f52b21301a23196f91
      lastState: {}
      name: csi-snapshotter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.59
    podIPs:
    - ip: 10.52.0.59
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7bdf05ed64229160e7de22c135c5e39e81ff8b2d1f575c9d0251abac8e2072e1
      cni.projectcalico.org/podIP: 10.52.0.60/32
      cni.projectcalico.org/podIPs: 10.52.0.60/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.60"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-snapshotter-6bc4bcf4c5-
    labels:
      app: csi-snapshotter
      pod-template-hash: 6bc4bcf4c5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b716c09-0623-47b6-abc6-cc54066b3308"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-snapshotter"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.60"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:54Z"
    name: csi-snapshotter-6bc4bcf4c5-cj2w8
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-snapshotter-6bc4bcf4c5
      uid: 2b716c09-0623-47b6-abc6-cc54066b3308
    resourceVersion: "5547"
    uid: b01aaecd-994c-412c-a3c0-540854dbe824
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-snapshotter
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-snapshotter:v6.3.4
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9pmbw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-9pmbw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://53ca029a1250c5287f27784e05bd570a332ebb645e7c51ae6a2908ef5ddce606
      image: docker.io/longhornio/csi-snapshotter:v6.3.4
      imageID: sha256:eccecdceb86c017929cf3c8876a1ba2265c8106ad15a76f52b21301a23196f91
      lastState: {}
      name: csi-snapshotter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.60
    podIPs:
    - ip: 10.52.0.60
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 1bb81a8de39d79b11d630152f80a285e46a873ef468afdadeab47a14940db28e
      cni.projectcalico.org/podIP: 10.52.0.57/32
      cni.projectcalico.org/podIPs: 10.52.0.57/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.57"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: csi-snapshotter-6bc4bcf4c5-
    labels:
      app: csi-snapshotter
      pod-template-hash: 6bc4bcf4c5
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2b716c09-0623-47b6-abc6-cc54066b3308"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"csi-snapshotter"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.57"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: csi-snapshotter-6bc4bcf4c5-g9p76
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: csi-snapshotter-6bc4bcf4c5
      uid: 2b716c09-0623-47b6-abc6-cc54066b3308
    resourceVersion: "5466"
    uid: f2ea89d8-a799-4018-93f3-58de88c9a3d7
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - csi-snapshotter
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --timeout=1m50s
      - --leader-election
      - --leader-election-namespace=$(POD_NAMESPACE)
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: longhornio/csi-snapshotter:v6.3.4
      imagePullPolicy: IfNotPresent
      name: csi-snapshotter
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-925jc
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - name: kube-api-access-925jc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fae7b1e427d861bde7f0cf9d799131157d0af03535e55f2ac5526a91585bbd51
      image: docker.io/longhornio/csi-snapshotter:v6.3.4
      imageID: sha256:eccecdceb86c017929cf3c8876a1ba2265c8106ad15a76f52b21301a23196f91
      lastState: {}
      name: csi-snapshotter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.57
    podIPs:
    - ip: 10.52.0.57
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 9eee9e555bb83ddaf911a9666fa45c171cf727ab2fcbba344a0b21fc64578009
      cni.projectcalico.org/podIP: 10.52.1.12/32
      cni.projectcalico.org/podIPs: 10.52.1.12/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.1.12"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:11:24Z"
    generateName: engine-image-ei-b0369a5d-
    labels:
      controller-revision-hash: 6b9bcf576f
      longhorn.io/component: engine-image
      longhorn.io/engine-image: ei-b0369a5d
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:longhorn.io/component: {}
            f:longhorn.io/engine-image: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"29007a49-5112-4516-a2c0-7939f2c0a217"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"engine-image-ei-b0369a5d"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:11:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.1.12"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:50Z"
    name: engine-image-ei-b0369a5d-cmjx6
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: engine-image-ei-b0369a5d
      uid: 29007a49-5112-4516-a2c0-7939f2c0a217
    resourceVersion: "23742"
    uid: 592a5110-851b-4a8d-a3dd-7ca2831bffed
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev2
    containers:
    - args:
      - -c
      - diff /usr/local/bin/longhorn /data/longhorn > /dev/null 2>&1; if [ $? -ne
        0 ]; then cp -p /usr/local/bin/longhorn /data/ && echo installed; fi && trap
        'rm /data/longhorn* && echo cleaned up' EXIT && sleep infinity
      command:
      - /bin/bash
      image: longhornio/longhorn-engine:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: engine-image-ei-b0369a5d
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - ls /data/longhorn && /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lz6hg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev2
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/longhornio-longhorn-engine-v1.6.2
        type: "null"
      name: data
    - name: kube-api-access-lz6hg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fe66a6eb1bbe253c72bc7bdc04231568885e76c8a369282f98ce443e2a3c065c
      image: docker.io/longhornio/longhorn-engine:v1.6.2
      imageID: sha256:7fb50a1bbe317e1a03f4208d1e16853d4db9246a3afae79286fe931349e982c4
      lastState: {}
      name: engine-image-ei-b0369a5d
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:11:43Z"
    hostIP: 10.10.110.71
    phase: Running
    podIP: 10.52.1.12
    podIPs:
    - ip: 10.52.1.12
    qosClass: BestEffort
    startTime: "2024-08-06T02:11:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: d176ffad76fecf6c5e2a0fe7fddf8fb833fe934f28642e92e8ece4b6fe3b85ce
      cni.projectcalico.org/podIP: 10.52.0.49/32
      cni.projectcalico.org/podIPs: 10.52.0.49/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.49"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:48Z"
    generateName: engine-image-ei-b0369a5d-
    labels:
      controller-revision-hash: 6b9bcf576f
      longhorn.io/component: engine-image
      longhorn.io/engine-image: ei-b0369a5d
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:longhorn.io/component: {}
            f:longhorn.io/engine-image: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"29007a49-5112-4516-a2c0-7939f2c0a217"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"engine-image-ei-b0369a5d"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:48Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.49"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:54Z"
    name: engine-image-ei-b0369a5d-gcf5l
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: engine-image-ei-b0369a5d
      uid: 29007a49-5112-4516-a2c0-7939f2c0a217
    resourceVersion: "5504"
    uid: 2855a206-e41c-4852-8114-265177cc14f6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev1
    containers:
    - args:
      - -c
      - diff /usr/local/bin/longhorn /data/longhorn > /dev/null 2>&1; if [ $? -ne
        0 ]; then cp -p /usr/local/bin/longhorn /data/ && echo installed; fi && trap
        'rm /data/longhorn* && echo cleaned up' EXIT && sleep infinity
      command:
      - /bin/bash
      image: longhornio/longhorn-engine:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: engine-image-ei-b0369a5d
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - ls /data/longhorn && /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jbtk2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/longhornio-longhorn-engine-v1.6.2
        type: "null"
      name: data
    - name: kube-api-access-jbtk2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3132d9d78e6fbb2c845a1a5c50cb622f6d744ada3b23397e62564f52ddc205df
      image: docker.io/longhornio/longhorn-engine:v1.6.2
      imageID: sha256:7fb50a1bbe317e1a03f4208d1e16853d4db9246a3afae79286fe931349e982c4
      lastState: {}
      name: engine-image-ei-b0369a5d
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:50Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.49
    podIPs:
    - ip: 10.52.0.49
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 64ec89334b99f4768b51216262d64f18940042c28bd2528737961a7b52c6bff5
      cni.projectcalico.org/podIP: 10.52.2.11/32
      cni.projectcalico.org/podIPs: 10.52.2.11/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.2.11"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:13:15Z"
    generateName: engine-image-ei-b0369a5d-
    labels:
      controller-revision-hash: 6b9bcf576f
      longhorn.io/component: engine-image
      longhorn.io/engine-image: ei-b0369a5d
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:longhorn.io/component: {}
            f:longhorn.io/engine-image: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"29007a49-5112-4516-a2c0-7939f2c0a217"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"engine-image-ei-b0369a5d"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:13:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.2.11"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:40Z"
    name: engine-image-ei-b0369a5d-rr2nn
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: engine-image-ei-b0369a5d
      uid: 29007a49-5112-4516-a2c0-7939f2c0a217
    resourceVersion: "26893"
    uid: 0d97338d-e11a-4600-9a4c-e868d5cbb83d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev3
    containers:
    - args:
      - -c
      - diff /usr/local/bin/longhorn /data/longhorn > /dev/null 2>&1; if [ $? -ne
        0 ]; then cp -p /usr/local/bin/longhorn /data/ && echo installed; fi && trap
        'rm /data/longhorn* && echo cleaned up' EXIT && sleep infinity
      command:
      - /bin/bash
      image: longhornio/longhorn-engine:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: engine-image-ei-b0369a5d
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - ls /data/longhorn && /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9t7gl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev3
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/longhornio-longhorn-engine-v1.6.2
        type: "null"
      name: data
    - name: kube-api-access-9t7gl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c4268b9c82b3ee2bd9a6c34f7e0442a71721f1a787afe36bf4ac1bb9df31b68e
      image: docker.io/longhornio/longhorn-engine:v1.6.2
      imageID: sha256:7fb50a1bbe317e1a03f4208d1e16853d4db9246a3afae79286fe931349e982c4
      lastState: {}
      name: engine-image-ei-b0369a5d
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:13:34Z"
    hostIP: 10.10.110.61
    phase: Running
    podIP: 10.52.2.11
    podIPs:
    - ip: 10.52.2.11
    qosClass: BestEffort
    startTime: "2024-08-06T02:13:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ba62e7b779c15b1201ef852fb87b2bd32970d9aba85d21aace8779722d84de2c
      cni.projectcalico.org/podIP: 10.52.3.8/32
      cni.projectcalico.org/podIPs: 10.52.3.8/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.3.8"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:15:35Z"
    generateName: engine-image-ei-b0369a5d-
    labels:
      controller-revision-hash: 6b9bcf576f
      longhorn.io/component: engine-image
      longhorn.io/engine-image: ei-b0369a5d
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:longhorn.io/component: {}
            f:longhorn.io/engine-image: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"29007a49-5112-4516-a2c0-7939f2c0a217"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"engine-image-ei-b0369a5d"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/data/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"data"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:15:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.3.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:16:07Z"
    name: engine-image-ei-b0369a5d-xll9n
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: engine-image-ei-b0369a5d
      uid: 29007a49-5112-4516-a2c0-7939f2c0a217
    resourceVersion: "30511"
    uid: 128fea6a-f5c2-4743-9cd2-4b968f116ae5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev7
    containers:
    - args:
      - -c
      - diff /usr/local/bin/longhorn /data/longhorn > /dev/null 2>&1; if [ $? -ne
        0 ]; then cp -p /usr/local/bin/longhorn /data/ && echo installed; fi && trap
        'rm /data/longhorn* && echo cleaned up' EXIT && sleep infinity
      command:
      - /bin/bash
      image: longhornio/longhorn-engine:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: engine-image-ei-b0369a5d
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - ls /data/longhorn && /data/longhorn version --client-only
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data/
        name: data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f4gsd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev7
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/longhornio-longhorn-engine-v1.6.2
        type: "null"
      name: data
    - name: kube-api-access-f4gsd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:16:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:16:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://af3f6a7988858694e0b78c5c219c1cb1b0975bae807c0c6a40fab0c00d4ac3f2
      image: docker.io/longhornio/longhorn-engine:v1.6.2
      imageID: sha256:7fb50a1bbe317e1a03f4208d1e16853d4db9246a3afae79286fe931349e982c4
      lastState: {}
      name: engine-image-ei-b0369a5d
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:16:04Z"
    hostIP: 10.10.110.232
    phase: Running
    podIP: 10.52.3.8
    podIPs:
    - ip: 10.52.3.8
    qosClass: BestEffort
    startTime: "2024-08-06T02:15:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7010b885e0dad3072fb1db9aeafcccda10d46ceea469c143b3d293997d54a565
      cni.projectcalico.org/podIP: 10.52.2.15/32
      cni.projectcalico.org/podIPs: 10.52.2.15/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.2.15"
            ],
            "default": true,
            "dns": {}
        }]
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T02:13:37Z"
    labels:
      longhorn.io/component: instance-manager
      longhorn.io/data-engine: v1
      longhorn.io/instance-manager-image: imi-0b5e7e43
      longhorn.io/instance-manager-type: aio
      longhorn.io/managed-by: longhorn-manager
      longhorn.io/node: harvesterdev3
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/component: {}
            f:longhorn.io/data-engine: {}
            f:longhorn.io/instance-manager-image: {}
            f:longhorn.io/instance-manager-type: {}
            f:longhorn.io/managed-by: {}
            f:longhorn.io/node: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b96035d3-f420-489a-9746-8591c6ff3b47"}: {}
        f:spec:
          f:containers:
            k:{"name":"instance-manager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"TLS_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/engine-binaries/"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/var/lib/longhorn/unix-domain-socket/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tls-files/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"engine-binaries"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"unix-domain-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T02:13:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:37Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.2.15"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:41Z"
    name: instance-manager-9f23a62f2c5c5f13ea6237a9f5d066e3
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: InstanceManager
      name: instance-manager-9f23a62f2c5c5f13ea6237a9f5d066e3
      uid: b96035d3-f420-489a-9746-8591c6ff3b47
    resourceVersion: "26932"
    uid: 58b5d55a-0922-415a-8edc-090f94ffe4c9
  spec:
    containers:
    - args:
      - instance-manager
      - --debug
      - daemon
      - --listen
      - 0.0.0.0:8500
      env:
      - name: TLS_DIR
        value: /tls-files/
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: longhornio/longhorn-instance-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - test $(nc -zv localhost 8500 > /dev/null 2>&1 && nc -zv localhost 8501
            > /dev/null 2>&1 && nc -zv localhost 8502 > /dev/null 2>&1 && nc -zv localhost
            8503 > /dev/null 2>&1; echo $?) -eq 0
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: instance-manager
      resources:
        requests:
          cpu: 3840m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /engine-binaries/
        mountPropagation: HostToContainer
        name: engine-binaries
      - mountPath: /host/var/lib/longhorn/unix-domain-socket/
        name: unix-domain-socket
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lz5rd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev3
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /
        type: "null"
      name: host
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/
        type: "null"
      name: engine-binaries
    - hostPath:
        path: /var/lib/longhorn/unix-domain-socket/
        type: "null"
      name: unix-domain-socket
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-lz5rd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://fffed667312a57fc32030f82da461b762016f1312f117a963b789451aee149ea
      image: docker.io/longhornio/longhorn-instance-manager:v1.6.2
      imageID: sha256:23292e266e0ebdea715ad6bd70407adb261957f561d3be6715459aa6e1638b80
      lastState: {}
      name: instance-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:13:41Z"
    hostIP: 10.10.110.61
    phase: Running
    podIP: 10.52.2.15
    podIPs:
    - ip: 10.52.2.15
    qosClass: Burstable
    startTime: "2024-08-06T02:13:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: a3a521cc152b1c6629f46b78b6512da6e635f6ccf4c991d6932280edd26b7b88
      cni.projectcalico.org/podIP: 10.52.0.48/32
      cni.projectcalico.org/podIPs: 10.52.0.48/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.48"
            ],
            "default": true,
            "dns": {}
        }]
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T01:55:48Z"
    labels:
      longhorn.io/component: instance-manager
      longhorn.io/data-engine: v1
      longhorn.io/instance-manager-image: imi-0b5e7e43
      longhorn.io/instance-manager-type: aio
      longhorn.io/managed-by: longhorn-manager
      longhorn.io/node: harvesterdev1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/component: {}
            f:longhorn.io/data-engine: {}
            f:longhorn.io/instance-manager-image: {}
            f:longhorn.io/instance-manager-type: {}
            f:longhorn.io/managed-by: {}
            f:longhorn.io/node: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ff3d3f23-2224-437e-9b52-ddda8239b922"}: {}
        f:spec:
          f:containers:
            k:{"name":"instance-manager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"TLS_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/engine-binaries/"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/var/lib/longhorn/unix-domain-socket/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tls-files/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"engine-binaries"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"unix-domain-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T01:55:48Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.48"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:53Z"
    name: instance-manager-aca441377f086c67b8a79ed0847591fc
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: InstanceManager
      name: instance-manager-aca441377f086c67b8a79ed0847591fc
      uid: ff3d3f23-2224-437e-9b52-ddda8239b922
    resourceVersion: "5482"
    uid: a8206f6f-db06-44d6-b607-9be1ec0aa035
  spec:
    containers:
    - args:
      - instance-manager
      - --debug
      - daemon
      - --listen
      - 0.0.0.0:8500
      env:
      - name: TLS_DIR
        value: /tls-files/
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: longhornio/longhorn-instance-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - test $(nc -zv localhost 8500 > /dev/null 2>&1 && nc -zv localhost 8501
            > /dev/null 2>&1 && nc -zv localhost 8502 > /dev/null 2>&1 && nc -zv localhost
            8503 > /dev/null 2>&1; echo $?) -eq 0
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: instance-manager
      resources:
        requests:
          cpu: 3840m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /engine-binaries/
        mountPropagation: HostToContainer
        name: engine-binaries
      - mountPath: /host/var/lib/longhorn/unix-domain-socket/
        name: unix-domain-socket
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vhvwj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /
        type: "null"
      name: host
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/
        type: "null"
      name: engine-binaries
    - hostPath:
        path: /var/lib/longhorn/unix-domain-socket/
        type: "null"
      name: unix-domain-socket
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-vhvwj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://74ebd84c95155d05b2e8091825dadce83be6573818dd60a01953b980a403637b
      image: docker.io/longhornio/longhorn-instance-manager:v1.6.2
      imageID: sha256:23292e266e0ebdea715ad6bd70407adb261957f561d3be6715459aa6e1638b80
      lastState: {}
      name: instance-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:52Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.48
    podIPs:
    - ip: 10.52.0.48
    qosClass: Burstable
    startTime: "2024-08-06T01:55:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: abb82f97b092df00a92d5c41cfd5b1eeb4ea34f006b0d9d22430c906a4c0600b
      cni.projectcalico.org/podIP: 10.52.1.16/32
      cni.projectcalico.org/podIPs: 10.52.1.16/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.1.16"
            ],
            "default": true,
            "dns": {}
        }]
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T02:11:47Z"
    labels:
      longhorn.io/component: instance-manager
      longhorn.io/data-engine: v1
      longhorn.io/instance-manager-image: imi-0b5e7e43
      longhorn.io/instance-manager-type: aio
      longhorn.io/managed-by: longhorn-manager
      longhorn.io/node: harvesterdev2
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/component: {}
            f:longhorn.io/data-engine: {}
            f:longhorn.io/instance-manager-image: {}
            f:longhorn.io/instance-manager-type: {}
            f:longhorn.io/managed-by: {}
            f:longhorn.io/node: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d4404dde-6a78-48b7-94a7-a9fe5fc69455"}: {}
        f:spec:
          f:containers:
            k:{"name":"instance-manager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"TLS_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/engine-binaries/"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/var/lib/longhorn/unix-domain-socket/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tls-files/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"engine-binaries"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"unix-domain-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T02:11:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.1.16"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:52Z"
    name: instance-manager-e79bb0adc5a3ca1cf3e13b5c138e35c2
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: InstanceManager
      name: instance-manager-e79bb0adc5a3ca1cf3e13b5c138e35c2
      uid: d4404dde-6a78-48b7-94a7-a9fe5fc69455
    resourceVersion: "23779"
    uid: 7b55d7b8-63f0-4f72-8c29-6ffa905dce27
  spec:
    containers:
    - args:
      - instance-manager
      - --debug
      - daemon
      - --listen
      - 0.0.0.0:8500
      env:
      - name: TLS_DIR
        value: /tls-files/
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: longhornio/longhorn-instance-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - test $(nc -zv localhost 8500 > /dev/null 2>&1 && nc -zv localhost 8501
            > /dev/null 2>&1 && nc -zv localhost 8502 > /dev/null 2>&1 && nc -zv localhost
            8503 > /dev/null 2>&1; echo $?) -eq 0
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: instance-manager
      resources:
        requests:
          cpu: 3840m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /engine-binaries/
        mountPropagation: HostToContainer
        name: engine-binaries
      - mountPath: /host/var/lib/longhorn/unix-domain-socket/
        name: unix-domain-socket
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x7wps
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev2
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /
        type: "null"
      name: host
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/
        type: "null"
      name: engine-binaries
    - hostPath:
        path: /var/lib/longhorn/unix-domain-socket/
        type: "null"
      name: unix-domain-socket
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-x7wps
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://26372ea321f0d19cae78a30d4d16467a89e4681ac901c548c117ff7092a03e72
      image: docker.io/longhornio/longhorn-instance-manager:v1.6.2
      imageID: sha256:23292e266e0ebdea715ad6bd70407adb261957f561d3be6715459aa6e1638b80
      lastState: {}
      name: instance-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:11:51Z"
    hostIP: 10.10.110.71
    phase: Running
    podIP: 10.52.1.16
    podIPs:
    - ip: 10.52.1.16
    qosClass: Burstable
    startTime: "2024-08-06T02:11:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: acec918aa20a1fc495f2742c5ccd81fe98a6bfb3c19d56424c2137c8c37a255f
      cni.projectcalico.org/podIP: 10.52.3.12/32
      cni.projectcalico.org/podIPs: 10.52.3.12/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.3.12"
            ],
            "default": true,
            "dns": {}
        }]
      longhorn.io/last-applied-tolerations: '[{"key":"kubevirt.io/drain","operator":"Exists","effect":"NoSchedule"}]'
    creationTimestamp: "2024-08-06T02:16:03Z"
    labels:
      longhorn.io/component: instance-manager
      longhorn.io/data-engine: v1
      longhorn.io/instance-manager-image: imi-0b5e7e43
      longhorn.io/instance-manager-type: aio
      longhorn.io/managed-by: longhorn-manager
      longhorn.io/node: harvesterdev7
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:longhorn.io/last-applied-tolerations: {}
          f:labels:
            .: {}
            f:longhorn.io/component: {}
            f:longhorn.io/data-engine: {}
            f:longhorn.io/instance-manager-image: {}
            f:longhorn.io/instance-manager-type: {}
            f:longhorn.io/managed-by: {}
            f:longhorn.io/node: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f089be9d-fd51-4754-bf48-f18f0926db7e"}: {}
        f:spec:
          f:containers:
            k:{"name":"instance-manager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"TLS_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/engine-binaries/"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/var/lib/longhorn/unix-domain-socket/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tls-files/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeName: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"engine-binaries"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"unix-domain-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: longhorn-manager
      operation: Update
      time: "2024-08-06T02:16:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:16:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:16:05Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.3.12"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:16:16Z"
    name: instance-manager-fd2210d5d4d7d5980dfa52c0fc71e1fa
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: longhorn.io/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: InstanceManager
      name: instance-manager-fd2210d5d4d7d5980dfa52c0fc71e1fa
      uid: f089be9d-fd51-4754-bf48-f18f0926db7e
    resourceVersion: "30682"
    uid: 2a277950-a522-4697-8868-5142d9059a8a
  spec:
    containers:
    - args:
      - instance-manager
      - --debug
      - daemon
      - --listen
      - 0.0.0.0:8500
      env:
      - name: TLS_DIR
        value: /tls-files/
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: longhornio/longhorn-instance-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - test $(nc -zv localhost 8500 > /dev/null 2>&1 && nc -zv localhost 8501
            > /dev/null 2>&1 && nc -zv localhost 8502 > /dev/null 2>&1 && nc -zv localhost
            8503 > /dev/null 2>&1; echo $?) -eq 0
        failureThreshold: 3
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: instance-manager
      resources:
        requests:
          cpu: 7680m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /engine-binaries/
        mountPropagation: HostToContainer
        name: engine-binaries
      - mountPath: /host/var/lib/longhorn/unix-domain-socket/
        name: unix-domain-socket
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m7bmr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev7
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - hostPath:
        path: /
        type: "null"
      name: host
    - hostPath:
        path: /var/lib/longhorn/engine-binaries/
        type: "null"
      name: engine-binaries
    - hostPath:
        path: /var/lib/longhorn/unix-domain-socket/
        type: "null"
      name: unix-domain-socket
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-m7bmr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:16:03Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:16:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:16:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:16:03Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a50df48b453e9829cfa1df8a695e87c3082d071cb5a16aa7f21b15e281d6902b
      image: docker.io/longhornio/longhorn-instance-manager:v1.6.2
      imageID: sha256:23292e266e0ebdea715ad6bd70407adb261957f561d3be6715459aa6e1638b80
      lastState: {}
      name: instance-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:16:15Z"
    hostIP: 10.10.110.232
    phase: Running
    podIP: 10.52.3.12
    podIPs:
    - ip: 10.52.3.12
    qosClass: Burstable
    startTime: "2024-08-06T02:16:03Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 86b1aaa0d071e63afc5b4090c27b27954d712886443e79b5d45a9b32d6dfe290
      cni.projectcalico.org/podIP: 10.52.3.6/32
      cni.projectcalico.org/podIPs: 10.52.3.6/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.3.6"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:15:35Z"
    generateName: longhorn-csi-plugin-
    labels:
      app: longhorn-csi-plugin
      controller-revision-hash: 859b47f8dd
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ccc4349d-0a26-48b0-b156-e7bb158c38e3"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-csi-plugin"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"CSI_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9808,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/pods"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
            k:{"name":"longhorn-liveness-probe"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-driver-registrar"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/registration"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostPID: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"kubernetes-csi-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"pods-mount-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"registration-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:15:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.3.6"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:16:04Z"
    name: longhorn-csi-plugin-drk5n
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-csi-plugin
      uid: ccc4349d-0a26-48b0-b156-e7bb158c38e3
    resourceVersion: "30440"
    uid: 3fb759a9-aaed-41fd-a5b6-635e03adc612
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev7
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=/var/lib/kubelet/plugins/driver.longhorn.io/csi.sock
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      image: longhornio/csi-node-driver-registrar:v2.9.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -rf /registration/driver.longhorn.io /registration/driver.longhorn.io-reg.sock
              /csi//*
      name: node-driver-registrar
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vd25d
        readOnly: true
    - args:
      - --v=4
      - --csi-address=/csi/csi.sock
      image: longhornio/livenessprobe:v2.12.0
      imagePullPolicy: IfNotPresent
      name: longhorn-liveness-probe
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vd25d
        readOnly: true
    - args:
      - longhorn-manager
      - -d
      - csi
      - --nodeid=$(NODE_ID)
      - --endpoint=$(CSI_ENDPOINT)
      - --drivername=driver.longhorn.io
      - --manager-url=http://longhorn-backend:9500/v1
      env:
      - name: NODE_ID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -f /csi//*
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9808
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: longhorn-csi-plugin
      ports:
      - containerPort: 9808
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
        mountPropagation: Bidirectional
        name: kubernetes-csi-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: host-dev
      - mountPath: /sys
        name: host-sys
      - mountPath: /host
        mountPropagation: Bidirectional
        name: host
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vd25d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostPID: true
    nodeName: harvesterdev7
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/kubernetes.io/csi
        type: DirectoryOrCreate
      name: kubernetes-csi-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: pods-mount-dir
    - hostPath:
        path: /dev
        type: "null"
      name: host-dev
    - hostPath:
        path: /sys
        type: "null"
      name: host-sys
    - hostPath:
        path: /
        type: "null"
      name: host
    - hostPath:
        path: /lib/modules
        type: "null"
      name: lib-modules
    - name: kube-api-access-vd25d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:16:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:16:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://da1f9344be1d614b79aac8a56371b9bd85e5c0a530454890d9c42cbb63a6e7d4
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: longhorn-csi-plugin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:16:04Z"
    - containerID: containerd://b3db05035b88f4e1dc6d37c7b2ff2ee2ce5a19cfc19ee7f0a5eb562251d927d9
      image: docker.io/longhornio/livenessprobe:v2.12.0
      imageID: sha256:38ae1b6759b014a5a830012cab01e2b686f4ab2ae1efc6895b641434877c4d11
      lastState: {}
      name: longhorn-liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:16:01Z"
    - containerID: containerd://94578c00417b20174d626e395d192ddac43c6c6fb3ab8621718dba00a2a35393
      image: docker.io/longhornio/csi-node-driver-registrar:v2.9.2
      imageID: sha256:438c692b0cb6d50af207439fba2bae492a64b3469a263246bdeb9179b2ee9601
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:15:53Z"
    hostIP: 10.10.110.232
    phase: Running
    podIP: 10.52.3.6
    podIPs:
    - ip: 10.52.3.6
    qosClass: BestEffort
    startTime: "2024-08-06T02:15:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: c9e3a3a8487af6988ff7d8d4ac0a84d6298fca86877ff5be9dd38dd3aee7cd0c
      cni.projectcalico.org/podIP: 10.52.1.14/32
      cni.projectcalico.org/podIPs: 10.52.1.14/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.1.14"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:11:24Z"
    generateName: longhorn-csi-plugin-
    labels:
      app: longhorn-csi-plugin
      controller-revision-hash: 859b47f8dd
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ccc4349d-0a26-48b0-b156-e7bb158c38e3"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-csi-plugin"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"CSI_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9808,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/pods"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
            k:{"name":"longhorn-liveness-probe"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-driver-registrar"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/registration"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostPID: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"kubernetes-csi-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"pods-mount-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"registration-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:11:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:41Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.1.14"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:44Z"
    name: longhorn-csi-plugin-fbz4z
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-csi-plugin
      uid: ccc4349d-0a26-48b0-b156-e7bb158c38e3
    resourceVersion: "23582"
    uid: 6e7871e5-cf62-4fec-ac08-fc3110d91f01
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev2
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=/var/lib/kubelet/plugins/driver.longhorn.io/csi.sock
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      image: longhornio/csi-node-driver-registrar:v2.9.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -rf /registration/driver.longhorn.io /registration/driver.longhorn.io-reg.sock
              /csi//*
      name: node-driver-registrar
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9xxrw
        readOnly: true
    - args:
      - --v=4
      - --csi-address=/csi/csi.sock
      image: longhornio/livenessprobe:v2.12.0
      imagePullPolicy: IfNotPresent
      name: longhorn-liveness-probe
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9xxrw
        readOnly: true
    - args:
      - longhorn-manager
      - -d
      - csi
      - --nodeid=$(NODE_ID)
      - --endpoint=$(CSI_ENDPOINT)
      - --drivername=driver.longhorn.io
      - --manager-url=http://longhorn-backend:9500/v1
      env:
      - name: NODE_ID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -f /csi//*
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9808
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: longhorn-csi-plugin
      ports:
      - containerPort: 9808
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
        mountPropagation: Bidirectional
        name: kubernetes-csi-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: host-dev
      - mountPath: /sys
        name: host-sys
      - mountPath: /host
        mountPropagation: Bidirectional
        name: host
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9xxrw
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostPID: true
    nodeName: harvesterdev2
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/kubernetes.io/csi
        type: DirectoryOrCreate
      name: kubernetes-csi-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: pods-mount-dir
    - hostPath:
        path: /dev
        type: "null"
      name: host-dev
    - hostPath:
        path: /sys
        type: "null"
      name: host-sys
    - hostPath:
        path: /
        type: "null"
      name: host
    - hostPath:
        path: /lib/modules
        type: "null"
      name: lib-modules
    - name: kube-api-access-9xxrw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8acab8bab97dc5cbaf43d172e295e9660a78a5b8c40972abe55cda2b77ec8f0c
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: longhorn-csi-plugin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:11:43Z"
    - containerID: containerd://8b70c64187655c5c6769bead0b0b9e5d2072d3d9cbf70d9cb813933d97a7a151
      image: docker.io/longhornio/livenessprobe:v2.12.0
      imageID: sha256:38ae1b6759b014a5a830012cab01e2b686f4ab2ae1efc6895b641434877c4d11
      lastState: {}
      name: longhorn-liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:11:42Z"
    - containerID: containerd://d2028a963570eff122100e620218cd26dd216c9b9b3c3dbd1ff9795134bea793
      image: docker.io/longhornio/csi-node-driver-registrar:v2.9.2
      imageID: sha256:438c692b0cb6d50af207439fba2bae492a64b3469a263246bdeb9179b2ee9601
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:11:41Z"
    hostIP: 10.10.110.71
    phase: Running
    podIP: 10.52.1.14
    podIPs:
    - ip: 10.52.1.14
    qosClass: BestEffort
    startTime: "2024-08-06T02:11:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ca1def4eb5b7e99dfc8ed376b4cf6080c01cba01b73ab4b700a97d98a70dcaaf
      cni.projectcalico.org/podIP: 10.52.0.62/32
      cni.projectcalico.org/podIPs: 10.52.0.62/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.62"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:52Z"
    generateName: longhorn-csi-plugin-
    labels:
      app: longhorn-csi-plugin
      controller-revision-hash: 859b47f8dd
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ccc4349d-0a26-48b0-b156-e7bb158c38e3"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-csi-plugin"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"CSI_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9808,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/pods"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
            k:{"name":"longhorn-liveness-probe"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-driver-registrar"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/registration"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostPID: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"kubernetes-csi-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"pods-mount-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"registration-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.62"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:54Z"
    name: longhorn-csi-plugin-mpvwx
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-csi-plugin
      uid: ccc4349d-0a26-48b0-b156-e7bb158c38e3
    resourceVersion: "5545"
    uid: 7c0fdee7-3ff4-4847-ae38-fc9a1a8aeb2e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev1
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=/var/lib/kubelet/plugins/driver.longhorn.io/csi.sock
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      image: longhornio/csi-node-driver-registrar:v2.9.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -rf /registration/driver.longhorn.io /registration/driver.longhorn.io-reg.sock
              /csi//*
      name: node-driver-registrar
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nk5gg
        readOnly: true
    - args:
      - --v=4
      - --csi-address=/csi/csi.sock
      image: longhornio/livenessprobe:v2.12.0
      imagePullPolicy: IfNotPresent
      name: longhorn-liveness-probe
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nk5gg
        readOnly: true
    - args:
      - longhorn-manager
      - -d
      - csi
      - --nodeid=$(NODE_ID)
      - --endpoint=$(CSI_ENDPOINT)
      - --drivername=driver.longhorn.io
      - --manager-url=http://longhorn-backend:9500/v1
      env:
      - name: NODE_ID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -f /csi//*
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9808
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: longhorn-csi-plugin
      ports:
      - containerPort: 9808
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
        mountPropagation: Bidirectional
        name: kubernetes-csi-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: host-dev
      - mountPath: /sys
        name: host-sys
      - mountPath: /host
        mountPropagation: Bidirectional
        name: host
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nk5gg
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostPID: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/kubernetes.io/csi
        type: DirectoryOrCreate
      name: kubernetes-csi-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: pods-mount-dir
    - hostPath:
        path: /dev
        type: "null"
      name: host-dev
    - hostPath:
        path: /sys
        type: "null"
      name: host-sys
    - hostPath:
        path: /
        type: "null"
      name: host
    - hostPath:
        path: /lib/modules
        type: "null"
      name: lib-modules
    - name: kube-api-access-nk5gg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://06bff8628b23b9e485c6edd09d0e219a70f8543528fbb0b8bcf0da665c2511b7
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: longhorn-csi-plugin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:54Z"
    - containerID: containerd://dcdd7f5379e5403cd662f07af42bd73df485c778092289c39f09d3a8645af955
      image: docker.io/longhornio/livenessprobe:v2.12.0
      imageID: sha256:38ae1b6759b014a5a830012cab01e2b686f4ab2ae1efc6895b641434877c4d11
      lastState: {}
      name: longhorn-liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    - containerID: containerd://318feb89a0cc19e986075355dcc9eb2d8a263515a930ac477b928377d803ffef
      image: docker.io/longhornio/csi-node-driver-registrar:v2.9.2
      imageID: sha256:438c692b0cb6d50af207439fba2bae492a64b3469a263246bdeb9179b2ee9601
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:53Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.62
    podIPs:
    - ip: 10.52.0.62
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e993a7abc8116cedff15e0069f432867951beac5358f623dd41292b21c95d5f1
      cni.projectcalico.org/podIP: 10.52.2.13/32
      cni.projectcalico.org/podIPs: 10.52.2.13/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.2.13"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:13:15Z"
    generateName: longhorn-csi-plugin-
    labels:
      app: longhorn-csi-plugin
      controller-revision-hash: 859b47f8dd
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"ccc4349d-0a26-48b0-b156-e7bb158c38e3"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-csi-plugin"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"CSI_ENDPOINT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_ID"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9808,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:add: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/dev"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/plugins/kubernetes.io/csi"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet/pods"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
            k:{"name":"longhorn-liveness-probe"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-driver-registrar"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/csi/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/registration"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostPID: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"kubernetes-csi-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"pods-mount-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"registration-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"socket-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:13:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.2.13"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:35Z"
    name: longhorn-csi-plugin-z45xn
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-csi-plugin
      uid: ccc4349d-0a26-48b0-b156-e7bb158c38e3
    resourceVersion: "26766"
    uid: a934a388-a7e2-4891-95d2-6f134845404d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev3
    containers:
    - args:
      - --v=2
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=/var/lib/kubelet/plugins/driver.longhorn.io/csi.sock
      env:
      - name: ADDRESS
        value: /csi/csi.sock
      image: longhornio/csi-node-driver-registrar:v2.9.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -rf /registration/driver.longhorn.io /registration/driver.longhorn.io-reg.sock
              /csi//*
      name: node-driver-registrar
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gf8r5
        readOnly: true
    - args:
      - --v=4
      - --csi-address=/csi/csi.sock
      image: longhornio/livenessprobe:v2.12.0
      imagePullPolicy: IfNotPresent
      name: longhorn-liveness-probe
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gf8r5
        readOnly: true
    - args:
      - longhorn-manager
      - -d
      - csi
      - --nodeid=$(NODE_ID)
      - --endpoint=$(CSI_ENDPOINT)
      - --drivername=driver.longhorn.io
      - --manager-url=http://longhorn-backend:9500/v1
      env:
      - name: NODE_ID
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /bin/sh
            - -c
            - rm -f /csi//*
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9808
          scheme: HTTP
        initialDelaySeconds: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 4
      name: longhorn-csi-plugin
      ports:
      - containerPort: 9808
        protocol: TCP
      resources: {}
      securityContext:
        allowPrivilegeEscalation: true
        capabilities:
          add:
          - SYS_ADMIN
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi/
        name: socket-dir
      - mountPath: /var/lib/kubelet/plugins/kubernetes.io/csi
        mountPropagation: Bidirectional
        name: kubernetes-csi-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: pods-mount-dir
      - mountPath: /dev
        name: host-dev
      - mountPath: /sys
        name: host-sys
      - mountPath: /host
        mountPropagation: Bidirectional
        name: host
      - mountPath: /lib/modules
        name: lib-modules
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gf8r5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostPID: true
    nodeName: harvesterdev3
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: kubevirt.io/drain
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/kubernetes.io/csi
        type: DirectoryOrCreate
      name: kubernetes-csi-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/driver.longhorn.io
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: pods-mount-dir
    - hostPath:
        path: /dev
        type: "null"
      name: host-dev
    - hostPath:
        path: /sys
        type: "null"
      name: host-sys
    - hostPath:
        path: /
        type: "null"
      name: host
    - hostPath:
        path: /lib/modules
        type: "null"
      name: lib-modules
    - name: kube-api-access-gf8r5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3cfbfa6a9b96ec26572251ba03ef4d72ee922e4d0a23e905b1afd97425864e15
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState:
        terminated:
          containerID: containerd://1c61e84f10f7643fad667129f3198b67bc4fd51ff7d2fa792e240b5c31656282
          exitCode: 1
          finishedAt: "2024-08-06T02:13:33Z"
          reason: Error
          startedAt: "2024-08-06T02:13:33Z"
      name: longhorn-csi-plugin
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:13:35Z"
    - containerID: containerd://d3c9b8ca7eca70939fb6c62c8c31f23057e3cd2109faef08000216c7c7d47404
      image: docker.io/longhornio/livenessprobe:v2.12.0
      imageID: sha256:38ae1b6759b014a5a830012cab01e2b686f4ab2ae1efc6895b641434877c4d11
      lastState: {}
      name: longhorn-liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:13:33Z"
    - containerID: containerd://bbea1288b386bf29c294fa4db94347ea6ca15b46b2aade7a2de167d2294df823
      image: docker.io/longhornio/csi-node-driver-registrar:v2.9.2
      imageID: sha256:438c692b0cb6d50af207439fba2bae492a64b3469a263246bdeb9179b2ee9601
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:13:32Z"
    hostIP: 10.10.110.61
    phase: Running
    podIP: 10.52.2.13
    podIPs:
    - ip: 10.52.2.13
    qosClass: BestEffort
    startTime: "2024-08-06T02:13:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 53092b6a8dc8d6488d115033a92c3bf974038137d94fdce5f5d95f6e6698d43b
      cni.projectcalico.org/podIP: 10.52.0.43/32
      cni.projectcalico.org/podIPs: 10.52.0.43/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.43"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:39Z"
    generateName: longhorn-driver-deployer-85cf4b4849-
    labels:
      app: longhorn-driver-deployer
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.6.2
      helm.sh/chart: longhorn-1.6.2
      pod-template-hash: 85cf4b4849
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c36eed35-2cee-4d96-be46-4fbf41806c25"}: {}
        f:spec:
          f:containers:
            k:{"name":"longhorn-driver-deployer"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CSI_ATTACHER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_LIVENESS_PROBE_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_NODE_DRIVER_REGISTRAR_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_PROVISIONER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_RESIZER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CSI_SNAPSHOTTER_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBELET_ROOT_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SERVICE_ACCOUNT"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"wait-longhorn-manager"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.43"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:52Z"
    name: longhorn-driver-deployer-85cf4b4849-rn9jk
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: longhorn-driver-deployer-85cf4b4849
      uid: c36eed35-2cee-4d96-be46-4fbf41806c25
    resourceVersion: "5406"
    uid: db529f91-9647-4423-b6e2-76ed30a60123
  spec:
    containers:
    - command:
      - longhorn-manager
      - -d
      - deploy-driver
      - --manager-image
      - longhornio/longhorn-manager:v1.6.2
      - --manager-url
      - http://longhorn-backend:9500/v1
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: SERVICE_ACCOUNT
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.serviceAccountName
      - name: KUBELET_ROOT_DIR
        value: /var/lib/kubelet
      - name: CSI_ATTACHER_IMAGE
        value: longhornio/csi-attacher:v4.5.1
      - name: CSI_PROVISIONER_IMAGE
        value: longhornio/csi-provisioner:v3.6.4
      - name: CSI_NODE_DRIVER_REGISTRAR_IMAGE
        value: longhornio/csi-node-driver-registrar:v2.9.2
      - name: CSI_RESIZER_IMAGE
        value: longhornio/csi-resizer:v1.10.1
      - name: CSI_SNAPSHOTTER_IMAGE
        value: longhornio/csi-snapshotter:v6.3.4
      - name: CSI_LIVENESS_PROBE_IMAGE
        value: longhornio/livenessprobe:v2.12.0
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: longhorn-driver-deployer
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cs4xx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    initContainers:
    - command:
      - sh
      - -c
      - while [ $(curl -m 1 -s -o /dev/null -w "%{http_code}" http://longhorn-backend:9500/v1)
        != "200" ]; do echo waiting; sleep 2; done
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: wait-longhorn-manager
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cs4xx
        readOnly: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsUser: 0
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-cs4xx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://baf98281db25ed678bdafa34c11ba0af6c106e98d657758368e4e11cc16fc6b3
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: longhorn-driver-deployer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:52Z"
    hostIP: 10.10.110.11
    initContainerStatuses:
    - containerID: containerd://0865b8dccba3391212bce30aad6dcf4b5fc72591c0705e96f8c1a29ea200f8bb
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: wait-longhorn-manager
      ready: true
      restartCount: 0
      state:
        terminated:
          containerID: containerd://0865b8dccba3391212bce30aad6dcf4b5fc72591c0705e96f8c1a29ea200f8bb
          exitCode: 0
          finishedAt: "2024-08-06T01:55:49Z"
          reason: Completed
          startedAt: "2024-08-06T01:55:43Z"
    phase: Running
    podIP: 10.52.0.43
    podIPs:
    - ip: 10.52.0.43
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-06T02:15:35Z"
    generateName: longhorn-loop-device-cleaner-
    labels:
      app: longhorn-loop-device-cleaner
      controller-revision-hash: 56f47c97d8
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8426e0f2-e691-46c3-ba02-3157714defde"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-loop-device-cleaner"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:15:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.10.110.232"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:38Z"
    name: longhorn-loop-device-cleaner-fw8h7
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-loop-device-cleaner
      uid: 8426e0f2-e691-46c3-ba02-3157714defde
    resourceVersion: "29781"
    uid: a05bded7-7646-4901-bc60-e48804227d6e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev7
    containers:
    - command:
      - nsenter
      - --mount=/proc/1/ns/mnt
      - --
      - bash
      - -c
      - |
        while true ;
        do
            for device in /sys/block/loop* ; do
                    echo "INFO: checking loop device $device"
                    if test -f "$device/loop/backing_file"; then
                            backingFile=`cat "$device/loop/backing_file"`
                            # removing trailling spaces
                            backingFile=`echo $backingFile | sed 's/ *$//g'`
                            if [[ $backingFile == *"(deleted)" ]] ; then
                                    loopDevice="/dev/$(echo $device | cut -d"/" -f4)"
                                    echo "WARN: detected removed backing file $backingFile"
                                    echo "WARN: detaching the loop device $loopDevice"
                                    losetup -d $loopDevice
                            fi
                    else
                            echo "INFO: skipping loop device $device: backing file $device/loop/backing_file doesn't exist"
                    fi
            done
            sleepingTime=60
            echo "INFO: sleeping for ${sleepingTime}s"
            sleep $sleepingTime
        done
      image: registry.suse.com/bci/bci-base:15.5
      imagePullPolicy: IfNotPresent
      name: longhorn-loop-device-cleaner
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rj762
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: harvesterdev7
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: kube-api-access-rj762
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a3c04800e0101f9b9a7310e7a36cdbe4cfe11c13a17460e6de0dad26234daf2e
      image: registry.suse.com/bci/bci-base:15.5
      imageID: sha256:a9657d58711e206b12a746612e174bf7d500bb8135d9fffcf65a1c7bfb2a0daf
      lastState: {}
      name: longhorn-loop-device-cleaner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:15:37Z"
    hostIP: 10.10.110.232
    phase: Running
    podIP: 10.10.110.232
    podIPs:
    - ip: 10.10.110.232
    qosClass: BestEffort
    startTime: "2024-08-06T02:15:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-06T01:55:39Z"
    generateName: longhorn-loop-device-cleaner-
    labels:
      app: longhorn-loop-device-cleaner
      controller-revision-hash: 56f47c97d8
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8426e0f2-e691-46c3-ba02-3157714defde"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-loop-device-cleaner"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.10.110.11"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    name: longhorn-loop-device-cleaner-k82rz
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-loop-device-cleaner
      uid: 8426e0f2-e691-46c3-ba02-3157714defde
    resourceVersion: "4805"
    uid: 00d4e2e4-561f-4750-8f31-1ebe312ad605
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev1
    containers:
    - command:
      - nsenter
      - --mount=/proc/1/ns/mnt
      - --
      - bash
      - -c
      - |
        while true ;
        do
            for device in /sys/block/loop* ; do
                    echo "INFO: checking loop device $device"
                    if test -f "$device/loop/backing_file"; then
                            backingFile=`cat "$device/loop/backing_file"`
                            # removing trailling spaces
                            backingFile=`echo $backingFile | sed 's/ *$//g'`
                            if [[ $backingFile == *"(deleted)" ]] ; then
                                    loopDevice="/dev/$(echo $device | cut -d"/" -f4)"
                                    echo "WARN: detected removed backing file $backingFile"
                                    echo "WARN: detaching the loop device $loopDevice"
                                    losetup -d $loopDevice
                            fi
                    else
                            echo "INFO: skipping loop device $device: backing file $device/loop/backing_file doesn't exist"
                    fi
            done
            sleepingTime=60
            echo "INFO: sleeping for ${sleepingTime}s"
            sleep $sleepingTime
        done
      image: registry.suse.com/bci/bci-base:15.5
      imagePullPolicy: IfNotPresent
      name: longhorn-loop-device-cleaner
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4nkqx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: kube-api-access-4nkqx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b309567aa95d6dd9a1e793d693459729623337c261daa2e77601aba1ac80060c
      image: registry.suse.com/bci/bci-base:15.5
      imageID: sha256:a9657d58711e206b12a746612e174bf7d500bb8135d9fffcf65a1c7bfb2a0daf
      lastState: {}
      name: longhorn-loop-device-cleaner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:40Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.10.110.11
    podIPs:
    - ip: 10.10.110.11
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-06T02:13:16Z"
    generateName: longhorn-loop-device-cleaner-
    labels:
      app: longhorn-loop-device-cleaner
      controller-revision-hash: 56f47c97d8
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8426e0f2-e691-46c3-ba02-3157714defde"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-loop-device-cleaner"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:13:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.10.110.61"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:17Z"
    name: longhorn-loop-device-cleaner-n7x7q
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-loop-device-cleaner
      uid: 8426e0f2-e691-46c3-ba02-3157714defde
    resourceVersion: "26121"
    uid: ab9ef0b0-4515-4f23-b207-ea743b17477f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev3
    containers:
    - command:
      - nsenter
      - --mount=/proc/1/ns/mnt
      - --
      - bash
      - -c
      - |
        while true ;
        do
            for device in /sys/block/loop* ; do
                    echo "INFO: checking loop device $device"
                    if test -f "$device/loop/backing_file"; then
                            backingFile=`cat "$device/loop/backing_file"`
                            # removing trailling spaces
                            backingFile=`echo $backingFile | sed 's/ *$//g'`
                            if [[ $backingFile == *"(deleted)" ]] ; then
                                    loopDevice="/dev/$(echo $device | cut -d"/" -f4)"
                                    echo "WARN: detected removed backing file $backingFile"
                                    echo "WARN: detaching the loop device $loopDevice"
                                    losetup -d $loopDevice
                            fi
                    else
                            echo "INFO: skipping loop device $device: backing file $device/loop/backing_file doesn't exist"
                    fi
            done
            sleepingTime=60
            echo "INFO: sleeping for ${sleepingTime}s"
            sleep $sleepingTime
        done
      image: registry.suse.com/bci/bci-base:15.5
      imagePullPolicy: IfNotPresent
      name: longhorn-loop-device-cleaner
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mdr84
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: harvesterdev3
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: kube-api-access-mdr84
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:17Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:17Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a5b56ea5abbf99752e19738c0ff52cfb455ebc4c4c44c6e1238b07423e0955b8
      image: registry.suse.com/bci/bci-base:15.5
      imageID: sha256:a9657d58711e206b12a746612e174bf7d500bb8135d9fffcf65a1c7bfb2a0daf
      lastState: {}
      name: longhorn-loop-device-cleaner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:13:17Z"
    hostIP: 10.10.110.61
    phase: Running
    podIP: 10.10.110.61
    podIPs:
    - ip: 10.10.110.61
    qosClass: BestEffort
    startTime: "2024-08-06T02:13:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2024-08-06T02:11:24Z"
    generateName: longhorn-loop-device-cleaner-
    labels:
      app: longhorn-loop-device-cleaner
      controller-revision-hash: 56f47c97d8
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8426e0f2-e691-46c3-ba02-3157714defde"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-loop-device-cleaner"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:11:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.10.110.71"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:26Z"
    name: longhorn-loop-device-cleaner-qr4zr
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-loop-device-cleaner
      uid: 8426e0f2-e691-46c3-ba02-3157714defde
    resourceVersion: "22978"
    uid: a485ed0d-a288-4632-a61e-82db735ee968
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev2
    containers:
    - command:
      - nsenter
      - --mount=/proc/1/ns/mnt
      - --
      - bash
      - -c
      - |
        while true ;
        do
            for device in /sys/block/loop* ; do
                    echo "INFO: checking loop device $device"
                    if test -f "$device/loop/backing_file"; then
                            backingFile=`cat "$device/loop/backing_file"`
                            # removing trailling spaces
                            backingFile=`echo $backingFile | sed 's/ *$//g'`
                            if [[ $backingFile == *"(deleted)" ]] ; then
                                    loopDevice="/dev/$(echo $device | cut -d"/" -f4)"
                                    echo "WARN: detected removed backing file $backingFile"
                                    echo "WARN: detaching the loop device $loopDevice"
                                    losetup -d $loopDevice
                            fi
                    else
                            echo "INFO: skipping loop device $device: backing file $device/loop/backing_file doesn't exist"
                    fi
            done
            sleepingTime=60
            echo "INFO: sleeping for ${sleepingTime}s"
            sleep $sleepingTime
        done
      image: registry.suse.com/bci/bci-base:15.5
      imagePullPolicy: IfNotPresent
      name: longhorn-loop-device-cleaner
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hp4qz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: harvesterdev2
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/network-unavailable
      operator: Exists
    volumes:
    - name: kube-api-access-hp4qz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://db93889e223381c4171883e920653a1bbba8423fda092b2d0da0b850a11f23c7
      image: registry.suse.com/bci/bci-base:15.5
      imageID: sha256:a9657d58711e206b12a746612e174bf7d500bb8135d9fffcf65a1c7bfb2a0daf
      lastState: {}
      name: longhorn-loop-device-cleaner
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:11:26Z"
    hostIP: 10.10.110.71
    phase: Running
    podIP: 10.10.110.71
    podIPs:
    - ip: 10.10.110.71
    qosClass: BestEffort
    startTime: "2024-08-06T02:11:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 7b74ff15b7d0b80f904245b4755f89aecdd72208c5f57354b34d9595db62379c
      cni.projectcalico.org/podIP: 10.52.3.4/32
      cni.projectcalico.org/podIPs: 10.52.3.4/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.3.4"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:15:35Z"
    generateName: longhorn-manager-
    labels:
      app: longhorn-manager
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.6.2
      controller-revision-hash: 5d8759b6cf
      helm.sh/chart: longhorn-1.6.2
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"524c2a0c-7f9f-4280-a9e4-c0d323db13bb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9500,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9501,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9502,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9503,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/dev/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/proc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tls-files/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/longhorn/"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:15:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.3.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:15:59Z"
    name: longhorn-manager-6vhdk
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-manager
      uid: 524c2a0c-7f9f-4280-a9e4-c0d323db13bb
    resourceVersion: "30295"
    uid: bc41048e-073b-4b04-a4ce-d5ae7948e668
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev7
    containers:
    - command:
      - longhorn-manager
      - -d
      - daemon
      - --engine-image
      - longhornio/longhorn-engine:v1.6.2
      - --instance-manager-image
      - longhornio/longhorn-instance-manager:v1.6.2
      - --share-manager-image
      - longhornio/longhorn-share-manager:v1.6.2
      - --backing-image-manager-image
      - longhornio/backing-image-manager:v1.6.2
      - --support-bundle-manager-image
      - longhornio/support-bundle-kit:v0.0.37
      - --manager-image
      - longhornio/longhorn-manager:v1.6.2
      - --service-account
      - longhorn-service-account
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: longhorn-manager
      ports:
      - containerPort: 9500
        name: manager
        protocol: TCP
      - containerPort: 9501
        name: conversion-wh
        protocol: TCP
      - containerPort: 9502
        name: admission-wh
        protocol: TCP
      - containerPort: 9503
        name: recov-backend
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /v1/healthz
          port: 9501
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/dev/
        name: dev
      - mountPath: /host/proc/
        name: proc
      - mountPath: /var/lib/longhorn/
        mountPropagation: Bidirectional
        name: longhorn
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dltck
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev7
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /dev/
        type: "null"
      name: dev
    - hostPath:
        path: /proc/
        type: "null"
      name: proc
    - hostPath:
        path: /var/lib/longhorn/
        type: "null"
      name: longhorn
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-dltck
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:15:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://55f9719cc86d537d9f622a67a1c5f6fa5a273e178cf20d8cca13242584f3482a
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: longhorn-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:15:58Z"
    hostIP: 10.10.110.232
    phase: Running
    podIP: 10.52.3.4
    podIPs:
    - ip: 10.52.3.4
    qosClass: BestEffort
    startTime: "2024-08-06T02:15:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 93314dd9ff9c70d260e27c0a6ce0d5e1f06a26ec1deb1bbf541416a0d01aec43
      cni.projectcalico.org/podIP: 10.52.1.11/32
      cni.projectcalico.org/podIPs: 10.52.1.11/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.1.11"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:11:24Z"
    generateName: longhorn-manager-
    labels:
      app: longhorn-manager
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.6.2
      controller-revision-hash: 5d8759b6cf
      helm.sh/chart: longhorn-1.6.2
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"524c2a0c-7f9f-4280-a9e4-c0d323db13bb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9500,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9501,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9502,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9503,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/dev/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/proc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tls-files/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/longhorn/"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:11:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.1.11"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:11:43Z"
    name: longhorn-manager-lns65
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-manager
      uid: 524c2a0c-7f9f-4280-a9e4-c0d323db13bb
    resourceVersion: "23542"
    uid: 2d5ebf6f-8451-4c11-ae43-33331ea43b1a
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev2
    containers:
    - command:
      - longhorn-manager
      - -d
      - daemon
      - --engine-image
      - longhornio/longhorn-engine:v1.6.2
      - --instance-manager-image
      - longhornio/longhorn-instance-manager:v1.6.2
      - --share-manager-image
      - longhornio/longhorn-share-manager:v1.6.2
      - --backing-image-manager-image
      - longhornio/backing-image-manager:v1.6.2
      - --support-bundle-manager-image
      - longhornio/support-bundle-kit:v0.0.37
      - --manager-image
      - longhornio/longhorn-manager:v1.6.2
      - --service-account
      - longhorn-service-account
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: longhorn-manager
      ports:
      - containerPort: 9500
        name: manager
        protocol: TCP
      - containerPort: 9501
        name: conversion-wh
        protocol: TCP
      - containerPort: 9502
        name: admission-wh
        protocol: TCP
      - containerPort: 9503
        name: recov-backend
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /v1/healthz
          port: 9501
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/dev/
        name: dev
      - mountPath: /host/proc/
        name: proc
      - mountPath: /var/lib/longhorn/
        mountPropagation: Bidirectional
        name: longhorn
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2kxzx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev2
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /dev/
        type: "null"
      name: dev
    - hostPath:
        path: /proc/
        type: "null"
      name: proc
    - hostPath:
        path: /var/lib/longhorn/
        type: "null"
      name: longhorn
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-2kxzx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:11:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e5529d9f41d98a0f37402767748aa7e74c00fd84e941965570e828cf036f5653
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: longhorn-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:11:43Z"
    hostIP: 10.10.110.71
    phase: Running
    podIP: 10.52.1.11
    podIPs:
    - ip: 10.52.1.11
    qosClass: BestEffort
    startTime: "2024-08-06T02:11:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 60b5943a31a7e68432405fa4ab595580bd391dd5a9bef817ed0520eb811fdb99
      cni.projectcalico.org/podIP: 10.52.2.8/32
      cni.projectcalico.org/podIPs: 10.52.2.8/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.2.8"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T02:13:16Z"
    generateName: longhorn-manager-
    labels:
      app: longhorn-manager
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.6.2
      controller-revision-hash: 5d8759b6cf
      helm.sh/chart: longhorn-1.6.2
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"524c2a0c-7f9f-4280-a9e4-c0d323db13bb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9500,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9501,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9502,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9503,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/dev/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/proc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tls-files/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/longhorn/"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T02:13:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:30Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.2.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T02:13:32Z"
    name: longhorn-manager-ng8b7
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-manager
      uid: 524c2a0c-7f9f-4280-a9e4-c0d323db13bb
    resourceVersion: "26665"
    uid: b4c768f0-3cd6-4ab5-8543-916976a84149
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev3
    containers:
    - command:
      - longhorn-manager
      - -d
      - daemon
      - --engine-image
      - longhornio/longhorn-engine:v1.6.2
      - --instance-manager-image
      - longhornio/longhorn-instance-manager:v1.6.2
      - --share-manager-image
      - longhornio/longhorn-share-manager:v1.6.2
      - --backing-image-manager-image
      - longhornio/backing-image-manager:v1.6.2
      - --support-bundle-manager-image
      - longhornio/support-bundle-kit:v0.0.37
      - --manager-image
      - longhornio/longhorn-manager:v1.6.2
      - --service-account
      - longhorn-service-account
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: longhorn-manager
      ports:
      - containerPort: 9500
        name: manager
        protocol: TCP
      - containerPort: 9501
        name: conversion-wh
        protocol: TCP
      - containerPort: 9502
        name: admission-wh
        protocol: TCP
      - containerPort: 9503
        name: recov-backend
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /v1/healthz
          port: 9501
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/dev/
        name: dev
      - mountPath: /host/proc/
        name: proc
      - mountPath: /var/lib/longhorn/
        mountPropagation: Bidirectional
        name: longhorn
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4rv4j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev3
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /dev/
        type: "null"
      name: dev
    - hostPath:
        path: /proc/
        type: "null"
      name: proc
    - hostPath:
        path: /var/lib/longhorn/
        type: "null"
      name: longhorn
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-4rv4j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T02:13:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://793c0cac3c7cf97d6c8e041e312f8dd87e2cfa0534f2dabfc081c6b48ee1d1f5
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: longhorn-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T02:13:32Z"
    hostIP: 10.10.110.61
    phase: Running
    podIP: 10.52.2.8
    podIPs:
    - ip: 10.52.2.8
    qosClass: BestEffort
    startTime: "2024-08-06T02:13:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4515128bcbf4204f73132914249da14fe065c19b51b714535bb8e90373251ab7
      cni.projectcalico.org/podIP: 10.52.0.45/32
      cni.projectcalico.org/podIPs: 10.52.0.45/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.45"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:39Z"
    generateName: longhorn-manager-
    labels:
      app: longhorn-manager
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.6.2
      controller-revision-hash: 5d8759b6cf
      helm.sh/chart: longhorn-1.6.2
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:helm.sh/chart: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"524c2a0c-7f9f-4280-a9e4-c0d323db13bb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9500,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9501,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9502,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9503,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/dev/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/proc/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/tls-files/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/longhorn/"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"dev"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"longhorn-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"proc"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.45"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:43Z"
    name: longhorn-manager-szgbp
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: longhorn-manager
      uid: 524c2a0c-7f9f-4280-a9e4-c0d323db13bb
    resourceVersion: "4985"
    uid: 5bdcb47b-bcd3-49bb-bfb9-38bfd1d0c667
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - harvesterdev1
    containers:
    - command:
      - longhorn-manager
      - -d
      - daemon
      - --engine-image
      - longhornio/longhorn-engine:v1.6.2
      - --instance-manager-image
      - longhornio/longhorn-instance-manager:v1.6.2
      - --share-manager-image
      - longhornio/longhorn-share-manager:v1.6.2
      - --backing-image-manager-image
      - longhornio/backing-image-manager:v1.6.2
      - --support-bundle-manager-image
      - longhornio/support-bundle-kit:v0.0.37
      - --manager-image
      - longhornio/longhorn-manager:v1.6.2
      - --service-account
      - longhorn-service-account
      env:
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: longhornio/longhorn-manager:v1.6.2
      imagePullPolicy: IfNotPresent
      name: longhorn-manager
      ports:
      - containerPort: 9500
        name: manager
        protocol: TCP
      - containerPort: 9501
        name: conversion-wh
        protocol: TCP
      - containerPort: 9502
        name: admission-wh
        protocol: TCP
      - containerPort: 9503
        name: recov-backend
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /v1/healthz
          port: 9501
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources: {}
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/dev/
        name: dev
      - mountPath: /host/proc/
        name: proc
      - mountPath: /var/lib/longhorn/
        mountPropagation: Bidirectional
        name: longhorn
      - mountPath: /tls-files/
        name: longhorn-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vpzm9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-service-account
    serviceAccountName: longhorn-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /dev/
        type: "null"
      name: dev
    - hostPath:
        path: /proc/
        type: "null"
      name: proc
    - hostPath:
        path: /var/lib/longhorn/
        type: "null"
      name: longhorn
    - name: longhorn-grpc-tls
      secret:
        defaultMode: 420
        optional: true
        secretName: longhorn-grpc-tls
    - name: kube-api-access-vpzm9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://620f6a935248baaba2312b077696bc0b546856f1759aa22fb9b959e85fa3978b
      image: docker.io/longhornio/longhorn-manager:v1.6.2
      imageID: sha256:6b0b2d18564be0260c96c39f4e88f0030f4e8ae75f81c9255654be0488657592
      lastState: {}
      name: longhorn-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:43Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.45
    podIPs:
    - ip: 10.52.0.45
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: ee01b32d8e5510fe8fa9eab9c1a3a433f928564004451021934eb914e585e052
      cni.projectcalico.org/podIP: 10.52.0.47/32
      cni.projectcalico.org/podIPs: 10.52.0.47/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.47"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:40Z"
    generateName: longhorn-ui-6b677889f8-
    labels:
      app: longhorn-ui
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.6.2
      helm.sh/chart: longhorn-1.6.2
      pod-template-hash: 6b677889f8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"425e6ffa-9799-46d4-a3e4-2ede147ada1e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-ui"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"LONGHORN_MANAGER_IP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LONGHORN_UI_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/cache/nginx/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/config/nginx/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"nginx-cache"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"nginx-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.47"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:43Z"
    name: longhorn-ui-6b677889f8-8sw9z
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: longhorn-ui-6b677889f8
      uid: 425e6ffa-9799-46d4-a3e4-2ede147ada1e
    resourceVersion: "4980"
    uid: e2c683e7-de0d-47c1-b50d-0a2d0a68f732
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - longhorn-ui
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: LONGHORN_MANAGER_IP
        value: http://longhorn-backend:9500
      - name: LONGHORN_UI_PORT
        value: "8000"
      image: longhornio/longhorn-ui:v1.6.2
      imagePullPolicy: IfNotPresent
      name: longhorn-ui
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/cache/nginx/
        name: nginx-cache
      - mountPath: /var/config/nginx/
        name: nginx-config
      - mountPath: /var/run/
        name: var-run
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4rw9c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-ui-service-account
    serviceAccountName: longhorn-ui-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: nginx-cache
    - emptyDir: {}
      name: nginx-config
    - emptyDir: {}
      name: var-run
    - name: kube-api-access-4rw9c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://08e2d963f27af9d009d710ead12fda95e1497f5edc2b6f6bc7f5120bb6e47482
      image: docker.io/longhornio/longhorn-ui:v1.6.2
      imageID: sha256:b1c8e3638fc436a5cf6f7f72dfdc1590b17cdf58a84234d5d60f7907e25693a5
      lastState: {}
      name: longhorn-ui
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:43Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.47
    podIPs:
    - ip: 10.52.0.47
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: 4b3e6bfce7b085f936b56fa9ef47a171c9b76d336ed7775c3b358450b188b43b
      cni.projectcalico.org/podIP: 10.52.0.46/32
      cni.projectcalico.org/podIPs: 10.52.0.46/32
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "k8s-pod-network",
            "ips": [
                "10.52.0.46"
            ],
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2024-08-06T01:55:39Z"
    generateName: longhorn-ui-6b677889f8-
    labels:
      app: longhorn-ui
      app.kubernetes.io/instance: harvester
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: longhorn
      app.kubernetes.io/version: v1.6.2
      helm.sh/chart: longhorn-1.6.2
      pod-template-hash: 6b677889f8
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/version: {}
            f:helm.sh/chart: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"425e6ffa-9799-46d4-a3e4-2ede147ada1e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:preferredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"longhorn-ui"}:
              .: {}
              f:env:
                .: {}
                k:{"name":"LONGHORN_MANAGER_IP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"LONGHORN_UI_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/cache/nginx/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/config/nginx/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"nginx-cache"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"nginx-config"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"var-run"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:55:39Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      manager: calico
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.52.0.46"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2024-08-06T01:55:43Z"
    name: longhorn-ui-6b677889f8-v2ppb
    namespace: longhorn-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: longhorn-ui-6b677889f8
      uid: 425e6ffa-9799-46d4-a3e4-2ede147ada1e
    resourceVersion: "4996"
    uid: 13d044dc-6120-4f1b-846f-d556f6db7acb
  spec:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - longhorn-ui
            topologyKey: kubernetes.io/hostname
          weight: 1
    containers:
    - env:
      - name: LONGHORN_MANAGER_IP
        value: http://longhorn-backend:9500
      - name: LONGHORN_UI_PORT
        value: "8000"
      image: longhornio/longhorn-ui:v1.6.2
      imagePullPolicy: IfNotPresent
      name: longhorn-ui
      ports:
      - containerPort: 8000
        name: http
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/cache/nginx/
        name: nginx-cache
      - mountPath: /var/config/nginx/
        name: nginx-config
      - mountPath: /var/run/
        name: var-run
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lmj65
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: harvesterdev1
    preemptionPolicy: PreemptLowerPriority
    priority: 2e+09
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: longhorn-ui-service-account
    serviceAccountName: longhorn-ui-service-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: nginx-cache
    - emptyDir: {}
      name: nginx-config
    - emptyDir: {}
      name: var-run
    - name: kube-api-access-lmj65
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: "null"
      lastTransitionTime: "2024-08-06T01:55:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://69105b9d728a00eee59cccdd3f0bf3e5f05bd7c11b036cbddf1d714b058a488e
      image: docker.io/longhornio/longhorn-ui:v1.6.2
      imageID: sha256:b1c8e3638fc436a5cf6f7f72dfdc1590b17cdf58a84234d5d60f7907e25693a5
      lastState: {}
      name: longhorn-ui
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-08-06T01:55:43Z"
    hostIP: 10.10.110.11
    phase: Running
    podIP: 10.52.0.46
    podIPs:
    - ip: 10.52.0.46
    qosClass: BestEffort
    startTime: "2024-08-06T01:55:39Z"
kind: List
metadata:
  resourceVersion: "770271"
