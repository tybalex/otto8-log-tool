apiVersion: v1
items:
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: 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
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.harvester.v2
      objectset.rio.cattle.io/owner-namespace: harvester-system
    creationTimestamp: "2024-08-06T01:55:24Z"
    generation: 4
    labels:
      objectset.rio.cattle.io/hash: 4cd41ef79f3c4608d03ec0fcb2852ba18668d799
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7e5294e1-77c5-40cd-931a-1f27d1228f6d"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:fleet.cattle.io/agent-namespace: {}
                f:fleet.cattle.io/bundle-id: {}
                f:fleet.cattle.io/keep-resources: {}
                f:fleet.cattle.io/service-account: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:home: {}
              f:icon: {}
              f:keywords: {}
              f:name: {}
              f:sources: {}
              f:type: {}
              f:version: {}
            f:values:
              .: {}
              f:containers:
                .: {}
                f:apiserver:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:debug: {}
                  f:env: {}
                  f:hciMode: {}
                  f:image:
                    .: {}
                    f:imagePullPolicy: {}
                    f:repository: {}
                    f:tag: {}
                  f:livenessProbe: {}
                  f:readinessProbe: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
              f:csi-snapshotter:
                .: {}
                f:enabled: {}
                f:global: {}
                f:image:
                  .: {}
                  f:pullPolicy: {}
                  f:repository: {}
                  f:tag: {}
              f:enableGoCoverDir: {}
              f:enableLonghornNetworkPolicy: {}
              f:fullnameOverride: {}
              f:generalJob:
                .: {}
                f:image:
                  .: {}
                  f:imagePullPolicy: {}
                  f:repository: {}
                  f:tag: {}
              f:harvester-load-balancer:
                .: {}
                f:affinity: {}
                f:enabled: {}
                f:global: {}
                f:image:
                  .: {}
                  f:imagePullPolicy: {}
                  f:pullPolicy: {}
                  f:repository: {}
                  f:tag: {}
                f:nodeSelector: {}
                f:replicasCount: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext: {}
                f:serviceAccount:
                  .: {}
                  f:annotations: {}
                  f:create: {}
                  f:name: {}
                f:tolerations: {}
                f:webhook:
                  .: {}
                  f:httpsPort: {}
                  f:image:
                    .: {}
                    f:imagePullPolicy: {}
                    f:pullPolicy: {}
                    f:repository: {}
                    f:tag: {}
                  f:replicasCount: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
              f:harvester-network-controller:
                .: {}
                f:affinity: {}
                f:enabled: {}
                f:global: {}
                f:helper:
                  .: {}
                  f:image:
                    .: {}
                    f:repository: {}
                    f:tag: {}
                f:image:
                  .: {}
                  f:pullPolicy: {}
                  f:repository: {}
                  f:tag: {}
                f:manager:
                  .: {}
                  f:nodeAffinity:
                    .: {}
                    f:requiredDuringSchedulingIgnoredDuringExecution:
                      .: {}
                      f:nodeSelectorTerms: {}
                  f:podAntiAffinity:
                    .: {}
                    f:requiredDuringSchedulingIgnoredDuringExecution: {}
                  f:replicas: {}
                f:nameOverride: {}
                f:nodeSelector: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:tolerations: {}
                f:vipEnabled: {}
                f:webhook:
                  .: {}
                  f:httpsPort: {}
                  f:image:
                    .: {}
                    f:pullPolicy: {}
                    f:repository: {}
                    f:tag: {}
                  f:replicas: {}
                  f:resources:
                    .: {}
                    f:limits:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
              f:harvester-node-disk-manager:
                .: {}
                f:affinity: {}
                f:autoProvisionFilter: {}
                f:debug: {}
                f:enabled: {}
                f:fullnameOverride: {}
                f:global: {}
                f:image:
                  .: {}
                  f:pullPolicy: {}
                  f:repository: {}
                  f:tag: {}
                f:imagePullSecrets: {}
                f:labelFilter: {}
                f:longhornNamespace: {}
                f:nameOverride: {}
                f:nodeSelector: {}
                f:pathFilter: {}
                f:podAnnotations: {}
                f:podSecurityContext: {}
                f:resources: {}
                f:securityContext: {}
                f:tolerations: {}
                f:vendorFilter: {}
              f:harvester-node-manager:
                .: {}
                f:global: {}
                f:image:
                  .: {}
                  f:pullPolicy: {}
                  f:repository: {}
                  f:tag: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:tolerations: {}
                f:webhook:
                  .: {}
                  f:image:
                    .: {}
                    f:pullPolicy: {}
                    f:repository: {}
                    f:tag: {}
                  f:replicas: {}
              f:jobs:
                .: {}
                f:preDelete:
                  .: {}
                  f:activeDeadlineSeconds: {}
                  f:backoffLimit: {}
                  f:containers:
                    .: {}
                    f:kubectl:
                      .: {}
                      f:image:
                        .: {}
                        f:imagePullPolicy: {}
                      f:resources:
                        .: {}
                        f:limits:
                          .: {}
                          f:cpu: {}
                          f:memory: {}
                        f:requests:
                          .: {}
                          f:cpu: {}
                          f:memory: {}
                  f:enabled: {}
                  f:nodeSelector: {}
                  f:restartPolicy: {}
                  f:tolerations: {}
                  f:ttlSecondsAfterFinished: {}
              f:kube-vip:
                .: {}
                f:affinity: {}
                f:config:
                  .: {}
                  f:address: {}
                f:enabled: {}
                f:env:
                  .: {}
                  f:cp_enable: {}
                  f:enable_service_security: {}
                  f:lb_enable: {}
                  f:lb_port: {}
                  f:svc_enable: {}
                  f:vip_arp: {}
                  f:vip_cidr: {}
                  f:vip_interface: {}
                  f:vip_leaderelection: {}
                f:fullnameOverride: {}
                f:global: {}
                f:image:
                  .: {}
                  f:pullPolicy: {}
                  f:repository: {}
                  f:tag: {}
                f:imagePullSecrets: {}
                f:nameOverride: {}
                f:nodeSelector:
                  .: {}
                  f:node-role.kubernetes.io/control-plane: {}
                f:podAnnotations: {}
                f:podSecurityContext: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:capabilities:
                    .: {}
                    f:add: {}
                f:serviceAccount:
                  .: {}
                  f:annotations: {}
                  f:create: {}
                  f:name: {}
                f:tolerations: {}
              f:kubevirt:
                .: {}
                f:fullnameOverride: {}
                f:global: {}
                f:nameOverride: {}
                f:spec:
                  .: {}
                  f:configuration:
                    .: {}
                    f:developerConfiguration:
                      .: {}
                      f:featureGates: {}
                    f:emulatedMachines: {}
                    f:network:
                      .: {}
                      f:defaultNetworkInterface: {}
                      f:permitBridgeInterfaceOnPodNetwork: {}
                      f:permitSlirpInterface: {}
                  f:customizeComponents:
                    .: {}
                    f:patches: {}
              f:kubevirt-operator:
                .: {}
                f:containers:
                  .: {}
                  f:api:
                    .: {}
                    f:image:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                  f:controller:
                    .: {}
                    f:image:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                  f:handler:
                    .: {}
                    f:image:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                  f:launcher:
                    .: {}
                    f:image:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                  f:libguestfs:
                    .: {}
                    f:image:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                  f:operator:
                    .: {}
                    f:args: {}
                    f:certificates:
                      .: {}
                      f:admissionWebhook:
                        .: {}
                        f:secretName: {}
                    f:command: {}
                    f:env: {}
                    f:image:
                      .: {}
                      f:imagePullPolicy: {}
                      f:repository: {}
                      f:tag: {}
                    f:livenessProbe:
                      .: {}
                      f:httpGet:
                        .: {}
                        f:path: {}
                        f:port: {}
                        f:scheme: {}
                      f:initialDelaySeconds: {}
                      f:periodSeconds: {}
                      f:timeoutSeconds: {}
                    f:readinessProbe:
                      .: {}
                      f:httpGet:
                        .: {}
                        f:path: {}
                        f:port: {}
                        f:scheme: {}
                      f:initialDelaySeconds: {}
                      f:periodSeconds: {}
                      f:timeoutSeconds: {}
                    f:resources:
                      .: {}
                      f:limits:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                      f:requests:
                        .: {}
                        f:cpu: {}
                        f:memory: {}
                f:fullnameOverride: {}
                f:global: {}
                f:nameOverride: {}
                f:nodeSelector: {}
                f:replicas: {}
                f:securityContext:
                  .: {}
                  f:runAsNonRoot: {}
                f:strategy:
                  .: {}
                  f:type: {}
                f:tolerations: {}
              f:longhorn:
                .: {}
                f:annotations: {}
                f:createNamespace: {}
                f:csi:
                  .: {}
                  f:kubeletRootDir: {}
                f:defaultSettings:
                  .: {}
                  f:concurrentAutomaticEngineUpgradePerNodeLimit: {}
                  f:priorityClass: {}
                f:enableGoCoverDir: {}
                f:enablePSP: {}
                f:enabled: {}
                f:global:
                  .: {}
                  f:cattle:
                    .: {}
                    f:systemDefaultRegistry: {}
                    f:windowsCluster:
                      .: {}
                      f:defaultSetting:
                        .: {}
                        f:systemManagedComponentsNodeSelector: {}
                        f:taintToleration: {}
                      f:enabled: {}
                      f:nodeSelector:
                        .: {}
                        f:kubernetes.io/os: {}
                      f:tolerations: {}
                f:image:
                  .: {}
                  f:csi:
                    .: {}
                    f:attacher:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:livenessProbe:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:nodeDriverRegistrar:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:provisioner:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:resizer:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:snapshotter:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                  f:longhorn:
                    .: {}
                    f:backingImageManager:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:engine:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:instanceManager:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:manager:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:shareManager:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:supportBundleKit:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                    f:ui:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                  f:openshift:
                    .: {}
                    f:oauthProxy:
                      .: {}
                      f:repository: {}
                      f:tag: {}
                  f:pullPolicy: {}
                f:ingress:
                  .: {}
                  f:enabled: {}
                  f:host: {}
                  f:path: {}
                  f:secureBackends: {}
                  f:tls: {}
                  f:tlsSecret: {}
                f:longhornDriver:
                  .: {}
                  f:nodeSelector: {}
                  f:priorityClass: {}
                  f:tolerations: {}
                f:longhornManager:
                  .: {}
                  f:log:
                    .: {}
                    f:format: {}
                  f:nodeSelector: {}
                  f:priorityClass: {}
                  f:serviceAnnotations: {}
                  f:tolerations: {}
                f:longhornUI:
                  .: {}
                  f:nodeSelector: {}
                  f:priorityClass: {}
                  f:replicas: {}
                  f:tolerations: {}
                f:metrics:
                  .: {}
                  f:serviceMonitor:
                    .: {}
                    f:enabled: {}
                f:namespaceOverride: {}
                f:networkPolicies:
                  .: {}
                  f:enabled: {}
                  f:type: {}
                f:openshift:
                  .: {}
                  f:enabled: {}
                  f:ui:
                    .: {}
                    f:port: {}
                    f:proxy: {}
                    f:route: {}
                f:persistence:
                  .: {}
                  f:backingImage:
                    .: {}
                    f:enable: {}
                  f:defaultClass: {}
                  f:defaultClassReplicaCount: {}
                  f:defaultDataLocality: {}
                  f:defaultFsType: {}
                  f:defaultMkfsParams: {}
                  f:defaultNodeSelector:
                    .: {}
                    f:enable: {}
                    f:selector: {}
                  f:migratable: {}
                  f:nfsOptions: {}
                  f:reclaimPolicy: {}
                  f:recurringJobSelector:
                    .: {}
                    f:enable: {}
                    f:jobList: {}
                  f:removeSnapshotsDuringFilesystemTrim: {}
                f:preUpgradeChecker:
                  .: {}
                  f:jobEnabled: {}
                  f:upgradeVersionCheck: {}
                f:privateRegistry: {}
                f:service:
                  .: {}
                  f:manager:
                    .: {}
                    f:nodePort: {}
                    f:type: {}
                  f:ui:
                    .: {}
                    f:type: {}
                f:serviceAccount:
                  .: {}
                  f:annotations: {}
              f:nameOverride: {}
              f:nodeSelector: {}
              f:rancherEmbedded: {}
              f:replicas: {}
              f:securityContext: {}
              f:service:
                .: {}
                f:harvester:
                  .: {}
                  f:asClusterService: {}
                  f:httpPort: {}
                  f:httpsPort: {}
                  f:profile: {}
                  f:sessionAffinity: {}
                  f:type: {}
                f:vip:
                  .: {}
                  f:enabled: {}
                  f:hwAddress: {}
                  f:ip: {}
                  f:loadBalancerIP: {}
                  f:mode: {}
                  f:type: {}
              f:snapshot-validation-webhook:
                .: {}
                f:args:
                  .: {}
                  f:tlsCertFile: {}
                  f:tlsPrivateKeyFile: {}
                f:enabled: {}
                f:fullnameOverride: {}
                f:global: {}
                f:image:
                  .: {}
                  f:pullPolicy: {}
                  f:repository: {}
                  f:tag: {}
                f:nameOverride: {}
                f:namespaceOverride: {}
                f:podAnnotations: {}
                f:rbac:
                  .: {}
                  f:create: {}
                f:replicaCount: {}
                f:resources: {}
                f:service:
                  .: {}
                  f:port: {}
                  f:type: {}
                f:serviceAccount:
                  .: {}
                  f:create: {}
                  f:name: {}
                f:webhook:
                  .: {}
                  f:failurePolicy: {}
                  f:timeoutSeconds: {}
                  f:tls:
                    .: {}
                    f:autoGenerated: {}
                    f:certificate: {}
                    f:key: {}
                    f:secretName: {}
              f:storageClass:
                .: {}
                f:defaultStorageClass: {}
                f:reclaimPolicy: {}
                f:replicaCount: {}
              f:strategy:
                .: {}
                f:rollingUpdate:
                  .: {}
                  f:maxSurge: {}
                  f:maxUnavailable: {}
                f:type: {}
              f:support-bundle-kit:
                .: {}
                f:image:
                  .: {}
                  f:imagePullPolicy: {}
                  f:repository: {}
                  f:tag: {}
              f:tags:
                .: {}
                f:kubevirt: {}
              f:tolerations: {}
              f:upgrade:
                .: {}
                f:image:
                  .: {}
                  f:repository: {}
                  f:tag: {}
              f:webhook:
                .: {}
                f:debug: {}
                f:httpsPort: {}
                f:image:
                  .: {}
                  f:imagePullPolicy: {}
                  f:repository: {}
                  f:tag: {}
                f:replicas: {}
              f:whereabouts:
                .: {}
                f:affinity: {}
                f:enabled: {}
                f:fullnameOverride: {}
                f:global: {}
                f:image:
                  .: {}
                  f:pullPolicy: {}
                  f:repository: {}
                  f:tag: {}
                f:imagePullSecrets: {}
                f:nameOverride: {}
                f:namespaceOverride: {}
                f:podAnnotations: {}
                f:podSecurityContext: {}
                f:resources:
                  .: {}
                  f:limits:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                  f:requests:
                    .: {}
                    f:cpu: {}
                    f:memory: {}
                f:securityContext:
                  .: {}
                  f:privileged: {}
                f:serviceAccount:
                  .: {}
                  f:annotations: {}
                  f:create: {}
                f:successfulJobsHistoryLimit: {}
                f:tolerations: {}
                f:updateStrategy: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:notes: {}
            f:readme: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:containers:
              .: {}
              f:apiserver:
                .: {}
                f:hciMode: {}
                f:image:
                  .: {}
                  f:imagePullPolicy: {}
            f:harvester-load-balancer:
              .: {}
              f:enabled: {}
            f:harvester-network-controller:
              .: {}
              f:enabled: {}
              f:image:
                .: {}
                f:pullPolicy: {}
              f:vipEnabled: {}
            f:harvester-node-disk-manager:
              .: {}
              f:autoProvisionFilter: {}
              f:enabled: {}
              f:image:
                .: {}
                f:pullPolicy: {}
              f:labelFilter: {}
            f:kube-vip:
              .: {}
              f:enabled: {}
            f:kube-vip-cloud-provider:
              .: {}
              f:enabled: {}
            f:kubevirt:
              .: {}
              f:spec:
                .: {}
                f:monitorAccount: {}
                f:monitorNamespace: {}
            f:longhorn:
              .: {}
              f:defaultSettings:
                .: {}
                f:defaultDataPath: {}
                f:taintToleration: {}
              f:enabled: {}
            f:multus:
              .: {}
              f:enabled: {}
            f:rancherEmbedded: {}
            f:service:
              .: {}
              f:vip:
                .: {}
                f:enabled: {}
                f:hwAddress: {}
                f:ip: {}
                f:mode: {}
            f:webhook:
              .: {}
              f:image:
                .: {}
                f:imagePullPolicy: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T01:58:51Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T01:58:51Z"
    name: harvester
    namespace: harvester-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.harvester.v2
      uid: 7e5294e1-77c5-40cd-931a-1f27d1228f6d
    resourceVersion: "10950"
    uid: be6ead72-d80e-48c0-bf1d-98cae31c7cc9
  spec:
    chart:
      metadata:
        annotations:
          fleet.cattle.io/agent-namespace: cattle-fleet-local-system
          fleet.cattle.io/bundle-id: mcc-harvester
          fleet.cattle.io/keep-resources: "false"
          fleet.cattle.io/service-account: "null"
        apiVersion: v2
        appVersion: v1.3.1
        description: Harvester is an open source Hyper-Converged Infrastructure(HCI)
          solution based on Kubernetes.
        home: https://github.com/harvester/harvester
        icon: https://harvester.github.io/images/logo_horizontal.svg
        keywords:
        - virtualization
        - HCI
        name: harvester
        sources:
        - https://github.com/harvester/harvester
        type: application
        version: 1.3.1
      values:
        containers:
          apiserver:
            args: "null"
            command: "null"
            debug: false
            env: "null"
            hciMode: false
            image:
              imagePullPolicy: IfNotPresent
              repository: rancher/harvester
              tag: v1.3.1
            livenessProbe: {}
            readinessProbe: {}
            resources:
              requests:
                cpu: 250m
                memory: 256Mi
        csi-snapshotter:
          enabled: true
          global: {}
          image:
            pullPolicy: IfNotPresent
            repository: registry.k8s.io/sig-storage/snapshot-controller
            tag: v6.3.3
        enableGoCoverDir: false
        enableLonghornNetworkPolicy: true
        fullnameOverride: "null"
        generalJob:
          image:
            imagePullPolicy: IfNotPresent
            repository: registry.suse.com/bci/bci-base
            tag: 15.5
        harvester-load-balancer:
          affinity: {}
          enabled: false
          global: {}
          image:
            imagePullPolicy: IfNotPresent
            pullPolicy: IfNotPresent
            repository: rancher/harvester-load-balancer
            tag: v0.3.0
          nodeSelector: {}
          replicasCount: 1
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext: {}
          serviceAccount:
            annotations: {}
            create: true
            name: "null"
          tolerations: "null"
          webhook:
            httpsPort: 8443
            image:
              imagePullPolicy: IfNotPresent
              pullPolicy: IfNotPresent
              repository: rancher/harvester-load-balancer-webhook
              tag: v0.3.0
            replicasCount: 1
            resources:
              limits:
                cpu: 100m
                memory: 512Mi
              requests:
                cpu: 10m
                memory: 128Mi
        harvester-network-controller:
          affinity: {}
          enabled: true
          global: {}
          helper:
            image:
              repository: rancher/harvester-network-helper
              tag: v0.4.0
          image:
            pullPolicy: IfNotPresent
            repository: rancher/harvester-network-controller
            tag: v0.4.0
          manager:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - key: kubernetes.io/os
                    operator: In
                    values:
                    - linux
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                    - harvester-network-controller-manager
                topologyKey: kubernetes.io/hostname
            replicas: 2
          nameOverride: "null"
          nodeSelector: {}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
          vipEnabled: false
          webhook:
            httpsPort: 8443
            image:
              pullPolicy: IfNotPresent
              repository: rancher/harvester-network-webhook
              tag: v0.4.0
            replicas: 1
            resources:
              limits:
                cpu: 200m
                memory: 256Mi
              requests:
                cpu: 10m
                memory: 64Mi
        harvester-node-disk-manager:
          affinity: {}
          autoProvisionFilter: "null"
          debug: false
          enabled: false
          fullnameOverride: "null"
          global: {}
          image:
            pullPolicy: IfNotPresent
            repository: rancher/harvester-node-disk-manager
            tag: v0.6.3
          imagePullSecrets: "null"
          labelFilter: "null"
          longhornNamespace: longhorn-system
          nameOverride: "null"
          nodeSelector: {}
          pathFilter: "null"
          podAnnotations: {}
          podSecurityContext: {}
          resources: {}
          securityContext: {}
          tolerations: "null"
          vendorFilter: null
        harvester-node-manager:
          global: {}
          image:
            pullPolicy: IfNotPresent
            repository: rancher/harvester-node-manager
            tag: v0.2.1
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 10m
              memory: 64Mi
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
          - effect: NoExecute
            operator: Exists
          webhook:
            image:
              pullPolicy: IfNotPresent
              repository: rancher/harvester-node-manager-webhook
              tag: v0.2.1
            replicas: 3
        jobs:
          preDelete:
            activeDeadlineSeconds: 900
            backoffLimit: 1
            containers:
              kubectl:
                image:
                  imagePullPolicy: IfNotPresent
                resources:
                  limits:
                    cpu: 250m
                    memory: 128Mi
                  requests:
                    cpu: 250m
                    memory: 128Mi
            enabled: true
            nodeSelector: {}
            restartPolicy: OnFailure
            tolerations: "null"
            ttlSecondsAfterFinished: 10
        kube-vip:
          affinity: {}
          config:
            address: "null"
          enabled: false
          env:
            cp_enable: "false"
            enable_service_security: "true"
            lb_enable: "true"
            lb_port: "6443"
            svc_enable: "true"
            vip_arp: "true"
            vip_cidr: "32"
            vip_interface: "null"
            vip_leaderelection: "false"
          fullnameOverride: "null"
          global: {}
          image:
            pullPolicy: IfNotPresent
            repository: ghcr.io/kube-vip/kube-vip-iptables
            tag: v0.6.0
          imagePullSecrets: "null"
          nameOverride: "null"
          nodeSelector:
            node-role.kubernetes.io/control-plane: "true"
          podAnnotations: {}
          podSecurityContext: {}
          resources: {}
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
          serviceAccount:
            annotations: {}
            create: true
            name: "null"
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/control-plane
            operator: Exists
        kubevirt:
          fullnameOverride: "null"
          global: {}
          nameOverride: "null"
          spec:
            configuration:
              developerConfiguration:
                featureGates:
                - LiveMigration
                - HotplugVolumes
                - HostDevices
                - GPU
              emulatedMachines:
              - q35
              - pc-q35*
              - pc
              - pc-i440fx*
              network:
                defaultNetworkInterface: bridge
                permitBridgeInterfaceOnPodNetwork: true
                permitSlirpInterface: true
            customizeComponents:
              patches:
              - patch: '{"webhooks":[{"name":"kubevirt-validator.kubevirt.io","failurePolicy":"Ignore"},{"name":"kubevirt-update-validator.kubevirt.io","failurePolicy":"Ignore"}]}'
                resourceName: virt-operator-validator
                resourceType: ValidatingWebhookConfiguration
                type: strategic
              - patch: '{"spec":{"template":{"spec":{"containers":[{"name":"virt-api",
                  "resources":{"limits":{"cpu":"400m","memory":"1100Mi"}}}]}}}}'
                resourceName: virt-api
                resourceType: Deployment
                type: strategic
              - patch: '{"spec":{"template":{"spec":{"containers":[{"name":"virt-controller",
                  "resources":{"limits":{"cpu":"800m","memory":"1300Mi"}}}]}}}}'
                resourceName: virt-controller
                resourceType: Deployment
                type: strategic
              - patch: '{"spec":{"template":{"spec":{"containers":[{"name":"virt-handler",
                  "resources":{"limits":{"cpu":"700m","memory":"1600Mi"}}}]}}}}'
                resourceName: virt-handler
                resourceType: DaemonSet
                type: strategic
        kubevirt-operator:
          containers:
            api:
              image:
                repository: registry.suse.com/suse/sles/15.5/virt-api
                tag: 1.1.1-150500.8.15.1
            controller:
              image:
                repository: registry.suse.com/suse/sles/15.5/virt-controller
                tag: 1.1.1-150500.8.15.1
            handler:
              image:
                repository: registry.suse.com/suse/sles/15.5/virt-handler
                tag: 1.1.1-150500.8.15.1
            launcher:
              image:
                repository: registry.suse.com/suse/sles/15.5/virt-launcher
                tag: 1.1.1-150500.8.15.1
            libguestfs:
              image:
                repository: registry.suse.com/suse/sles/15.5/libguestfs-tools
                tag: 1.1.1-150500.8.15.1
            operator:
              args: "null"
              certificates:
                admissionWebhook:
                  secretName: kubevirt-operator-certs
              command:
              - virt-operator
              - --port
              - "8443"
              - -v
              - "2"
              env: "null"
              image:
                imagePullPolicy: IfNotPresent
                repository: registry.suse.com/suse/sles/15.5/virt-operator
                tag: 1.1.1-150500.8.15.1
              livenessProbe:
                httpGet:
                  path: /metrics
                  port: 8443
                  scheme: HTTPS
                initialDelaySeconds: 30
                periodSeconds: 30
                timeoutSeconds: 10
              readinessProbe:
                httpGet:
                  path: /metrics
                  port: 8443
                  scheme: HTTPS
                initialDelaySeconds: 5
                periodSeconds: 5
                timeoutSeconds: 10
              resources:
                limits:
                  cpu: 500m
                  memory: 512Mi
                requests:
                  cpu: 250m
                  memory: 256Mi
          fullnameOverride: "null"
          global: {}
          nameOverride: "null"
          nodeSelector: {}
          replicas: 1
          securityContext:
            runAsNonRoot: true
          strategy:
            type: RollingUpdate
          tolerations: null
        longhorn:
          annotations: {}
          createNamespace: true
          csi:
            kubeletRootDir: /var/lib/kubelet
          defaultSettings:
            concurrentAutomaticEngineUpgradePerNodeLimit: 3
            priorityClass: system-cluster-critical
          enableGoCoverDir: false
          enablePSP: false
          enabled: true
          global:
            cattle:
              systemDefaultRegistry: "null"
              windowsCluster:
                defaultSetting:
                  systemManagedComponentsNodeSelector: kubernetes.io/os:linux
                  taintToleration: cattle.io/os=linux:NoSchedule
                enabled: false
                nodeSelector:
                  kubernetes.io/os: linux
                tolerations:
                - effect: NoSchedule
                  key: cattle.io/os
                  operator: Equal
                  value: linux
          image:
            csi:
              attacher:
                repository: longhornio/csi-attacher
                tag: v4.5.1
              livenessProbe:
                repository: longhornio/livenessprobe
                tag: v2.12.0
              nodeDriverRegistrar:
                repository: longhornio/csi-node-driver-registrar
                tag: v2.9.2
              provisioner:
                repository: longhornio/csi-provisioner
                tag: v3.6.4
              resizer:
                repository: longhornio/csi-resizer
                tag: v1.10.1
              snapshotter:
                repository: longhornio/csi-snapshotter
                tag: v6.3.4
            longhorn:
              backingImageManager:
                repository: longhornio/backing-image-manager
                tag: v1.6.2
              engine:
                repository: longhornio/longhorn-engine
                tag: v1.6.2
              instanceManager:
                repository: longhornio/longhorn-instance-manager
                tag: v1.6.2
              manager:
                repository: longhornio/longhorn-manager
                tag: v1.6.2
              shareManager:
                repository: longhornio/longhorn-share-manager
                tag: v1.6.2
              supportBundleKit:
                repository: longhornio/support-bundle-kit
                tag: v0.0.37
              ui:
                repository: longhornio/longhorn-ui
                tag: v1.6.2
            openshift:
              oauthProxy:
                repository: longhornio/openshift-origin-oauth-proxy
                tag: 4.14
            pullPolicy: IfNotPresent
          ingress:
            enabled: false
            host: sslip.io
            path: /
            secureBackends: false
            tls: false
            tlsSecret: longhorn.local-tls
          longhornDriver:
            nodeSelector: {}
            priorityClass: system-cluster-critical
            tolerations: null
          longhornManager:
            log:
              format: plain
            nodeSelector: {}
            priorityClass: system-cluster-critical
            serviceAnnotations: {}
            tolerations: null
          longhornUI:
            nodeSelector: {}
            priorityClass: system-cluster-critical
            replicas: 2
            tolerations: null
          metrics:
            serviceMonitor:
              enabled: false
          namespaceOverride: longhorn-system
          networkPolicies:
            enabled: false
            type: k3s
          openshift:
            enabled: false
            ui:
              port: 443
              proxy: 8443
              route: longhorn-ui
          persistence:
            backingImage:
              enable: false
            defaultClass: false
            defaultClassReplicaCount: 3
            defaultDataLocality: disabled
            defaultFsType: ext4
            defaultMkfsParams: "null"
            defaultNodeSelector:
              enable: false
              selector: "null"
            migratable: true
            nfsOptions: "null"
            reclaimPolicy: Delete
            recurringJobSelector:
              enable: false
              jobList: null
            removeSnapshotsDuringFilesystemTrim: ignored
          preUpgradeChecker:
            jobEnabled: false
            upgradeVersionCheck: false
          privateRegistry: {}
          service:
            manager:
              nodePort: "null"
              type: ClusterIP
            ui:
              type: ClusterIP
          serviceAccount:
            annotations: {}
        nameOverride: "null"
        nodeSelector: {}
        rancherEmbedded: false
        replicas: 3
        securityContext: {}
        service:
          harvester:
            asClusterService: true
            httpPort: 0
            httpsPort: 8443
            profile: 6060
            sessionAffinity: ClientIP
            type: ClusterIP
          vip:
            enabled: false
            hwAddress: "null"
            ip: "null"
            loadBalancerIP: "null"
            mode: static
            type: LoadBalancer
        snapshot-validation-webhook:
          args:
            tlsCertFile: /etc/snapshot-validation-webhook/certs/tls.crt
            tlsPrivateKeyFile: /etc/snapshot-validation-webhook/certs/tls.key
          enabled: true
          fullnameOverride: "null"
          global: {}
          image:
            pullPolicy: IfNotPresent
            repository: registry.k8s.io/sig-storage/snapshot-validation-webhook
            tag: v6.3.3
          nameOverride: "null"
          namespaceOverride: kube-system
          podAnnotations: {}
          rbac:
            create: true
          replicaCount: 2
          resources: {}
          service:
            port: 443
            type: ClusterIP
          serviceAccount:
            create: true
            name: snapshot-validation-webhook
          webhook:
            failurePolicy: Fail
            timeoutSeconds: 10
            tls:
              autoGenerated: true
              certificate: "null"
              key: "null"
              secretName: snapshot-validation-webhook-tls
        storageClass:
          defaultStorageClass: true
          reclaimPolicy: Delete
          replicaCount: 3
        strategy:
          rollingUpdate:
            maxSurge: 2
            maxUnavailable: 2
          type: RollingUpdate
        support-bundle-kit:
          image:
            imagePullPolicy: IfNotPresent
            repository: rancher/support-bundle-kit
            tag: v0.0.38
        tags:
          kubevirt: true
        tolerations: "null"
        upgrade:
          image:
            repository: rancher/harvester-upgrade
            tag: v1.3.1
        webhook:
          debug: false
          httpsPort: 9443
          image:
            imagePullPolicy: IfNotPresent
            repository: rancher/harvester-webhook
            tag: v1.3.1
          replicas: 3
        whereabouts:
          affinity: {}
          enabled: true
          fullnameOverride: "null"
          global: {}
          image:
            pullPolicy: IfNotPresent
            repository: ghcr.io/k8snetworkplumbingwg/whereabouts
            tag: v0.6.3
          imagePullSecrets: "null"
          nameOverride: "null"
          namespaceOverride: kube-system
          podAnnotations: {}
          podSecurityContext: {}
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            privileged: true
          serviceAccount:
            annotations: {}
            create: true
          successfulJobsHistoryLimit: 0
          tolerations:
          - effect: NoSchedule
            operator: Exists
          updateStrategy: RollingUpdate
    helmVersion: 3
    info:
      description: Upgrade complete
      firstDeployed: "2024-08-06T01:55:20Z"
      lastDeployed: "2024-08-06T01:58:40Z"
      notes: |
        The Harvester has been installed into "harvester-system" namespace with "harvester" as release name.

        - [x] KubeVirt Operator
        - [x] KubeVirt Resource named "kubevirt"
        - [x] Longhorn
        - [x] Harvester Network Controller

        Please make sure there is a default StorageClass in the Kubernetes cluster.

        To learn more about the release, try:

          $ helm status harvester -n harvester-system
          $ helm get all harvester -n harvester-system
      readme: "# Harvester Helm Chart [Development]\n\nHarvester is an open source
        Hyper-Converged Infrastructure(HCI) solution based on Kubernetes.\n\nNote:
        the master branch is under active development, please use the `stable` branch
        if you need a stable version of the Harvester chart.\n\n## Chart Details\n\nThis
        chart will do the following:\n\n- Deploy a KubeVirt Operator if needed, defaults
        to deploy.\n- Deploy a KubeVirt CRD resource to enable KubeVirt if needed,
        defaults to deploy.\n- Deploy the Harvester resources.\n- Deploy [Longhorn](https://longhorn.io)
        as the built-in storage management.\n\n### Prerequisites\n\n- Kubernetes 1.16+.\n-
        Helm 3.2+.\n- [Multus CNI](https://github.com/k8snetworkplumbingwg/multus-cni).
        An [example chart](https://github.com/rancher/rke2-charts/tree/main-source/packages/rke2-multus/charts).\n-
        [Harvester CRDs](https://github.com/harvester/harvester/tree/master/deploy/charts/harvester-crd)\n\n###
        Installing the Chart\n\nTo install the chart with the release name `harvester`.\n\n```bash\n##
        create target namespace\n$ kubectl create ns harvester-system\n\n## install
        chart to target namespace\n$ helm install harvester harvester --namespace
        harvester-system --set service.harvester.type=NodePort\n```\n\n### Uninstalling
        the Chart\n\nTo uninstall/delete the `harvester` release.\n\n```bash\n## uninstall
        chart from target namespace\n$ helm uninstall harvester --namespace harvester-system\n```\n\n####
        Notes\n\n- Use the existing KubeVirt/Longhorn Service.\n\n    If you have
        already prepared the KubeVirt or Longhorn, you can disable these installations
        in this chart.\n    \n    ```bash\n    $ helm install harvester harvester
        --namespace harvester-system \\\n        --set kubevirt.enabled=false --set
        kubevirt-operator.enabled=false \\\n        --set longhorn.enabled=false\n
        \   ```\n\n- Use other storage drivers.\n    \n    Currently, storage drivers
        other than Longhorn are not supported.\n\n### Configuration\n\nSpecify each
        parameter using the `--set key=value[,key=value]` argument to `helm install`
        or `helm upgrade`.\n\nFor details on using parameters, please refer to [values.yaml](values.yaml).\n\n####
        Configure KubeVirt Operator\n\nTo configure the KubeVirt Operator, you need
        to know its [parameters](dependency_charts/kubevirt-operator/values.yaml)
        and put all items under `kubevirt-operator` domain.\n\nFor example, if you
        want to change the Secret name of admission webhooks, you can do as below.\n\n```bash\n$
        helm install harvester harvester --namespace harvester-system \\\n    --set-string
        kubevirt-operator.containers.operator.certificates.admissionWebhook.secretName=mysecret\n```\n\nIf
        you don't want to install KubeVirt Operator, you can do the following.\n\n```bash\n$
        helm install harvester harvester --namespace harvester-system \\\n    --set
        kubevirt-operator.enabled=false\n```\n\n#### Configure KubeVirt (CRD resource)\n\nTo
        configure the KubeVirt CRD resource, you need to know its [parameters](dependency_charts/kubevirt/values.yaml)
        and put all items under `kubevirt` domain.\n\n> **It is worth noting that
        almost all KubeVirt parameters are string type, including bool field and numeric
        field.**\n\nFor example, if you want to enable the emulation mode on the non-KVM
        supported hosts, you can do as below.\n\n```bash\n$ helm install harvester
        harvester --namespace harvester-system \\\n    --set-string kubevirt.spec.configuration.developerConfiguration.useEmulation=true\n```\n\nIf
        you don't want to install KubeVirt CRD resource, you can do the following.\n\n```bash\n$
        helm install harvester harvester --namespace harvester-system \\\n    --set
        kubevirt.enabled=false\n```\n\n## License\nCopyright (c) 2020 [Rancher Labs,
        Inc.](http://rancher.com)\n\nLicensed under the Apache License, Version 2.0
        (the \"License\");\nyou may not use this file except in compliance with the
        License.\nYou may obtain a copy of the License at\n\n[http://www.apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nUnless
        required by applicable law or agreed to in writing, software\ndistributed
        under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES
        OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for
        the specific language governing permissions and\nlimitations under the License.\n"
      status: deployed
    name: harvester
    namespace: harvester-system
    resources:
    - apiVersion: scheduling.k8s.io/v1
      kind: PriorityClass
      name: kubevirt-cluster-critical
    - apiVersion: scheduling.k8s.io/v1
      kind: PriorityClass
      name: longhorn-critical
    - apiVersion: v1
      kind: Namespace
      name: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: backing-image-data-source
      namespace: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: backing-image-manager
      namespace: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: instance-manager
      namespace: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: longhorn-manager
      namespace: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: longhorn-recovery-backend
      namespace: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: longhorn-conversion-webhook
      namespace: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: longhorn-admission-webhook
      namespace: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: cattle-monitoring-prometheus
      namespace: longhorn-system
    - apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      name: harvester
      namespace: longhorn-system
    - apiVersion: v1
      kind: ServiceAccount
      name: snapshot-controller
      namespace: kube-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-load-balancer
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-load-balancer-webhook
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-network-controller
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-network-helper
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-network-webhook
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-node-disk-manager
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-node-manager
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-node-manager-webhook
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: kube-vip
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: kubevirt-operator
      namespace: harvester-system
    - apiVersion: v1
      kind: ServiceAccount
      name: longhorn-service-account
      namespace: longhorn-system
    - apiVersion: v1
      kind: ServiceAccount
      name: longhorn-ui-service-account
      namespace: longhorn-system
    - apiVersion: v1
      kind: ServiceAccount
      name: longhorn-support-bundle
      namespace: longhorn-system
    - apiVersion: v1
      kind: ServiceAccount
      name: snapshot-validation-webhook
      namespace: kube-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-whereabouts
      namespace: kube-system
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester
      namespace: harvester-system
    - apiVersion: v1
      kind: Secret
      name: snapshot-validation-webhook-tls
      namespace: kube-system
    - apiVersion: v1
      kind: ConfigMap
      name: longhorn-default-setting
      namespace: longhorn-system
    - apiVersion: v1
      kind: ConfigMap
      name: longhorn-storageclass
      namespace: longhorn-system
    - apiVersion: v1
      kind: ConfigMap
      name: whereabouts-config
      namespace: kube-system
    - apiVersion: v1
      kind: ConfigMap
      name: vip
      namespace: harvester-system
    - apiVersion: v1
      kind: ConfigMap
      name: harvester-helpers
      namespace: harvester-system
    - apiVersion: storage.k8s.io/v1
      kind: StorageClass
      name: harvester-longhorn
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: ippools.loadbalancer.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: loadbalancers.loadbalancer.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: clusternetworks.network.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: linkmonitors.network.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: vlanconfigs.network.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: vlanstatuses.network.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: blockdevices.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: cloudinits.node.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: ksmtuneds.node.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: nodeconfigs.node.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: backingimagedatasources.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: backingimagemanagers.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: backingimages.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: backupbackingimages.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: backups.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: backuptargets.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: backupvolumes.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: engineimages.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: engines.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: instancemanagers.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: nodes.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: orphans.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: recurringjobs.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: replicas.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: settings.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: sharemanagers.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: snapshots.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: supportbundles.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: systembackups.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: systemrestores.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: volumes.longhorn.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: volumeattachments.longhorn.io
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: snapshot-controller-runner
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-load-balancer
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-load-balancer-webhook
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-network-controller
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-network-helper
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-network-webhook
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-node-disk-manager
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-node-manager
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-node-manager-webhook
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: kube-vip
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: kubevirt.io:operator
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: kubevirt-operator
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: longhorn-role
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-snapshot-validation-webhook
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-whereabouts
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvesterhci.io:edit
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvesterhci.io:view
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvesterhci.io:cloudprovider
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvesterhci.io:csi-driver
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: snapshot-controller-role
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-load-balancer
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-load-balancer-webhook
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-network-controller
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-network-helper
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-network-webhook
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-node-disk-manager
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-node-manager
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-node-manager-webhook
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: kube-vip
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: kubevirt-operator
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: longhorn-bind
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: longhorn-support-bundle
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-snapshot-validation-webhook
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-whereabouts
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: snapshot-controller-leaderelection
      namespace: kube-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: kubevirt-operator
      namespace: harvester-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: snapshot-controller-leaderelection
      namespace: kube-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: kubevirt-operator-rolebinding
      namespace: harvester-system
    - apiVersion: v1
      kind: Service
      name: harvester-load-balancer-webhook
      namespace: harvester-system
    - apiVersion: v1
      kind: Service
      name: harvester-network-webhook
      namespace: harvester-system
    - apiVersion: v1
      kind: Service
      name: harvester-node-manager-webhook
      namespace: harvester-system
    - apiVersion: v1
      kind: Service
      name: longhorn-backend
      namespace: longhorn-system
    - apiVersion: v1
      kind: Service
      name: longhorn-frontend
      namespace: longhorn-system
    - apiVersion: v1
      kind: Service
      name: longhorn-conversion-webhook
      namespace: longhorn-system
    - apiVersion: v1
      kind: Service
      name: longhorn-admission-webhook
      namespace: longhorn-system
    - apiVersion: v1
      kind: Service
      name: longhorn-recovery-backend
      namespace: longhorn-system
    - apiVersion: v1
      kind: Service
      name: longhorn-engine-manager
      namespace: longhorn-system
    - apiVersion: v1
      kind: Service
      name: longhorn-replica-manager
      namespace: longhorn-system
    - apiVersion: v1
      kind: Service
      name: harvester-snapshot-validation-webhook
      namespace: kube-system
    - apiVersion: v1
      kind: Service
      name: harvester
      namespace: harvester-system
    - apiVersion: v1
      kind: Service
      name: harvester-webhook
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: harvester-network-controller
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: harvester-node-disk-manager
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: harvester-node-manager
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: kube-vip
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: longhorn-manager
      namespace: longhorn-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: harvester-whereabouts
      namespace: kube-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: longhorn-loop-device-cleaner
      namespace: longhorn-system
    - apiVersion: apps/v1
      kind: Deployment
      name: snapshot-controller
      namespace: kube-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester-load-balancer
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester-load-balancer-webhook
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester-network-controller-manager
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester-network-webhook
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester-node-manager-webhook
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: Deployment
      name: virt-operator
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: Deployment
      name: longhorn-driver-deployer
      namespace: longhorn-system
    - apiVersion: apps/v1
      kind: Deployment
      name: longhorn-ui
      namespace: longhorn-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester-snapshot-validation-webhook
      namespace: kube-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester-webhook
      namespace: harvester-system
    - apiVersion: kubevirt.io/v1
      kind: KubeVirt
      name: kubevirt
      namespace: harvester-system
    - apiVersion: upgrade.cattle.io/v1
      kind: Plan
      name: sync-additional-ca
      namespace: cattle-system
    - apiVersion: monitoring.coreos.com/v1
      kind: PrometheusRule
      name: prometheus-longhorn-rules
      namespace: longhorn-system
    - apiVersion: monitoring.coreos.com/v1
      kind: ServiceMonitor
      name: longhorn-prometheus-servicemonitor
      namespace: longhorn-system
    - apiVersion: admissionregistration.k8s.io/v1
      kind: ValidatingWebhookConfiguration
      name: harvester-snapshot-validation-webhook
    - apiVersion: snapshot.storage.k8s.io/v1
      kind: VolumeSnapshotClass
      name: longhorn
    - apiVersion: snapshot.storage.k8s.io/v1
      kind: VolumeSnapshotClass
      name: longhorn-snapshot
      namespace: longhorn-system
    values:
      containers:
        apiserver:
          hciMode: true
          image:
            imagePullPolicy: IfNotPresent
      harvester-load-balancer:
        enabled: true
      harvester-network-controller:
        enabled: true
        image:
          pullPolicy: IfNotPresent
        vipEnabled: true
      harvester-node-disk-manager:
        autoProvisionFilter:
        - /dev/sd*
        enabled: true
        image:
          pullPolicy: IfNotPresent
        labelFilter:
        - COS_*
        - HARV_*
      kube-vip:
        enabled: true
      kube-vip-cloud-provider:
        enabled: true
      kubevirt:
        spec:
          monitorAccount: rancher-monitoring-operator
          monitorNamespace: cattle-monitoring-system
      longhorn:
        defaultSettings:
          defaultDataPath: /var/lib/harvester/defaultdisk
          taintToleration: kubevirt.io/drain:NoSchedule
        enabled: true
      multus:
        enabled: false
      rancherEmbedded: true
      service:
        vip:
          enabled: true
          hwAddress: "null"
          ip: 10.10.110.100
          mode: static
      webhook:
        image:
          imagePullPolicy: IfNotPresent
    version: 2
  status:
    observedGeneration: 4
    summary:
      state: deployed
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/8RWXY+rNhD9K9E8A4FAogSpT7tS96oPlbZXfejVqpqYAdwY27IHbnNX/PfKkM1+qHu7rarkDfDYZ+acM2MeoSPGChmhfATU2jCyNNqHV7P/gwR74sRJkwhkVpRIs5QVlNCS6mK0FqJ348xXTS5uhgOUsByyaPGT1NUPv5BwxP+4TWNHUIJvk4CUOFKEnpIhS1p0A3kmFwtXJUP2oaO8RRHOe97sj56pgzEC4Wgq+rPsyDN2FkrdKxWBwj2p71LRom+hhCxLscBNscp3hBssdpuqrnbrNN+u12m+x1VabLerTAS0U2GvqoD587tJRjBVck81OdKCPJRfHgGt/JWcl0ZDCRMPe2XE4ecQekuKeFqpUXmKQBjNzihFDkp2PUVwkDoIedbjXzHeTybYFXmBm7yORVqncUHZPsZdKuKM6t06xxw36RbGhzECb0kEIkWLjsPDd3xXKyJ+QTI2pPmVivNaPAXGyghUz0y93b3vdaUonvLthIjfEv82/kBkY0fe9G4iGiYC/ybQkxukoBiFML1mKCHI+1qUFYQv9qVMSZ4EAivywkk7awR3pLrFxM2iNm5RkVXmKHWzuHvKdnFzf+sTiKA1s3+YrS+Xy0Zy2+8TYbrlubLnJ4hAignhKf68lJx2hobusCG/VKYxv7fGyW9GM6rEDw1EcKDjV+OqYDkYpOMelfw2iQUR3N18god3PX3m8MtH032IYDhzNVM1jtE0bM4c5hFIXZvglNckftKeUamFMJ1VxJNm0nm+ndikYIBVuiridBunm89pVq6LcpX9BqHRPxLlGbkPjqieQv9zO7/w19tGRivpTyYdXn1y2Pqg0NRzp4a96T2b7v50wi3VUsuTHKdksKrC3jNuK2QiDYzR/w91oKNF6S4DZt15AF4EzxOz1M2FwHprjeN5XF0GsreNw4qUuVCJJ7zLgJ3myIXA5sHYoWilpj2KQ2+vgTxP8isAO/Js3FWgmTqrkK+K/b7ZXt5o2fh8iYR/yvAHQdWPpMnNF2qZRuD7rkN3hPJxHMe/AgAA//8+xlrMoAsAAA
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.harvester-crd.v1
      objectset.rio.cattle.io/owner-namespace: harvester-system
    creationTimestamp: "2024-08-06T01:54:22Z"
    generation: 2
    labels:
      objectset.rio.cattle.io/hash: 110a4a64239ea6a496dfd950385503ba2048821c
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9434a63f-c0f0-4e1b-a90c-1ef953a3a608"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:annotations:
                .: {}
                f:fleet.cattle.io/agent-namespace: {}
                f:fleet.cattle.io/bundle-id: {}
                f:fleet.cattle.io/keep-resources: {}
                f:fleet.cattle.io/service-account: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:home: {}
              f:icon: {}
              f:keywords: {}
              f:name: {}
              f:sources: {}
              f:version: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T01:54:22Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T01:54:22Z"
    name: harvester-crd
    namespace: harvester-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.harvester-crd.v1
      uid: 9434a63f-c0f0-4e1b-a90c-1ef953a3a608
    resourceVersion: "3213"
    uid: a7848fb8-686a-4e2b-802b-709c27ec2062
  spec:
    chart:
      metadata:
        annotations:
          fleet.cattle.io/agent-namespace: cattle-fleet-local-system
          fleet.cattle.io/bundle-id: mcc-harvester-crd
          fleet.cattle.io/keep-resources: "false"
          fleet.cattle.io/service-account: "null"
        apiVersion: v2
        appVersion: v1.3.1
        description: Helm chart for deploying Harvester CRDs.
        home: https://github.com/harvester/harvester
        icon: https://harvester.github.io/images/logo_horizontal.svg
        keywords:
        - virtualization
        - HCI
        name: harvester-crd
        sources:
        - https://github.com/harvester/harvester
        version: 1.3.1
    helmVersion: 3
    info:
      description: Install complete
      firstDeployed: "2024-08-06T01:54:21Z"
      lastDeployed: "2024-08-06T01:54:21Z"
      status: deployed
    name: harvester-crd
    namespace: harvester-system
    resources:
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: addons.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: keypairs.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: preferences.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: settings.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: supportbundles.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: upgradelogs.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: upgrades.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: versions.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: virtualmachinebackups.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: virtualmachineimages.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: virtualmachinerestores.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: virtualmachinetemplates.harvesterhci.io
    - apiVersion: apiextensions.k8s.io/v1
      kind: CustomResourceDefinition
      name: virtualmachinetemplateversions.harvesterhci.io
    version: 1
  status:
    observedGeneration: 2
    summary:
      state: deployed
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/7RWTW/jNhP+K8acZa3tWP4Q8B7yJotusNhuECc9NMhhRI1s1hTJ5Ydr19B/L0jZrp062XTTwgdL5HDmeTjPzGgLNTks0SHkW0AplUPHlbThVRW/EXOWXGq4Shk6Jyjl6gMvIYcFibqLWkPyop36XZLpzldLyOHDqp90PnNZ/m9GzJD77jGJNUEOdpGGSKkhQWgpXfXTBZoVWUema4lKMulq8CZvViMLLo/Ob6yjGpoEmKHI+57XZB3WGnLphUhAYEHi1dtYoF1ADlVVFL0xFdNiUAzKSTGkLBv0x0Mas3J8kQ1wOLjIhn0M0XbcnhOBdudFnAlEMndUkSHJyEL+uAXU/BcylisJOaz6kEAhFFt+DabXJMjFnQqFpQSYks4oIchA7oynBJZchnQesvJP791HNWTTCVWjYdkdDaeT7nAy7nVxitNuhdNynFE1GpUIzVOTgNXEwnWyBRoXHk4EeMIluEetj1Z66UXagwRKssxw3VKDy84nEnUneuxUynQ+7ZF2ZvuLrZFLh1ySaW/teQqgeXotL26jww5qLTiLSoEEVgdgLa4mgRUKT3ZH5bKquORuE16lKun43dA3zw2V195wOZ+xBZVecDm/mUt1WP64JuZbkq2HGQliTpl7MnXLo0bHFh/X2pC1bd0+bmFJG8hh6QsykhzZWAc26EeTQacM5HATGezgPoLg0q/hqQm/JgGtykvp+HsQP27b4tljjrl+GS1qnZ4ijtl4DfMuO09RV05pJdR88/kM94WyLnpryVFdUFlS+UWVtC+DygsRTL6uyBge1gES4DXOKQDXXohbJTgLzm+qn5W7NWRJhooxpJXlTpmwZ1CyBZkP5zSE8+C12bm99UK0VWf3zebvAGIejptym5sZMW+421wp6Wjt2nVDUZxXyksHeT8sWOUNa/UoeM1dfGLaR8lmoZJqqlvgWa/3hUN0882TPTUdZMemgyyahmI+h8OSWXFGl4y1SJ7PlX27Pdz9ruxCcOsMOpq3glMi6OtBl9E2qGc98yYkpB8Kev0gcYVcYCHCUnOo0ruTg00AGnrZoY9cJMBlpYLL00byoOcGS+owVWtBLqiv4sa6a9JCbSg0ukFvMOz2Jt3e6L7Xz7NRPuz/CmFMvGTV7+dZll9EK+vQeQs5lHvT9wyDo/SeHQOHzn6Sjh8O2CTPgpgCWYreLZThf8TspstJrLfj8FfCBy93StDLsbs1SpyT6Zpg9v5I/+ey5HL+xoDFzvoH436HmiAMf7ELciVbiv/NXb+N+jlAxcmpt+M6I7R/UWGotT0h2JZYTe/S8dPxmD7T9884PMyBtofvvkNCYzl8Awyav+o7fCyGLkjlTyTD9IoWvQSsr2sMPXTbNM2fAQAA//9TEaUofAsAAA
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.harvester-seeder.v2
      objectset.rio.cattle.io/owner-namespace: harvester-system
    creationTimestamp: "2024-08-06T01:57:40Z"
    generation: 4
    labels:
      objectset.rio.cattle.io/hash: ffbb07eb9b2b2d8b4e552174e7cd7352a423541a
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:chart:
            f:metadata:
              f:annotations:
                .: {}
                f:catalog.cattle.io/managed: {}
      manager: harvester
      operation: Update
      time: "2024-08-06T01:57:40Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"598ef64d-6498-4870-a9a9-fa9d75ef66da"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:maintainers: {}
              f:name: {}
              f:type: {}
              f:version: {}
            f:values:
              .: {}
              f:apiAffinity:
                .: {}
                f:nodeAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution:
                    .: {}
                    f:nodeSelectorTerms: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:embeddedMode: {}
              f:fullnameOverride: {}
              f:image:
                .: {}
                f:pullPolicy: {}
                f:repository: {}
                f:tag: {}
              f:imagePullSecrets: {}
              f:nameOverride: {}
              f:podAnnotations: {}
              f:podSecurityContext: {}
              f:replicaCount: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:serviceAccount:
                .: {}
                f:annotations: {}
                f:create: {}
                f:name: {}
              f:strategy:
                .: {}
                f:rollingUpdate:
                  .: {}
                  f:maxSurge: {}
                  f:maxUnavailable: {}
                f:type: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:fullnameOverride: {}
            f:image:
              .: {}
              f:tag: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T11:55:34Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T11:55:34Z"
    name: harvester-seeder
    namespace: harvester-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.harvester-seeder.v2
      uid: 598ef64d-6498-4870-a9a9-fa9d75ef66da
    resourceVersion: "630254"
    uid: 4def2a69-035b-48b6-b734-82016e7177a1
  spec:
    chart:
      metadata:
        annotations:
          catalog.cattle.io/managed: "true"
        apiVersion: v2
        appVersion: v0.3.0
        description: A Helm chart for Harvester Seeder
        maintainers:
        - name: harvester
        name: harvester-seeder
        type: application
        version: 0.3.0
      values:
        apiAffinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                  - seeder
              topologyKey: kubernetes.io/hostname
        embeddedMode: true
        fullnameOverride: "null"
        image:
          pullPolicy: IfNotPresent
          repository: rancher/harvester-seeder
          tag: "null"
        imagePullSecrets: "null"
        nameOverride: "null"
        podAnnotations: {}
        podSecurityContext: {}
        replicaCount: 1
        resources:
          limits:
            cpu: "0.50"
            memory: 500Mi
          requests:
            cpu: "0.25"
            memory: 250Mi
        securityContext: {}
        serviceAccount:
          annotations: {}
          create: true
          name: "null"
        strategy:
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 1
          type: RollingUpdate
    helmVersion: 3
    info:
      description: Upgrade complete
      firstDeployed: "2024-08-06T01:56:41Z"
      lastDeployed: "2024-08-06T11:55:31Z"
      status: deployed
    name: harvester-seeder
    namespace: harvester-system
    resources:
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-seeder
      namespace: harvester-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-seeder-manager-role
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-seeder-manager-rolebinding
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      name: harvester-seeder-leader-election-role
      namespace: harvester-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      name: harvester-seeder-leader-election-rolebinding
      namespace: harvester-system
    - apiVersion: v1
      kind: Service
      name: harvester-seeder
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: Deployment
      name: harvester-seeder
      namespace: harvester-system
    values:
      fullnameOverride: harvester-seeder
      image:
        tag: v0.3.0
    version: 2
  status:
    observedGeneration: 4
    summary:
      state: deployed
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6RVXW/jNhD8K8Y+S7Qk24oioA9BU/SCOyRBk95Di6BYUSuLNUUSJKWLEei/F5Qd5/Lh5NB7k6g1Z2d3ZvwAHXms0SOUD4BKaY9eaOXCq67+Je4deWaFZhy9l8SEnosaSmhJdjEaA9HROv1NkY3XwwZKmA9pNPssVP3LDXFL/sOfKewISnAtC0jMkiR0xIaUqUHUAuPaioFs7LWWG+HZsPihK51BHu5t0Q7kPNnYbZ2nDsYIuKWJ/K3oyHnsDJSqlzICiRXJd0fSomuhhEVFlNWLJsUm59UpLzhmp4RpTrw6OUEslll2UiyLgLYn+CYb2H0+2mwEE6M/qCFLipOD8u8HQCO+knVCKyhhSCGCSmq+uQql5yTJT18alI4i4Fp5q6UkC6W3PUWwESos9rCf/7WBfhJHsyrquj5JYlrxJl4WyOMqz5ZxsmhOT6t8xXM6gfFujMAZ4mGwvEXrw8MzPT4jlEEEaMzTScJSFljW5LgVZkcPzmafSHaz6cJZo+3sc1+RVeTJQQQdCuVRKLK7me1JHiYM492R1dheedERROC3JnxGY6Tgk2IgguFFW2MEA8qeJtnsrvii99UlfLq9vf7t8vz66uLydn759eL84iz+IlR/H98X+T/5Ml5lK5YnLM3iYW36eDN0zPYBp+mlDP1dDWStqF/3WSN1WrlphaLDNYUGTC/ltZaCb8OE5DfchmFYMtoJr204tah4S3b+JLZj0vS4DrqQFHeCWx23hHXgO6Fd91LuJOQe7fOi3SAtXdMNSeJe29Ces0IHnuwA3nIRfLXHVkQ1BWEFpQYoo+uzZ2G1O7sh3lvht79q5ene784tOd3bySTh1b2qAWPFICStA0RAmKrsIDidca575V+H42Nc0KN79pqBcRyjKRwPOl1EIFSjJx08U+qfZm2xphnXnZHkg7QaYZ0/JyP1duKbJcE1RZzkt0larvJymf4FIZCOVaVpuVqVi6nKefS9gxLqx9Kfjp3vZvlm4Bwy5Nn0PnTUB8n8AgmNcfPv4c4nyd/QTyPdvWva1ntTzufpacbSvGBZmrBVWSRFMg/afdvGixVLiwVLlvGw/hH3PnV68G5wafAnrYXzdsvWwkusGNfdfKPRx6avpOC75/ctK9GT8xAUeoirxfgklPD/FoRP9e+kyO55JxG4vuswpMTDOI7/BQAA//9lEjFhNAgAAA
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.nvidia-driver-toolkit.v3
      objectset.rio.cattle.io/owner-namespace: harvester-system
    creationTimestamp: "2024-08-06T01:57:40Z"
    generation: 6
    labels:
      objectset.rio.cattle.io/hash: 3bee2d3f1af6cb9c8ca29ea16ecb77aa84227848
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:chart:
            f:metadata:
              f:annotations:
                .: {}
                f:catalog.cattle.io/managed: {}
      manager: harvester
      operation: Update
      time: "2024-08-06T01:57:40Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f58ddd70-e5cf-48ac-b624-03f99b65c6e7"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:maintainers: {}
              f:name: {}
              f:type: {}
              f:version: {}
            f:values:
              .: {}
              f:driverLocation: {}
              f:fullnameOverride: {}
              f:image:
                .: {}
                f:pullPolicy: {}
                f:repository: {}
                f:tag: {}
              f:imagePullSecrets: {}
              f:nameOverride: {}
              f:nodeSelector:
                .: {}
                f:sriovgpu.harvesterhci.io/driver-needed: {}
              f:podAnnotations: {}
              f:podSecurityContext: {}
              f:resources: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:serviceAccount:
                .: {}
                f:annotations: {}
                f:create: {}
                f:name: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:driverLocation: {}
            f:fullnameOverride: {}
            f:image:
              .: {}
              f:repo: {}
              f:tag: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T11:55:32Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T11:55:32Z"
    name: nvidia-driver-toolkit
    namespace: harvester-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.nvidia-driver-toolkit.v3
      uid: f58ddd70-e5cf-48ac-b624-03f99b65c6e7
    resourceVersion: "630184"
    uid: 2f0b5eb9-d096-49ec-b8e1-5a65400b7456
  spec:
    chart:
      metadata:
        annotations:
          catalog.cattle.io/managed: "true"
        apiVersion: v2
        appVersion: 0.1.1
        description: A Helm chart for Kubernetes
        maintainers:
        - name: harvester
        name: nvidia-driver-runtime
        type: application
        version: 0.1.1
      values:
        driverLocation: HTTPENDPOINT/NVIDIA-Linux-x86_64-525.60.12-vgpu-kvm.run
        fullnameOverride: nvidia-driver-daemonset
        image:
          pullPolicy: Always
          repository: rancher/harvester-nvidia-driver-toolkit
          tag: sle-micro-head
        imagePullSecrets: "null"
        nameOverride: "null"
        nodeSelector:
          sriovgpu.harvesterhci.io/driver-needed: "true"
        podAnnotations: {}
        podSecurityContext: {}
        resources: {}
        securityContext:
          privileged: true
        serviceAccount:
          annotations: {}
          create: true
          name: "null"
    helmVersion: 3
    info:
      description: Upgrade complete
      firstDeployed: "2024-08-06T01:56:41Z"
      lastDeployed: "2024-08-06T11:55:31Z"
      status: deployed
    name: nvidia-driver-toolkit
    namespace: harvester-system
    resources:
    - apiVersion: v1
      kind: ServiceAccount
      name: nvidia-driver-runtime
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: nvidia-driver-runtime
      namespace: harvester-system
    values:
      driverLocation: http://192.168.210.5:8080/vgpu/NVIDIA-Linux-x86_64-535.183.04-vgpu-kvm.run
      fullnameOverride: nvidia-driver-runtime
      image:
        repo: registry.gitlab.com/koat-public/koat-nvidia-driver-toolkit
        tag: latest
    version: 3
  status:
    observedGeneration: 6
    summary:
      state: deployed
- apiVersion: catalog.cattle.io/v1
  kind: App
  metadata:
    annotations:
      objectset.rio.cattle.io/applied: H4sIAAAAAAAA/6xWTW/bRhD9K8KcSZoflqwS6MG1gcYomghR2kMDH1bLobjVcne7H0xVgf+9GFJSpFiukzo3anc4H++9edQOWvSsYp5BuQOmlPbMC60c/dSrP5F7hz6xQieceS8xEfpKVFBCg7KNmTEQPRunPym08brbQAlXXRZNfhGq+nGJ3KJ/8TXFWoQSXJNQpcSiROYw6bLEcFFhJzi6mGvlrZYSbdLlX5XSGcYpb8Nsh86jjd3WeWyhj4BbHIb/IFp0nrUGShWkjECyFcr/hKRhroESpqzCtODX8+KmXmU3Fd4U89m8ntVFmtV5XaX1KqtynFK1/YAXp4Hx+tlmIxgmeo81WlQcHZQfd8CM+B2tE1pBCV0GEayk5pt3FHqPEv1wUzPpMIKTYqW3ASPYCEXEHvn5XwyEQRzpdPbDNM+KeD7P8/g6r3nM5nURV5yz6zSbZTfFDPrHPgJnkBOwvGHW08OZHs8GovTMmJOTNCkSOq3QcSvMOB/cTt6gbCdDxkmt7eTNAb7J4u5hsu98coZ2y4TyTCi0I5T72Y/AQ/8YPTmMn+PObw0FMmOk4IOkIILu2PfYdh9Bx2TAQVesroUSfgvlrqd5VmF9ZKoOUlLpdx1aKyrKDBGIlq2RXjVByoWWgm+hhIf6rfYLiw4VUWjRaCe8tnRnmeIN2qtL/VPTbE2Z+33qRZBylII7rMHTJpSucIkSudd2bN3o6vbMRcazJfJghd/eaeXxbz+eWxzwudNBeSgzOnA6WD5CIkUr/PDETaDdSkn3LbbjNEWa/ipgyPJXQHcamZ9H5mMkie1JF2Cs6ITENVbjGgxRljAZbjWJcp4eKb2TgZB7WMDnwFvOxwm+NNCDpeBhw/YCone9lmgPkR93gHWN3EMJb/WSN1gFiRDBBmkAQjm2WmKyCSu0Cj06Mp2W7aVJs9GOHlejiECoWlNL57vxm1lbVuGE69ZI9FSjFtb5ezRSbwkEyNP8Ok7ncTr7kGbldFZeZ38AeeBzUVlWTqdlMUQ5z3xwUEJ1CH21052I4qLHHW3rjIxv2NYXPgtf1LQrxhMWfKOt+GcgMNnMBzpOu9nr5L0eaPzKVl5f6yehKqHWryh5AVK4xOAnXDVab74ZPmaMO+v+nmGr1RK/I2WPp856wT1fzn8019EU9x8aWrOji+f9Z7XT/wIyA6x+RrVfayjTCFxoW2YHV+/7fwMAAP//os4mNWwJAAA
      objectset.rio.cattle.io/id: helm-app
      objectset.rio.cattle.io/owner-gvk: /v1, Kind=Secret
      objectset.rio.cattle.io/owner-name: sh.helm.release.v1.pcidevices-controller.v2
      objectset.rio.cattle.io/owner-namespace: harvester-system
    creationTimestamp: "2024-08-06T01:57:40Z"
    generation: 4
    labels:
      objectset.rio.cattle.io/hash: 5ade03c4837fb17de73868f6f301f2fd0fb1d2e5
    managedFields:
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:chart:
            f:metadata:
              f:annotations:
                .: {}
                f:catalog.cattle.io/managed: {}
      manager: harvester
      operation: Update
      time: "2024-08-06T01:57:40Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:objectset.rio.cattle.io/applied: {}
            f:objectset.rio.cattle.io/id: {}
            f:objectset.rio.cattle.io/owner-gvk: {}
            f:objectset.rio.cattle.io/owner-name: {}
            f:objectset.rio.cattle.io/owner-namespace: {}
          f:labels:
            .: {}
            f:objectset.rio.cattle.io/hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"05695213-8822-42fc-a8f3-dcca40161736"}: {}
        f:spec:
          .: {}
          f:chart:
            .: {}
            f:metadata:
              .: {}
              f:apiVersion: {}
              f:appVersion: {}
              f:description: {}
              f:maintainers: {}
              f:name: {}
              f:type: {}
              f:version: {}
            f:values:
              .: {}
              f:affinity: {}
              f:debug: {}
              f:fullnameOverride: {}
              f:image:
                .: {}
                f:pullPolicy: {}
                f:repository: {}
                f:tag: {}
              f:imagePullSecrets: {}
              f:nameOverride: {}
              f:nodeSelector: {}
              f:podAnnotations: {}
              f:podSecurityContext: {}
              f:replicaCount: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:service:
                .: {}
                f:port: {}
                f:type: {}
              f:serviceAccount:
                .: {}
                f:annotations: {}
                f:create: {}
                f:name: {}
              f:tolerations: {}
          f:helmVersion: {}
          f:info:
            .: {}
            f:description: {}
            f:firstDeployed: {}
            f:lastDeployed: {}
            f:status: {}
          f:name: {}
          f:namespace: {}
          f:resources: {}
          f:values:
            .: {}
            f:fullnameOverride: {}
            f:image:
              .: {}
              f:tag: {}
          f:version: {}
      manager: rancher
      operation: Update
      time: "2024-08-06T11:55:33Z"
    - apiVersion: catalog.cattle.io/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          .: {}
          f:observedGeneration: {}
          f:summary:
            .: {}
            f:state: {}
      manager: rancher
      operation: Update
      subresource: status
      time: "2024-08-06T11:55:33Z"
    name: pcidevices-controller
    namespace: harvester-system
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: sh.helm.release.v1.pcidevices-controller.v2
      uid: 05695213-8822-42fc-a8f3-dcca40161736
    resourceVersion: "630211"
    uid: 6a2138c6-b5c0-4c8d-8db4-a0953ed35017
  spec:
    chart:
      metadata:
        annotations:
          catalog.cattle.io/managed: "true"
        apiVersion: v2
        appVersion: v0.3.2
        description: A Helm chart for Harvester PCI devices controller
        maintainers:
        - name: harvester
        name: harvester-pcidevices-controller
        type: application
        version: 0.3.2
      values:
        affinity: {}
        debug: false
        fullnameOverride: "null"
        image:
          pullPolicy: IfNotPresent
          repository: rancher/harvester-pcidevices
          tag: "null"
        imagePullSecrets: "null"
        nameOverride: "null"
        nodeSelector: {}
        podAnnotations: {}
        podSecurityContext: {}
        replicaCount: 1
        resources:
          limits:
            cpu: 50m
            memory: 300Mi
          requests:
            cpu: 20m
            memory: 200Mi
        securityContext:
          privileged: true
        service:
          port: 80
          type: ClusterIP
        serviceAccount:
          annotations: {}
          create: true
          name: "null"
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
    helmVersion: 3
    info:
      description: Upgrade complete
      firstDeployed: "2024-08-06T01:56:41Z"
      lastDeployed: "2024-08-06T11:55:31Z"
      status: deployed
    name: pcidevices-controller
    namespace: harvester-system
    resources:
    - apiVersion: v1
      kind: ServiceAccount
      name: harvester-pcidevices-controller
      namespace: harvester-system
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRole
      name: harvester-pcidevices-controller
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: ClusterRoleBinding
      name: harvester-pcidevices-controller
    - apiVersion: v1
      kind: Service
      name: pcidevices-webhook
      namespace: harvester-system
    - apiVersion: apps/v1
      kind: DaemonSet
      name: harvester-pcidevices-controller
      namespace: harvester-system
    values:
      fullnameOverride: harvester-pcidevices-controller
      image:
        tag: v0.3.2
    version: 2
  status:
    observedGeneration: 4
    summary:
      state: deployed
kind: List
metadata:
  continue: "null"
  resourceVersion: "770255"
