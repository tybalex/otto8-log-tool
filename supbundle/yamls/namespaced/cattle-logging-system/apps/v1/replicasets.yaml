apiVersion: v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: rancher-logging
      meta.helm.sh/release-namespace: cattle-logging-system
    creationTimestamp: "2024-08-06T01:56:42Z"
    generation: 1
    labels:
      app.kubernetes.io/instance: rancher-logging
      app.kubernetes.io/name: rancher-logging
      pod-template-hash: 77f858bbb7
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:meta.helm.sh/release-name: {}
            f:meta.helm.sh/release-namespace: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"34886e63-b55f-4b2f-94dc-0b525c4f68e1"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:labels:
                .: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/name: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"rancher-logging"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2024-08-06T01:56:42Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2024-08-06T01:56:44Z"
    name: rancher-logging-77f858bbb7
    namespace: cattle-logging-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: rancher-logging
      uid: 34886e63-b55f-4b2f-94dc-0b525c4f68e1
    resourceVersion: "7022"
    uid: 3b8de7f8-223c-4736-af75-983088d6c842
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/instance: rancher-logging
        app.kubernetes.io/name: rancher-logging
        pod-template-hash: 77f858bbb7
    template:
      metadata:
        creationTimestamp: "null"
        labels:
          app.kubernetes.io/instance: rancher-logging
          app.kubernetes.io/name: rancher-logging
          pod-template-hash: 77f858bbb7
      spec:
        containers:
        - args:
          - -enable-leader-election=true
          image: rancher/mirrored-banzaicloud-logging-operator:3.17.10
          imagePullPolicy: IfNotPresent
          name: rancher-logging
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: rancher-logging
        serviceAccountName: rancher-logging
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: cattle.io/os
          operator: Equal
          value: linux
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: "770286"
